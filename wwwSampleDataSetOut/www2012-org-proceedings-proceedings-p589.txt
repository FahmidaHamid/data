 

 

Thomas Lin* 

 

Active Objects: Actions for Entity-Centric Search 

Computer Science & Engineering  

University of Washington 

Seattle, WA, USA 

Patrick Pantel, Michael Gamon 

Microsoft Research 
One Microsoft Way 
Redmond, WA, USA 

Anitha Kannan, Ariel Fuxman 

Search Labs 

Microsoft Research 

Mountain View, CA, USA 

tlin@cs.washington.edu 

{ppantel,mgamon}@microsoft.com 

{ankannan,arielf}@microsoft.com 

 

ABSTRACT 
We  introduce  an  entity-centric  search  experience,  called  Active 
Objects,  in  which  entity-bearing  queries  are  paired  with  actions 
that can be performed on the entities. For example, given a query 
for a specific flashlight, we aim to present actions such as reading 
reviews, watching demo videos, and finding the best price online. 
In an annotation study conducted over a random sample of user 
query  sessions,  we  found  that  a  large  proportion  of  queries  in 
query  logs  involve  actions  on  entities,  calling  for  an  automatic 
approach to identifying relevant actions for entity-bearing queries. 
In this paper, we pose the problem of finding actions that can be 
performed on entities as the problem of probabilistic inference in 
a  graphical  model  that  captures  how  an  entity  bearing  query  is 
generated.  We  design  models  of  increasing  complexity  that 
capture latent factors such as entity type and intended actions that 
determine how a user writes a query in a search box, and the URL 
that they click on. Given a large collection of real-world queries 
and  clicks  from  a  commercial  search  engine,  the  models  are 
learned efficiently through maximum likelihood estimation using 
an  EM  algorithm.  Given  a  new  query,  probabilistic  inference 
enables  recommendation  of  a  set  of  pertinent  actions  and  hosts. 
We  propose  an  evaluation  methodology  for  measuring  the 
relevance  of  our  recommended  actions,  and  show  empirical 
evidence of the quality and the diversity of the discovered actions. 
Categories and Subject Descriptors 
H.3.3 [Information Search and Retrieval]: Retrieval models 
General Terms 
Algorithms, Measurement, Experimentation, Theory 
Keywords 
Actions,  Active  Objects,  Entity-Centric  Search,  Query  Log 
Mining, Web Search 
1.  INTRODUCTION 

Entities  are  central  to  a  large  fraction  of  Web  search  queries. 
Whether users seek to find information about an entity or transact 
on the entity (e.g., “[buy] toy story 3”, “[watch or listen to] obama 
weekly  address”),  understanding  the  underlying  query  intent  is 
key to providing a rich search experience. 

Web  search  today  has  already  taken  great  strides  away  from 
simple  query  word  matching.  For  example,  popular  entities  in 
 
*This work was conducted at Microsoft Research. 
 
Copyright  is  held  by  the  International  World  Wide  Web  Conference 
Committee (IW3C2). Distribution of these papers is limited to classroom 
use, and personal use by others. 
WWW 2012, April 16–20, 2012, Lyon, France. 
ACM 978-1-4503-1229-5/12/04. 

Figure 1. Search as an action broker. 

large  query  segments  (e.g.,  local,  entertainment,  shopping)  are 
routinely  recognized  in  queries  and  rich  direct  displays  are 
presented  to  users  by  filling  editorially-defined  templates  with 
associated structured data. For example, a query for “lion king” on 
Bing  yields  such  a  direct  display  consisting  of  an  image  of  the 
movie cover, showtimes at local theaters, the running time, genre, 
and  ratings  of  the  movie.  However,  since  the  focus  is  on  the 
dominant  actions,  the  search  engine  underserves,  for  instance,  a 
Netflix user seeking other actions such as adding the movie to her 
streaming  queue,  or  a  child  trying  to  find  a  toy  figurine.  In 
addition, a different movie such as Michael Moore’s most recent 
documentary  would  certainly  have  a  different  underlying  intent 
distribution. Also, actions associated with queries for tail entities 
such as flashlights or small vineyards are completely ignored. 

Search as an action broker: A promising future search scenario 
involves  modeling  the  user  intents  (or  “verbs”)  underlying  the 
queries and brokering the webpages that accomplish the intended 
actions.  In  this  vision,  the  broker  is  aware  of  all  entities  and 
actions of interest to its users, understands the intent of the user, 
ranks  all  providers  of  actions,  and  provides  direct  actionable 
results through APIs with the providers. For example, consider a 
user  who  queries  for  “jetbeam  rrt-0”,  a  flashlight.  The  broker, 
which maintains a collection of all possible actions on flashlights 
and  associated  websites  and  applications  that  can  accomplish 
those actions, would recognize the particular entity mentioned in 
the query, and would return a personalized ranked list of actions 
to the user. Figure 1 provides a simplistic illustration of how this 
user experience could look on a search results page. With actions 
present,  users  could  save  clicks  and  save  time,  and  sometimes 
even discover new actions to help them toward their goals. New 
revenue  streams  open  up  from  paid  action  placement,  lead 
generation, and on-site commercial transactions. 

This paper addresses several key questions that arise within this 
paradigm. Do Web queries tend to lend themselves to actions on 
entities?  What  does  the  space  of  actions  look  like?  And  most 
importantly,  given  a  query  with  an  entity  (e.g.,  identified  via  a 
technique  such  as  [18]),  how  can  a  search  engine  determine 
actions to recommend?  

WWW 2012 – Session: Leveraging User Actions in SearchApril 16–20, 2012, Lyon, France589We begin with
lo
ogs  from  Bing 
e
entities,  and  wh
actions that can b
a
The  main  pro
a
automatically  lea
A
An automated ap
p
possible  distinct 
a
actions. Also, ma
is
s  insufficient  f
a
account for conte
jo
obs”  and  “Micr
d
despite sharing th
s
same type can ha
F
Ferrari  may  hist
w
while queries for
c
car  value  site.  L
c
change over time
h
have different de
la
aunch, at launch
m
methods enables
s
set  of  query-cli
m
models, the most
a
actions,  textual  q
d
data. 

h an annotation 
to  determine  w
hether  these  qu
be performed on
oblem  that  we 
arn  relevant  act
pproach is neces
Web  queries  f
anually preparin
for  the  followin
ext words in qu
rosoft  software”
he same entity (M
ave different top
torically  lead  to
r a 1995 Ford hi
Last,  but  not  lea
e. For example, a
esired actions a y
h, and a month a
s frequent re-trai
ick  logs.  We  m
t complex of wh
query  contexts, 

study conducted
what  fraction  o
ueries  tend  to  m
n entities. 
address  in  this 
tions  for  an  enti
ssary because th
for  editors  to  m
ng top actions fo
ng  reasons.  Fir
eries, e.g., the q
”  should  lead  to
Microsoft). Seco
p actions, e.g., q
o  clicks  on  topc
istorically lead t
ast,  top  actions  f
a query for the n
year before laun
after launch. The
ining through a 
motivate  and  d
hich accounts fo
entity  types,  an

d over query-clic
of  queries  conta
map  to  particul

ck 
ain 
lar 

paper  is  how 
ity-bearing  quer
here are too man
manually  pair  wi
or just entity typ
rst,  it  would  n
queries “Microso
o  different  actio
ond, entities of th
queries for a 20
carwallpapers.co
o clicks on a use
for  an  entity  ma
next iPhone wou
nch, a week befo
e use of automate
more recent da
design  generativ
r queries, entitie
nd  historical  clic

to 
ry. 
ny 
ith 
pes 
not 
oft 
ns 
he 
12 
om 
ed 
ay 
uld 
ore 
ed 
ata 
ve 
es, 
ck 

• 

ate 
ng 
an 

in 
ual 
nd 
h a 

objects  paradigm
m. 
ers 
b actions for use
on 
duct  an  annotatio
arge proportion 
of 
on entities. 

to be addressed 
ctions to an actu
ble  to  recommen
We conclude with
rious models. 

We also explo
g
going from a the
e
end-to-end  searc
a
appropriate actio
user study evalua
u
The major con
•  Conceptu
We estab
to  perform
study wh
sampled q
•  Modeling
entity  b
informati
entity, an
Impleme
query dat
the  neces
system to
•  Experim
different 
most imp
2.  RELATE
2
Related work 
a
and  intents.  Wor
p
previous work on
2.1  Entity-C
2
As  proposed  i
o
on  creating  a 
in
nformation  avai
R
Researchers  hav
g
generation of top
ta
ailored  informa
s
search engines d
q
query). To the b
le
earning and pres

ore a number of i
issues that need 
eoretical generat
tive model of ac
ch  engine  comp
onent  that  is  ab
ons when given a
a new query. W
ating the perform
mance of our var
ntributions of our
r research are: 
ual:  We  introdu
uce  the  active  o
blish that there a
are specific Web
m  on  named  en
ntities.  We  cond
ich empirically 
verifies that a la
query-click pairs
s reflect actions 
g:  We  propose 
probabilistic  m
models  to  genera
ns, 
incorporatin
s 
from  action
bearing  queries
  types,  query  w
on  from  entity
words  around  a
 
nd clicked hosts. 
entation: We tra
ain our models o
ta from a comm
mercial search en
d  system  issues
ssary  end-to-end
itable actions for
o recommend sui
ental:  We  cond
duct  a  user-stud
models,  showin
ng  which  mode
ating actions. 
portant for genera
ED WORK 
that we build up
rk  that  we  diffe
n actions and top
Centric Sea
in  Dalvi  et  al.  [
“semantically  r
ilable  on  the  W
e  typically  focu
pic pages based 
ation  for  particu
displaying sports
est of our know
senting specific s

pon includes ent
erentiate  ourselv
pic modeling usi
arch 
[8],  Entity-Centr
rich  aggregate 
Web  for  each  c
used  on  techniqu
on entities (e.g
ular  entity  class
s scores when gi
wledge we are th
sets of actions fo

ric search  focus
view  of  all  th
concept  instance
ues  for  automat
g., [1] [20]), or o
ses  (e.g.,  popul
iven a sports tea
he first to propo
or each entity. 

on three months 
ngine, and addre
s  for  producing 
r new queries. 
dy  to  evaluate  o
l  components  a

tity-centric searc
ves  from  includ
ing query logs. 

ses 
he 
e”. 
tic 
on 
lar 
am 
ose 

of 
ess 
a 

our 
are 

ch 
des 

Figure
on Ent

e 2. Actions diff
tities, and are o

fer from Intents
often more speci

s: they must be 
ific and ground

 
performed 
ded. 

aimed to enume
popular  exampl
00K  categories
acebook  (85M+
m (125M produc
(approx.  400  t
he  identification

erate named 
les 
include 
s),  Freebase 
+  fan  pages 
cts covering 
types).  The 
n  of  entities 

[19] 

igher-level  inte
sociated  with  h
hape” (see Figur
or “getting in sh
mational,  navig
in  intents:  inform
n 
and  Levinson
furthe
into subcategor
igational intents 
hah [22] used se
ents. Yin and Sh
of  intent  phras
es,  and  Jansen 
ents. 
y queries into int
ns is at an even f
finer level. Actio
erformed on en
ntents that are p
iner-grained inte
ents (e.g., “down
) are not concret
(e.g., “interact”)
ueries  map  easi
  While  some  qu
ocation” in Figu
g, “sea world lo
ent  but  do  not 
have  a  clear  int
ot be associated w
with an action (e
g  of  multiple  a
ntents  consisting
ut of scope. 

nts  such  as 
re 2). Broder 
gational,  and 
er  divided 
ies resulting 
earch logs to 
et  al.  [15] 

ons are very 
ntities. Some 
nload”), but 
te enough to 
ly  into  both 
ure 2), there 
contain  any 
e.g., “how to 
actions  (e.g., 

their 

In re
entities
Wikipe
(20M  t
coverin
30  dep
presenc
within t
2.2  I
Quer
“planni
[3]  out
transac
informa
in 11 fi
organiz
studied
Our 
specific
actions
the maj
be  sugg
intents 
are  also
entity a
lose  we
“book t
2.3  A
Actio
robotic
the prim
of  actio
guide  t
when w
human 
“read  r
while  f
Netflix
address
2.4  U
Ther
modelin
Latent 
likeliho
Their  m
terms. 

ecent years, man
ny projects have 
ty
s  and 
ypes.  Some  p
ges  covering  8
edia  (3.6M  pag
g  2K  types),  Fa
topics  covering
es), Amazon.com
ng 206 categorie
d  Schema.org 
partments),  and
ce  of  these  list
ts  facilitates  th
ries [18].  
text [6] and quer
Intents 
ries  can  be  ass
ing a vacation” o
tlined  three  mai
ctional.  Rose 
ational and navi
finer-grained inte
ze  taxonomies 
d how to classify
notion of action
c versions of in
s overlap with fi
jority of intents 
gested  to  users.
and actions (e.g
o  queries  that  h
and hence canno
eight”).  Task  in
trip”) are also ou
Actions 
ons and action o
cs,  intelligent  ag
mary focus in th
ons  (with  pre-c
the  planning  pr
we refer to an ac
users to perform
reviews”  or  “do
for  those  that  d
x  account),  we 
sed based on info
Use of Prob
re  has  been  pri
ng user queries.
Dirichlet  Alloc
ood  of  the  mod
model  accounted
Gao  et  al.  [10

ontologies have b
gents,  and  philo
hose areas was to
conditions  and 
rocesses  of  inte
ction for Web sea
m over the Web.
ownload”)  have 
do  (e.g.,  “add  to
assume  that 
formation known
ability Mod
ior  work  in  usi
.  For example, 
cation  (LDA)  [
del  given  a  part
d  for  users,  clic
0]  adapted  stat

y explored in 
been previously
6]  [17]),  but 
sophy  (e.g.,  [16
ndardized set 
o develop a stan
)  that  could 
post-conditions)
elligent  agents. 
In  contrast, 
arch, we refer to
o actions for 
actions (e.g., 
 Most of these a
rerequisites, 
no  important  p
”  requires  a 
o  Netflix  queue”
the  preconditio
ons  can  be 
s.  
n about the users
dels  
ing  probability 
Carman et al. [
[2]  to  rank  doc
icular  query  an
cked  documents
tistical  machine

models  for 
[5] extended 
cuments  by 
nd  user  pair. 
s,  and  query 
e  translation 

WWW 2012 – Session: Leveraging User Actions in SearchApril 16–20, 2012, Lyon, France590ent titles are sem
ed  probability  m
ses  from  query
us  of  our  mode
tudies have not m
ATION STU
dy of entities an
cy-weighted  que
ach query to det
we can infer an a
he  query  and 
trends on such a
guide  for  our 
ection 4. 
fine an action as 
ervable,  direct  m
ty. 
eful in the contex
oarse and “drink
Web. Examples
” and “read revie

ns 
ify 
ork 
ng 

mantic translatio
models  to  identi
y  logs.  Our  wo
els  is  on  learnin
modeled. 
UDY  
nd actions in We
ery  sample  of  20
termine whether
action that the us
the  clicked  ho
a small sample se
automatic  actio

eb 
00 
r it 
ser 
st. 
et, 
on 

follows: 
manipulation  or
r 

xt of Web searc
k” is not an actio
s of useful actio
ews”. 

ch. 
on 
ns 

te
echniques to lea
o
of  queries.  Guo 
n
named  entities  a
d
differs  in  that  th
a
actions, a variabl
3.  ACTION
3
We begin with
s
searches.  We  co
q
query-click pairs
c
contains an entity
in
ntends  to  accom
A
Although one can
th
hese  results  wi
nduction models
in
Throughout th
Action:  An  e
information re
We target acti
For example, “in
F
th
hat can be accom
are: “buy”, “add 
a
3.1  Entities
3
We  divided 
p
presence  of  an 
c
contains  an  entit
w
website entity (U
F
Figure  3  summ
s
separating  out  w
“download Gold
“
o the entity or en
to
43% of the qu
efiner), 14% con
r
r
efiner),  28%  co
c
contain any entit
q
queries  where  th
le
eaves  57%  of  q
c
categories.  Non
e
entities.  Guo  et
c
contained  named
th
hey  consider  fr
c
classify  entity  c
e
entity, entity + r
with a proportion
w
Next, we exam
e
entities that we f
th
he Schema.org e
d
developed jointly
with the intent of
w
Within our sam

S
Schema.org top-
a
a  fairly  broad  c
s
software,  etc.  T
e
entity  sample.  T
g
government  orga
P
Product  at  9%, 
a
and the last 3% f
3.2  Actions
3
Next, we exam
a
associated  with 
w
whether the actio

arn how docume
et  al.  [11]  use
and  entity  class
he  primary  focu
le which other st
NS ANNOTA
h a manual stud
ollect  a  frequenc
s. We examine e
y and whether w
mplish  given  t
n only observe t
ill  serve  as  a 
s described in Se
his paper, we def
empirically  obse
equest on an enti
ions that are use
nteract” is too co
mplished on the 
to movie queue”
s in Queries 
queries  into  fo
entity  in  the  q
ty  category  (e.g
URL or website 
marizes  the  freq
whether  a  quer
denEye” with the
ntity category. 
ueries contain an 
ntain an entity c
ontain  a  referenc
ty. Website refer
he  user  intends 
queries  (43%  + 
ne  of  our  anno
t  al.  [11]  foun
d  entities,  althou
frequency  of  in
categories  and 
refiner, and web
n of entities in qu
mined the types 
found. For entity
entity taxonomy
y by Bing, Goog
f facilitating We
mple of entities
level category w
category  that  co
The  category  Or
The  Organization
anizations,  local
and  Person  typ
fell into other var
s in Queries 
mined how often
specific  action
ons in Web searc

our  groups  with
query:  (i)  contai
g.,  “car  battery”
name); and (iv)
quency  of  eac
ry  contains  ref
e refiner “down

h  respect  to  th
ins  an  entity;  (
”);  (iii)  contains
) all other querie
ch  group,  furth
finer  words  (e.g
load”) in additio

he 
ii) 
  a 
es. 
her 
g., 
on 

h a 
h a 
not 
nal 
ch 
ity 
ple 
ies 
her 
ey 
our 
up 

entity (29% by 
ategory (4% by 
ce  to  a  website,
rences often occ
to  visit  a  parti
14%)  that  have
otated  queries 
nd  that  71%  o
ugh  they  neither
ndividual  querie
website  entitie
bsite entity categ
ueries matching 
(or taxonomy c
y types, we refer 
, which is a coll
gle and Yahoo, d
b search over en
, we found that 
was CreativeWor
overs  all  books
rganization  cov
n  type  covers  h
l  businesses,  etc
e  at  8%.  Event 
rious types.  

itself, 14% with
itself, 10% with
,  and  15%  do  n
cur in navigation
icular  site,  whic
e  entities  or  enti
contain  multip
of  search  queri
r  specify  wheth
es,  nor  how  the
es.  Summing  o
gories, we end u
their results. 
categories) of th
to the top level 
lection of schem
designed explicit
ntities on the We
the most popul
rk at 40%. This 
s,  movies,  song
ered  37%  of  o
hotels,  restaurant
c.  There  was  al
type  covered  3

he 
of 
mas 
tly 
eb. 
lar 
is 
gs, 
our 
ts, 
so 
% 

n the queries in o
ns  on  entities. 
ch are enumerab

our sample can b
We  also  veri
le. 

be 
ify 

Figure 
queries
Right: D

3.  Left:  Entity
s  contained  en
Distribution of 

y  distribution  a
ntities,  and  14%
f entities into Sc

43%  of  the 
at  200  labels.  4
%  had  entity 
categories. 
chema.org types
s. 

We m

manually inferre
e  query  by exam
sample
s and possible re
entities
ty  of  cases,  this
majorit
(e.g.,  “yahoo  m
action 
“download”).  In
action 
clicked
d URL generally
ample,  a  query 
For  exa
/hobartcorp.com
“http://
ontact  informat
“get  co
e were ambiguou
sample
“GEICO
O 
insurance”-
ed  action  is  no
intende
ting  potential  a
interest
URL) a
and added them 
m our 200 queri
From
most popular ac
of the m
about”,  and  “sho
news  a
s include “find re
actions
Work
rking  through  th
s  dropped  from 
actions
labels  t
to  fewer  than  5
ts  that  there  is 
suggest
users p
erform in the co
4.  AU
UTOMATI
turn our attention
We t
derlying  action
the  und
recomm
mending  actions
ilistically  descr
probabi
ning an entity an
contain
earch users: Our 
Web se
hat influence the
types th
clicks
on  hosts.  Prob
learned
d  models  provi
s are learned by 
models
ollection of real-
large co
his section we pr
In th
Figure 
4). To generate
context and clic
query c
odeling entity ty
also mo
pose an extensio
we prop
er handle queries
to bette
h  query  q  is  rep
Each
ents  the  entity 
represe
respect
tively  the  pre-  a

ed the actions th
mining the  raw  q
efiner words), an
s  information  cl
messenger  down
n  the  absence  o
y gives a good s
for  “Hobart  co
m/Contact-Us/” in
tion”.  19  of  the
us with respect 
“www.geico.com
t  clear.  In  som
actions  (e.g.,  “s
to our inventory
es, we compiled
ctions included “
op  for”.  Less  co
ecipe for”, “find 
he  200  queries, 
over  20  distin
5  new  actions  fo
an  enumerable 
ontext of Web se
IC ACTION
n now to the tas
s  intended  in  W
s  given  new  qu
ribe  how  action
nd underlying act
models capture 
e terms in the us
babilistic  infere
de  actions  pert
maximizing the
-world queries a
resent two graph
e queries from ac
cked URLs. Mod
ypes, and explici
on to each mode
s with empty con
presented  by  a 
mentioned  in 
and  post-entity 

ctions. Some 
ame,” “read 
l  interesting 
et hours of”. 
rate  of  new 
the  first  50 
queries.  This 
actions  that 

ed with each 
hat are associate
consisting  of 
query  strings  (c
URLs. In the 
nd the clicked U
a  particular 
learly  indicated 
ndicates  the 
nload”  clearly  in
e  query,  the 
of  refiners  in  the
y the action. 
signal to identify
h  a  click  on 
orporation”  with
ended action 
ndicates the inte
pairs  in  our 
e  query/URL  p
to the intended 
action, e.g. 
th
he 
m”,  where 
specific 
ses  we  took 
me  of  these  cas
see  menu”  on  a
a  restaurant 
y of actions. 
d a list of 47 ac
“login,” “play ga
ommon  but  still
lyrics”, and “ge
our  discovery 
nct  actions  for 
or  the  last  50  q
primary  set  of 
earch. 
N INDUCTI
ks of automatica
Web  search  as 
ueries.  Our  app
nable  queries,  i
tion intent, are g
the latent action
ser queries and t
ence  in  the  co
tinent  to  the  q
e probability of 
and their clicked 
hical models (sum
ctions, our Mod
del 2 builds on
tly observing en
el that adds a swi
ntexts. 
triple  {n1,  e,  n
the  query,  n1
contexts  (possi

ION 
ally learning 
well  as  to 
proach  is  to 
i.e.,  queries 
generated by 
ns and entity 
the resultant 
orresponding 
queries.  The 
observing a 
hosts. 
mmarized in 
del 1 models 
Model 1 by 
ntities. Then, 
itch variable 

2},  where  e 
and  n2  are 
ibly  empty), 

WWW 2012 – Session: Leveraging User Actions in SearchApril 16–20, 2012, Lyon, France591r
eferred to as ref
w
who is interested
a
and who issues t
Here n1 = ∅, e =
H
w
we obtain our co
4.1  Model 1
4
The choice of 
th
he  intended  ac
“
“ebert”, and “opi
in
ntent  is  to  read
a
action  intents.  F
“
“epinions.com” 
h
has the intent to
a
and “ebay.com” 
4]  also  found 
[
classifying querie
c
Our  first  prob
th
hese  signals.  It 
a
action  from  a  d
c
choosing query c
host  c.  This  mo
h
q
query, and hence
g
generative proce
le
eft in Figure 4: 

finers. As a runn
d in reading a rev
the query “incep
= “inception” an
rpus are present
1 (context +
f refiner words in
ction.  For  exam
inion” are more 
d  a  review.  Hos
For  example,  c
and  “dpreview.c
o read reviews, w
are more likely 
hosts  associate
es. 
babilistic  graph
generates  action
distribution  ove
context words n
del  does  not  ex
e a query is repr
ss below summa

 

ning example, w
view about the m
ption review” to
nd n2 = “review
ed in Section 5. 
+ click) 
n a query is clea
mple,  words  su
likely to be use
st  clicks  are  als
clicks  on  “rott
com”  are  more 
whereas clicks o
for a buying in
d  with  queries 

we consider a us
movie “Inception
o a search engin
”. Details on ho

ser 
n”, 
ne. 
ow 

arly influenced b
uch  as  “review
d in a query if th
so  correlated  wi
tentomatoes.com
likely  if  the  us
on “bestbuy.com
ntent. Broder et a

by 
w”, 
he 
ith 
m”, 
ser 
m” 
al. 
in 

to  be  useful

hical  model,  Mo
nable  queries  by
er  a  set  of  lat
n1 and n2, and th
xplicitly  capture
resented by the 
arizes the model

ges 
odel  1,  leverag
an 
y  first  picking  a
en 
tent  actions,  the
n a 
hen clicking on
he 
e  the  entity  in  th
pair {n1, n2}. Th
he 
he 
l illustrated on th

el of actionable

 queries. 

Model 1: G
For each qu
action 
l-conte
r-conte
click c 

Generative mode
uery q 
a ~ Multinomial
ext n1 ~ Multinom
ext n2 ~ Multinom
~ Multinomial(

l(θ) 
mial(φa) 
mial(φa) 
ωa) 

 
In  our  running
m
model  first  gene
a
action  chooses 
generates a click 
g
The  joint  pro
c
conditional distri

g example  for  t
erates  the  action
the  refiner  wo
on a site such a
obability  of  the
ibutions, as give

he  query  “incep
n  “read  reviews”
ords  ∅  and  “r
s “rottentomatoe
e  model  is  the
n by: 

our 
his 
en 

ption  review”,  o
”,  then  given  th
review”  and  the
es.com”. 
e  product  of  th

he 

Fina
corresp
an  acti
generat
vector
parame

there  are 

ally,  we  assum
ponding to H We
ion.  Given  an 
ting  a  click  on 
ωa  such  that  Ω
eters across all K

me 
eb hosts. A click
action  a,  we 
host  c  is  a  mul
Ω =  [ω1,  …,  ω
K actions. In part

H  possible  cl
k on a host is de
assume  the  pro
ltinomial  with  a
ωK]  captures  the
ticular: 

 
lick  values, 
etermined by 
obability  of 
a  probability 
e  matrix  of 

Inferen
posterio
distribu
distribu
evaluat
configu
Learnin
and ide
corresp
θ, Φ, an
The log

nce:  Given  a  q
query,  we  apply
over the actions.
or distribution o
ution,  P(a|q,c),
, 
is  directly  p
ution.  We  can
n  exactly  com
for  every  valu
ting  the  joint 
uration of q and 
c. 
ing: Given a que
ery corpus Q co
entically distribu
uted queries (ea
d  hosts,  we 
ponding  clicked
mize  the  (log)  p
nd Ω that  maxim
g P(Q) can be w
written as: 

 
y  Bayes’  rule 
to  find  the 
the posterior 
. In particular, t
to
proportional 
o 
joint 
mpute 
this  distr
ribution  by 
ue  of  a  and  th
he  observed 

the 

nsisting of N in
dependently 
j
ach qj = {n1
j, n2
j}) and their 
estimate 
the 
parameters 
probability  of  ob
bserving  Q. 

 

 
In th
actions
(EM)  a
initializ
which P
are fixe
which t
comput
The 
derivati
the resu
posterio

he posterior distr
e  Expectation-M
rs.  Starting  with
erates between th
query (assuming
s M-step) and th
fixing Pj(a|q,c) t

on, Pj(a|q,c) is th
he above equatio
s  for  the  jth  que
ery.  We  use  the
algorithm  to  se
et  the  parameter
zation of the par
rameters, EM ite
Pj(a|q,c) is comp
mputed for each q
ed as computed 
in the previous
the parameters a
are updated by f
p. 
ted in the E-step
tained  by  com
pdates  are  obt
parameter  up
ive of log P(Q) 
each parameter,
with respect to 
given by the av
ultant to 0. The 
update for θ is 
: 
over the actions
or distributions o

ribution over 
Maximization 
h  a  random 
he E-step in 
g parameters 
he M-step in 
to the values 

mputing 
the 
, and setting 
verage of the 

 

 

Next, we defin
b
be the number of
is
s fixed in advanc
a
a multinomial di
p
probability of a p

ne each of the ter
f latent actions th
ce. Then, the pro
stribution with p
particular action 

rms in the joint d
hat govern our q
obability of actio
probability vecto
is given by: 

distribution. Let 
query log, where 
ons a is defined 
or θ, such that th

 
K 
K 
as 
he 

 

 

For a
of  the 
distribu

a fixed a, the up
context  word
utions over the a

date for φa is giv
ds,  where  the 
actions, for each 

ven by the weigh
weights  are  th
query. In particu

hted average 
he  posterior 
ular: 

 

 
where I is an ind
w
0
0 otherwise. 

Let V be the s
n
n1  and  n2.  Give
efiner  n  is  give
r
v
vector φa such th
a
actions: 

dicator function 

set to 1 if its con

ndition holds, an

nd 

 

shared vocabular
en  an  action,  a,
n  by  a  multinom
hat Φ = [φ1, …, 

ry size of all qu
,  the  probability
mial  distribution
φK] represents 

uery refiner wor
y  of  generating 
n  with  probabili
parameters acro

ds 
a 
ity 
oss 

 

 
Simi
distribu
updated
weights

ilarly,  we  can  u
ution over clicke
d by taking the w
s provided by th

update  Ω,  the  p
ed hosts for each
weighted averag
he posterior distr

parameters  that 
h action. For a f
ge of the clicked
ribution over the 

govern  the 
fixed a, it is 
d hosts, with 
 actions: 

 

 

WWW 2012 – Session: Leveraging User Actions in SearchApril 16–20, 2012, Lyon, France592F
Figure 4. Gener
e
entity type (t) an
4.2  Model 2
4
 The semantic 
s
strongly correlat
q
queried entity is 
ent it, view loca
r
h
however  that  th
a
address, or conn
is
s more likely fo
is
s more likely fo
th
he model can av
a
as “view stock pr
In addition, en
a
and  hence  we  e
ty
ypes.  Therefore
a
and  their  types. 
g
graphical  model
f
follows: 

rative models fo
nd the entity (e)
2 (context +
type of the entit
ted with the inte
a movie, the use
al showtimes, or
he  user  is  inter
necting to it. Sim
or a person entity
or a corporation
void recommend
rice” on a person
ntities themselve
xpect  them  to  b
,  in  this  model,
The  middle  dia
l.  The  generati

or actionable qu
), and Model 2+
+ click + typ
ty mentioned in 
ended action. Fo
er is likely to be
r buy theater tick
rested  in  hackin
milarly, a “read b
y and a “view s
n entity. By acco
ding incorrect ty
n entity. 
es are instances 
be  helpful  in  di
  we  explicitly  m
agram  of  Figure
ive  process  for

ueries. Model 1 
+ adds an empty
e + entity)
the query is ofte
or example, if th
 looking to buy 
kets. It is unlike
ng  it,  getting  i
biography” actio
tock price” actio
ounting for type
yped actions, suc

en 
he 
it, 
ely 
its 
on 
on 
es, 
ch 

of very few typ
isambiguating  th
model  the  entiti
e  4  illustrates  th
r  Model  2  is 

pes 
he 
ies 
he 
as 

el of actionable

 queries. 

 

Model 2: G
For each qu
type t ~
action 
entity e
l-conte
r-conte
click c 

Generative mode
uery q 
) 
~ Multinomial(τ
a ~ Multinomial
l(θt) 
e ~ Multinomial
(ψt) 
ext n1 ~ Multinom
mial(φa) 
ext n2 ~ Multinom
mial(φa) 
ωa) 
~ Multinomial(

 
Note  that  in  o
a
action is generate
c
choice of the ent
p
possible  for  a  p
a
assumption  betw
m
mathematical  co
p
parameter for ea
a
a huge number o
dependencies at t
d
For  our  runni
“f
“film”, then give
th
hen  generates  th
g
generate  the  pre
hen the click on 
th
The joint prob

he 
he 
are 
ce 
of 
a 
to 
ese 

our  generative  m
ed independently
tity also influen
particular  choice
ween  actions 
onvenience.  Oth
ch action-type-e
of parameters. In
the time of infer
ing  example,  M
n the type, it ge
he  action  “read
-  and  post-  con
a site such as “r
bability over the 

model,  we  are  a
y of the entity its
nces the subset o
e  of  the  type.  T
and  entities 
herwise,  we  re
entity configurat
nstead, we choos
rence, as describe
Model  2  first  g
enerates the entit
d  reviews”.  The 
ntext  words  ∅  a
rottentomatoes.c
model variables

assuming  that  th
self. However, th
of actions that a
The  independen
is  a  matter 
equire  learning
tion, giving rise 
se to include the
ed later. 
enerates  the  typ
ty “inception” an
action  is  used 
and  “review”,  an
com”. 
 is: 

pe 
nd 
to 
nd 

 

includes query
y context switch
Next
the num
is  gov
particul

y context words
h (s). Shaded cir
t, we describe e
mber of entity ty
verned  by  a  m
lar: 

s (n) and host cl
rcles are observ
each term in the
ypes. The proba
multinomial  with

licks (c), Model
ved variables. 
e joint probabilit
ability of generat
h  probability  v

l 2 adds the

ty. Let T be 
ting a type t 
vector  τ.  In 

 

 

Let 
generat
probabi
matrix 

E  be  the  numb
ting  an  entity 
ility  vector  ψt
of parameters ac

ber  of  known  e
e  given  type  t
such  that  Ψ  = 
cross all T types

entities.  The  pr
t  is  a  multinom
[ψ1,  …,  ψT]  c
s. In particular: 

obability  of 
mial  with  a 
captures  the 

Sinc
type,  it
such th

e actions are no
t  is  a  multinom
hat Θ = [θ1, …, θ

ow conditioned o
mial  distribution 
θT] represents pa

on types, for eve
with  probabilit
arameters across 

 
ery value of 
ty  vector  θt 
types: 

xt  words  and  c

Prior
remain 
Inferen
Bayes’
actions
quantity
and t, a
Duri
only  ce
Inceptio
probabi
configu
every e
use  Fre
strategy
distribu
multipl
Learnin
brevity
likeliho
Below,
equatio
model. 

r  distributions  o
unchanged as in
nce: Given a qu
rule to find the
s,  as  it  is  prop
y exactly by eva
and the observed
ing inference, w
ertain  admissibl
on, valid types i
ility  of  invalid 
urations) to zero
entity using an e
eebase  (see  Sec
y is that only va
ution. Thus the m
le of its valid pos
ing:  We  omit  th
y.  As  in  the  p
ood estimation o
,  in  the  interest 
ons  for  some  o
Other paramete

over  the  contex
n Model 1. 
uery, and the lea
e posterior distr
portional  to  P(
aluating the join
d values of q and
we also enforce 
le  types.  As  an
include film and
types  (and  hen
o. We obtain the
external knowle
ction  5.1).  A  d
alid ambiguities a
model can focus 
ssible senses (ty
he  log  probabili
previous  mode
of the parameter
of  space,  we  o
of  the  paramete
er updates are sim

arned model, w
ribution, P(a,t|q,
(a,t,q,c).  We  co
nt for each comb
d c. 
that for an entit
n  example,  if  th
d book. We set t
nce  the  relevant 
e set of admissib
edge base. In thi
desirable  side  ef
are captured in t
on capturing the
ypes). 
ity  of  the  query
el,  we  perform
rs using the EM
only  present  M-
ers  that  are  uni
milar in spirit to 

 
clicked  host 

we can apply 
c), over the 
ompute  this 
bination of a 

ty, there are 
he  entity  is 
the posterior 
type-action 
ble types for 
is paper, we 
ffect  of  this 
the posterior 
e actions for 

y  corpus  for 
m  maximum 
M algorithm. 
-step  update 
ique  to  this 
Model 1. 

 

WWW 2012 – Session: Leveraging User Actions in SearchApril 16–20, 2012, Lyon, France593 

 

 

 
4.3  Empty 
4
Generally in W
F
For example, use
th
han  by  adding 
s
schedule”. In fac
w
we noticed that 
th
he empty contex
w
words,  we  explic
v
variable  that  det
r
ightmost diagram
in
n Model 2, calle
1
1 and 2 can be au

Contexts 
Web search, mo
ers tend to query
refiners  such 
ct, upon inspecti
over 90% of th
xt. In order to s
citly  represent  t
termines  whethe
m in Figure 4 ill
ed Model 2+. The
ugmented as foll

 

Model X + 
For each qu

Switch: 
uery q 

 

 

ost query contex
y for “obama” fa
as  “support  ob
on of the Φ tabl
he probability  m
pread that mass
the  empty conte
er  a  context  wi
lustrates how we
e generative stor
lows: 

xts are left empt
ar more frequent
bama”  or  “obam
le for Models 1-
mass is covered  b
s to useful conte
ext  using  a  switc
ill  be  empty.  Th
e model the switc
ry for both Mode

ty. 
tly 
ma 
-2, 
by 
ext 
ch 
he 
ch 
els 

... 
l-conte
r-conte
switch 
switch 
if (s1) l
if (s2) r
… 

mial(φa) 
mial(φa) 
al(σa) 
al(σa) 

ext n1 ~ Multinom
ext n2 ~ Multinom
s1 ~ Multinomia
s2 ~ Multinomia
l-context n1 ~ M
r-context n2 ~ M

Multinomial(φa) 
Multinomial(φa) 

 
Incorporating 
m
model is straight

the  switch  int
forward. Below 

to  the  joint  pro
we show it for M

obability  of  eac
Model 2: 

ch 

The probabilit
given action a is 
g

ty of generating 
given by a Bern

an empty or non
noulli with param

n-empty context
meter σa: 

 
t s 

 

 

The M-step up

pdate function fo

or the switch par

 
ameter σ is: 

In  the  above
p
parameters  (Φ,Θ
in
ncluding type, a
B
Bayesian  approa
in
nstance, with Di
B
Bayesian  infere
in
ntractable  and 
v
variational  infer
u
unnecessary,  as 
e
estimate all the p

e  models,  we  l
Θ,Ω,τ,Ψ,σ) that 
actions, context, 
ach  and  treat  th
irichlet and Beta
ence.  However,
we  would  need
rence  or  samp
we  had  a  suffi
parameters well. 

learned  point  e
govern  the  vari
entities and click
hese  parameters 
a prior distributi
  exact  inferen
d  to  resort  to 
ling.  We  foun
cient  amount  o
In addition, our 

estimates  for  th
iables  of  intere
ks. One can take
as  variables  (f
ons), and perfor
nce  will  becom
methods  such 
nd  this  extensio
f  training  data 
approach enable

 
he 
st, 
e a 
for 
rm 
me 
as 
on 
to 
ed 

rform  inference 
learn  (and  per
us  to 
easonable compu
ts of data with re
amount
4.4  E
Action Diver
Enforcing A
using the EM a
raining Model 2
In tr
 often amounted
ptimal solutions 
local op
pecific types. Fo
ry strongly to sp
tied ver
ad  a  P(Action  |
type  ha
  Type)  of  95% 
istics.  While  it 
s  on  sports  stati
focuses
ed action (e.g., “
a good top-ranke
learns a
le to recommend
o want to be abl
we also
athlete type we 
s (e.g., for the a
queries
h  as  “Follow  on
op  actions,  such
next  to
ctures” and “Buy
phy”, “View Pic
Biograp
much  probability
absorbs  too  m
action 
ower-ranked  act
cally  that  the  lo
empiric
is clearly an ar
ility mass. This 
probabi
learning paradigm
m. 
based l
We r
ough a two-step
resolve this thro
EM iterations to
st step, we run E
the firs
o  not  involve 
that  do
the  entity  type
ws Model 2 to lea
eter). This allow
parame
y to query contex
closely
xts and clicked 
h additional EM 
ue learning with
continu
e Θ parameter. W
orithm learn the
the alg
reduces
amount  of  mass 
s  the  average  a
s,  which  in  tur
clusters
rn  leads  to  pro
oss actions and 
distributed acro
evenly 
action clusters. I
of the a
In one experime
the average top P
arning reduced t
step lea
48%  to
o  28%,  distribu
uting  the  mass 
s. 
actions
4.5  D
Decoding 
sider  a  runtime 
Cons
york city hotels”
“new y
follows
s. First, we run 
) to identify the 
or [18])
contexts as n1 = 
query c
nd  s2  =  false). 
true  an
y a distribution P
identify
click  f
for  this  query 
bility) of an actio
(probab

scenario  where
” is received. De
a named-entity 
 entity e = “new
∅ and n2 = “hot
  We  use  histor
P(c | q) over all 
in  the  past.  T
on a is then: 

with  large 

in) the  model 
uting time. 
rsity in Lear
algorithm, we fo
d to action cluste
or instance, the a
  into  an  action 
is  desirable  tha
“Retrieve Sports 
d a full range of
would also wan
n  Social  Networ
y Tickets to see”
y  mass,  we  oft
tions  do  not  gai
rtifact of the EM

rning 
ound that the 
ers that were 
athlete entity 
cluster  that 
at  the  model 
Statistics”), 
f actions for 
nt to see the 
rks”,  “Read 
”). If one top 
ften  observe 
in  sufficient 
M algorithm-

p procedure for 
o learn only the
e  (i.e.,  by  freez
arn action cluste
hosts. In a seco
iterations, now 
We found that t
for  the  top-ran
obability  mass 
ultimately to be
ent, we found th
P(Action | Type)
more  evenly  a

learning. In 
e parameters 
zing  the  Θ 
ers tied more 
ond step, we 
 also letting 
this strategy 
nking  action 
being  more 
etter ranking 
hat this two-
) value from 
across  other 

e  a  new  search
ecoding is acco
recognizer (e.g
w york city”. Thi
tels” (and switch
rical  search  qu
hosts c ∈ H tha
The  recommend

h  query  q  = 
mplished as 
g., from [11] 
is leaves the 
h values s1 = 
uery  data  to 
at received a 
dation  score 

The 
each  a
instanc
model 
Also,  i
then w
types a
each lat
an actio
4.6  C
The 
words 
action 
to the u
We  b
each ac

parameter Ω ca
action  a.  Note 
ce if observing a
can  still  recom
if  the  candidate 
we can return an 
are unknown, the
atent type. In bot
on distribution fo
Cluster Lab
action  clusters 
defined  by the 
into action reco
user (e.g., “read r
begin  by  exami
ction. The leftm

an be directly loo
that  if  no  clic
a query with a n
mmend  actions  u
types  of  an  am
action distribut
en we can return
th cases, we can 
for the query. 
beling: Web
discovered  by 
Φ  parameter.  W
ommendation ph
reviews” or “dow
ining  the  most  p
most word cloud

oked up to rank 
k  history  is  av
never before seen
using  its  other 
mbiguous  entity 
tion given each 
n an action distri
marginalize the 

 
hosts given 
vailable,  for 
n entity, the 
parameters. 
are  known, 
type. If the 
ibution over 
types to get 

 Action Phr
our  models  are
We  need  to  “tran
hrases that can b
wnload”).  
probable  contex
d in Figure 5 illu

rases 
e  clusters  of 
nslate” each 
be presented 

xt  words  for 
ustrates this 

WWW 2012 – Session: Leveraging User Actions in SearchApril 16–20, 2012, Lyon, France594Figure 5. To obtain Action Phrases we first identify top Web Action words from the action’s most likely context words. 

 

 

for  one  of  our  discovered  actions.  Clearly  this  is  a  cluster  that 
relates  to  downloading  free  software.1  We  then  tease  out  the 
“actions”  by  obtaining  a  list  of  verbs/action  words,  and  then 
intersecting this list against the context words in the clusters. 

Using  a  generic  verb  list  is  not  ideal  here  because  we  are 
restricted  to  actions  that  users  can  perform  on  the  Web,  many 
verbs  do  not  take  people  in  the  agent  role  (e.g.,  “merge”),  and 
generic verb lists often do not contain words that can be used as 
Web-based  actions  such  as  “blog”,  “podcast”  or  “torrent”.  To 
obtain a list of appropriate actions, we defined a few key lexical 
patterns  (similar  to  Hearst  [13])  that  generally  contain  action 
words, such as: 

 

 

“want to (x)”    “have to (x)”    “you can (x)”    “I can (x)” 
We then obtain the most frequent instances of (x) by applying 
these patterns against a large Web body-text trigram corpus. After 
filtering  out  adverbs  (using  21  additional  patterns,  designed  to 
catch adverbs in this corpus) and noise (the 25% of actions with 
the  lowest  frequency  /  unigram  count,  e.g.,  “a” and  “boy”),  this 
leaves us with a list of 13,417 action words. This list still contains 
a  number  of  actions  (e.g.,  “shock”  or  “kill”)  that  users  cannot 
perform over the Web, so we filtered it down to the 1,279 Web 
actions  that  also  occurred  with  the  pattern  “(x)  at  (y)”  in  our 
trigrams,  where  (y)  takes  the  form  of  a  website  URL  (e.g., 
“Amazon.com”).  Examples  of  the  most  popular  Web  actions 
include: “buy”, “review”, “shop” and “unsubscribe”. 

The  second  word  cloud  in  Figure  5  shows  P(n  |  a)  for  those 
contexts n that passed our filter. The third word cloud shows the 
remaining  words  when  Web  action  words  are  removed.  The 
resulting three word cloud types, illustrated in Figure 5, are used 
as  a  tool  for  a  human-annotation  task  to  specify  the  appropriate 
action phrases for each cluster. From our automatically generated 
word clouds of action words, non-action words, and the popular 
hosts  for  each  action  cluster,  we  found  it  easy  for  annotators  to 
specify  these  action  phrases.  In  future  work  we  will  explore 
techniques  for  fully  automating  this  process  of  learning  action 
phrases from action words. 
5.  EXPERIMENTAL RESULTS 
5.1  Data 

We  collected  several  months  of  queries  issued  to  Bing  and 
filtered them to retain only those that contain a signal for learning 
actions, by (i) removing any query that did not lead to a click and 
(ii) removing any query that did not contain an entity. 

We cover a large number of oft-queried entities by focusing on 
the most important entity types discovered in our query analysis 
                                                                  
1  Note  that  ‘@’  is  a  wildcard  for  any  digit.  Thus  “@.@”  is  a 

placeholder for software versions such as “3.1” or “2.0.” 

from  Section  3  (see  Figure  3).  Note  that  Schema.org  does  not 
provide  actual  instances  for  their  entity  taxonomy,  so  we  rely 
instead on Freebase for instances. We chose types from Freebase 
that  correspond  to  the  most  often  queried  types  in  Schema.org 
such as films, business operations, product lines and people. Since 
Freebase  is  a  fine-grained  knowledge  base,  we  also  included 
subtypes such as athletes, actors and politicians, for a total of 21 
total types (Table 1). The resulting sets account for approximately 
3.4 million entity instances after de-duplication. 

Accurate entity recognition is a difficult problem and at model 
application  time  one  needs  high  precision  and  high  recall  entity 
recognition and entity to type mappings (e.g., using methods such 
as  described  in  [7]  and  [21]).  For  our  model  training,  given  the 
large amount of available queries, we require only high precision 
entity recognition, so we turn to the following simple but effective 
method. We start by matching our query log with all our Freebase 
entity instances. To avoid problems like a query for “nice pants” 
getting  matched  to  the  city  “Nice”  in  France,  we  apply  an 
ambiguity  filter  on  the  capitalization  ratio  of  our  instances  and 
allow matches on only the entities that appear capitalized at least 
50% of the time in Wikipedia. To ensure that we do not match on 
substrings  within  entities  (e.g.,  if  “Harry  Potter”  is  the  correct 
entity but not in our database of entities, we do not want to match 
on  “Harry”  or  “Potter”  separately),  we  also  apply  a  standalone 
score filter [14] at 0.9, which calculates how often a string occurs 
as an exact match in queries relative to how often it occurs as a 
partial match. 

Table 1: 21 Freebase types used in our experiments. 

product line 
software 
person  
actor  
business operation 
travel destination  
university  

website 
consumer product 
comp/video game 
politician  
employer  
location  
sports facility  
For query contexts n1 and n2 defined in Section 4, although one 
could potentially use arbitrary n-gram context sizes, we keep only 
queries where the contexts are empty or consist of single words 
(accounting for a very large fraction of the queries). 

digital camera 
film 
athlete  
artist 
restaurant  
tourist attraction 
road  

We  define  a  navigational  query  as  one  where  the  user  only 
wants to navigate to a specific site and is unlikely to be interested 
in any other action presented to her. We automatically eliminate 
such  queries  from  the  training  set,  where  a  query  is  considered 
navigational  if  in  our  logs  it  is  associated  with  >1,000  clicks 
where  >98%  of  clicks  were  to  the  same  host  (~2%  of  our  data 
points). Finally, we eliminate entries with clicked hosts that have 
been clicked fewer than 100 times over our entire query log. 

After applying the filters described above, this yielded several 
million data points for training our models. Our data covers 235K 

WWW 2012 – Session: Leveraging User Actions in SearchApril 16–20, 2012, Lyon, France595Figure 6. Baseline Model. 

 

distinct  Freebase  entities,  129K  distinct context  words,  and  58K 
distinct click hosts. We refer to the resulting queries as actionable 
queries  and  denote  the  resultant  query  set  as  Q  according  to 
Section 4. 
5.2  Model Settings 

We trained our models with 50 action clusters, set according to 
our earlier annotation study in Section 3.2, which found that this 
would  give  us  good  coverage  over  the  main  actions  in  Web 
search.  Alternatively,  the  constraint  could  be  alleviated  by 
analyzing  the  semantic  similarity  between  context  words  in  the 
resulting  clusters,  or  by  using  techniques  similar  to  those  for 
finding the optimal k in k-means [12], or by other methods such as 
those  discussed  by  Blei  et  al.  [2].  We  conducted  our  two-step 
learning over 100 total EM iterations, running 2 folds per model.  
5.3  Experimental Configurations 

We used three test sets for our study: 
•  HEAD:  100  queries  from  a  frequency-weighted  random 

query sample of Q. 

•  TAIL: 100 queries from a uniform random sample of Q. 
•  Type-Balanced: 16 queries obtained as follows: Sampling 
starts  from  a  frequency-weighted  sample  of  Q,  but  during 
sampling, we only admit new queries to the test set if they 
cover a type that has not been covered yet.  

The HEAD sample was used to test expected user impact in a 
Web  search  scenario  whereas  the  TAIL  sample  tests  how  our 
method applies to rare entities. Whereas manually curated models 
could potentially address a large portion of head queries, only an 
automated  method  can  model  the  tail.  In  our  TAIL  sample,  we 
noticed that the entities were skewed towards the person type. We 
introduced the Type-Balanced set to test our model performance 
over a broad set of entity types, including less common types such 
as university and tourist attraction. 

Finally, we report our results against the following models: 
•  Baseline: Simpler version of Model 1 that uses only query 
context words as observed variables, illustrated in Figure 6. 

•  Models 1, 2: As described in Section 4. 
•  Model 2+: Model 2 with the Empty Switch as described in 

Section 4.3 and illustrated on the right in Figure 4. 

There are 12 resulting experimental configurations. 

5.4  User Study 

We conducted a user study for each experimental configuration 
to determine relative effectiveness at discovering and suggesting 
actions. The goals of the study are to assess the following: 

Figure  7.  Normalized  Discounted  Cumulative  Gain  (nDCG)
for  each  experimental  configuration  from  Section  5.3,  with
95%  confidence  bounds.  The  addition  of  types  and  entities
(Model  2)  had  the  largest  effect,  followed  by  clicked  hosts
(Model 1) and then empty switch (Model 2+). 

• 

End-to-end application results: Given a new query, the 
model should be able to recommend actions that are of 
interest to users. 

is 

The 

interesting  because 

•  Diversity: The model should learn a comprehensive set 
of user intended actions, not just a few common actions. 
it  deepens  our 
latter  goal 
understanding  of  the  actions  that  Web  search  users  most 
commonly perform, and a diverse set of actions internally could 
also be indicative of the ability to perform well on less common 
queries and on queries whose entities belong to less popular types.  
Annotation  Guidelines:  To  measure  whether  the  recommended 
actions  are  of  interest  to  users,  we  adopt  a  PEGFB  graded 
relevance scale similar to Web search [9]. In our case, we define 
the grades as:  

• 

Perfect action: Exactly the explicit intent of the user as 
stated in the query. (only used for queries with context) 
•  Excellent action: The presumed likely intent of the user 

as stated in the query. 

•  Good  action:  Likely  to  be  interesting  to  the  user, 

although not the stated intent. 

•  Fair action: Possibly of interest to some users who issue 

•  Bad action: Unlikely to be of interest to any user who 

the query. 

issues this query. 

We employed a total of seven paid independent annotators for 
grading  the  actions  suggested  in  each  configuration.  For  each 
action, two annotations were obtained. Inter-rater agreement using 
Fleiss’  κ  was  0.28  (fair  agreement)  when  the  P,  E,  G  relevance 
judgments  were  collapsed.  Note  that  there  is  some  amount  of 
subjectivity in ratings, especially for queries with no context. For 
example, on a query for “Obama”, some annotators felt that the 
“Watch videos about” action is Good, while others felt it is Fair. 
When exact ratings differed, they still tended to be close in rank. 
Annotators were also allowed to specify and skip labeling any test 
query  that  was  judged  navigational  or  that  contained  entity 
recognition errors. This occurred in 16.5% of the test cases. 

For each query set, each model configuration was set to return 

up to seven actions to be judged according to our PEGFB scale. 
5.5  Experimental Results 

The results (using P=5, E=4, G=3, F=2, B=1) from our model 
configurations  are  summarized  in  Figure  7.  The  evaluation 
measure is Normalized Discounted Cumulative Gain (nDCG) on 
the top-7 suggested actions per model.  

WWW 2012 – Session: Leveraging User Actions in SearchApril 16–20, 2012, Lyon, France596Table 2. A
Entity: “We

eline (context) 
orrent 
ead biography 
nd adult pictures o
of 

Watch videos 
ee picture of 
et quotes from 
pply for jobs at 

Actions recomm
ebster Universit
Model 
1.Torre
2.Read 
3.Read 
4.See p
5.Apply
6.Get q
7.See v

mended by the va
ty”     Context: 
1 (+click) 
ent 
biography 
news about 
ictures of 
y for jobs at 
quotes from 
videos with 

arious models f
(∅, ∅)     Type
Model 2 (+
1.Read rev
2.See map
3.Follow s
4.Get weat
5.Apply fo
6.Find add
7.See tuitio

for the query “W
es: employer, un
+type, +entity) 
views of 
p of 
sports teams of 
ther in 
or jobs at 
dress of 
on of 

Webster Univer
rsity” 
niversity, and lo
ocation 
Model 2+ (+s
witch) 
ss 
1.Find addres
s of 
2.See picture
3.Find map o
of 
about 
4.Read news 
5.Apply for j
obs at 
6.See cost of 
f
7.See ranking
g of 

Base
1.To
2.Re
3.Fin
4.W
5.Se
6.Ge
7.Ap

Figure 8. Me

ean relevance at

t action rank fo

or our models. 

 

 

For all query s
o
over  the  baseline
f
for learning accu
(
Model  2)  prove
s
significant releva
th
he empty switch
r
elevance, howev
f
for this model to
Model 2+ learns a
M
Figure 8 show
a
action  for  head 
m
model  and  Mode
r
ank  increases  (i
m
models  show  a 
b
believe  that  sin
c
context  words,  t
le
earned over eac
T
This manifests it
th
he  entity  being 
in
nformation para
a
are  too  high  to
s
sources is necess
5.5.1  Error A
5
Table 2 illustr
th
he  random  qu
c
contexts.  The  B
c
context)  has  no 
o
other  than  its  ac
p
popular general a
to
o fit the more co
ty
ype-balanced se
  
                         
2 
For  the  query 
model is able t

sets, addition of 
e  because it  pro
urate clusters. A
es  to  be  the  mo
ance improveme
h (Model 2+) doe
ver in the Type
o perform better
a more diverse s
ws Mean Relevan
queries.  Some
el  1  show  an  in
indicating  a  ran
steady  but  slig
nce  many  queri
the  Baseline  m
h action cluster 
tself as a static li
queried.  Mode
meter Ω, but the
o  overcome.  Su
sary to overcome
Analysis 
ates action recom
uery  “Webster 
Baseline  model 
information  to 
ction  priors,  and
actions it learned
ommon types, so
et, which contain
                         
with  context, 
o recommend ac

the click host (M
ovides  an additio
Adding entity typ
ost  important  s
ent across evalua
es not significan
e-Balanced set w
r. In Section 5.5
set of clusters tha
nce as a function
ewhat  surprising
ncrease  in  mean
nking  deficiency
ght  decline.  Upo
ies  do  not  con
model  reverts  to 
(the θ paramete
ist of actions tha
el  1  does  have 
e prior on the firs
upport  from  m
e the prior. 

ves 
Model 1) improv
nal 
onal  useful  sign
ies 
pe and the entiti
of 
ignal  in  terms 
ng 
ation sets. Addin
all 
ntly impact overa
cy 
we see a tendenc
hat 
5.2, we show th
. 
an other models.
an 
n of the rank of a
ne 
gly,  the  Baselin
he 
n  relevance  as  th
),  while  the  oth
her 
we 
on  inspection,  w
ng 
ntain  surroundin
the  prior  that 
it 
es. 
er) in those case
to 
at is impervious 
ck 
access  to  a  clic
n θ 
st two actions in
multiple  constrai
int 

mmendations fro
University”,  w
(which  only  m
use  for  recomm
d  therefore  recom
d from its trainin
o baseline score
ns fewer commo
             
“download  Sky
ctions “download

om our models f
which  has  emp
models  action  an
mending  an  actio
mmends  the  mo
ng set.2 These ten
s are lower on th
on types. Model

for 
pty 
nd 
on 
ost 
nd 
he 
l 1 

ype,”  the  baselin
ne 
.” 
d” and “login to

 

given type 

Figure 
more e
does  a 
still  rec
(e.g., “
type. M
One 
that we
entities
School”
school
modele
only as
actions
problem
Note
of  the 
exampl
the  tou
action c
sparser
keeping
and ath
that thi
This  su
discove
and  the
training
incorpo
5.5.2
In  a
desirab

e 9. Model 2+ dis
evenly across ac
little  better  by 
commends  actio
“read biography”
Models 2 and 2+ r
source  of  error
e used did not in
s  in  the  data.  Fo
”, interesting ac
type. However,
ed  types,  our  m
s an employer an
s  are  more  gene
m by expanding 
e also that among
types  have  hig
le, the person ty
urist  destination
clusters optimiz
r types. We did 
g  elements  of  th
hlete) with the t
is led to each of
uggests  that  to 
er actions based
en  either use  tho
g  with  those  ac
orates type-subty
Action Clust
addition  to  the 
ble for a model t

ability of action 
stributes proba
del 2. 
ctions than Mod
prior  click  infor
incorporating  p
t  apply  to  the  e
ons  that  do  not
model does not 
”) because the m
sonable sets of a
recommend reas
ose  from  how  t
r  we  noticed  aro
ary types of a nu
nclude the prima
the  query  “Jeff
or  example,  for 
ostly be centere
ctions would mo
school is not am
, because high s
e  “Jefferson  Hi
models  recogniz
nd a location. As
s a result, the re
be  possible  to  a
eral.  It  should  b
modeled types. 
the number of m
se entity types w
g the 21 Freebas
frequency  than 
gher  query  log 
more entries in th
ype has many m
n  type.  This  lea
ads  to  our  mod
d the popular typ
zed more toward
ng the training d
explore balancin
ype  (artist,  polit
he  people  subty
ally represented
types fairly equ
aving more actio
f those types ha
er  types,  we  m
address  sparse
ced subsets of th
d on type-balanc
nitialize  clusters
ose  actions  to  i
ctions,  or  devis
e  a  hierarchica
. 
ype information.
ter Quality 
  end-to-end  ap
to learn a good,

pplication  goal,
 diverse set of a

rmation,  but 
entity’s  type 
account for 
actions. 
the  21  types 
umber of the 
fferson  High 
ed on a high 
mong our 21 
igh  School” 
commended 
alleviate  this 

we use, some 
others.  For 
he data than 
dels  learning 
pes than the 
data by only 
tician,  actor 
d, and found 
on diversity. 
may  want  to 
he data first, 
s  in  the  full 
al  setup  that 

,  it  is  also 
actions. One 

WWW 2012 – Session: Leveraging User Actions in SearchApril 16–20, 2012, Lyon, France597typed 

metric for visualizing this is to graph “Total P(Action | Type)” as 
a function of “Cluster Rank,” as in Figure 9. This illustrates the 
distribution of probability mass across the cluster ranks. Here we 
only compare Models 2 and 2+, because Model 1 does not model 
entity type. Given that we used 21 total types, the maximum value 
would  be  2100%  (if  all  21  types  mapped  100%  to  one  cluster). 
Model 2 appears to have six primary action clusters that receive 
the majority of the probability from types, while Model 2+ learns a 
much more diverse set of actions clusters, which we also observed 
by inspecting the word clouds in the Φ parameter. 

Note that only learning 6 primary action clusters does not mean 
that Model 2 can only recommend up to 6 distinct action phrases. 
First,  the  remaining  clusters  do  have  nonzero  weight  and  can 
contribute action phrases. Second, individual action clusters may 
contain  a  mixture  of  action  phrases.  For  example,  one  of  the 
Model  2  clusters  contains  actions  for  “read  biography”,  “find 
lyrics” and “download file” all within the same cluster. This does 
not  cause  type  mismatches  at  decoding  time  because  action 
phrases  are 
file”  will  only  be 
recommended  when  the entity  is  of  a  type it applies to,  such  as 
software  type),  but  it  does  limit  the  ability  of  the  models  to 
discover  and  refine  good  action  clusters  specifically  around  the 
less common actions. The lower ranked clusters within Model 2+ 
do look very coherent around specific actions, for example, “read 
biography” is in a cluster only with related terms such as “facts”, 
“childhood” and “timeline” while “download” is in a cluster with 
related terms like “software”, “install” and “free”. 
6.  CONCLUSIONS 

(e.g.,  “download 

We  proposed  the  notion  of  actions  in  Entity-Centric  Search. 
We conducted an annotation study on query log data to gauge the 
prevalence of entities and associated actions in Web search. We 
developed generative models to learn latent actions from queries, 
and we implemented them over large real-world query logs. We 
experimentally showed that modeling click hosts and entity types, 
along with query context words, yields high relevance on the task 
of action recommendation, and that explicitly representing empty 
contexts greatly improves action diversity. Finally, we addressed 
various  issues  for  developing  an  end-to-end  system  for  actions, 
and  we  are  now  able  to  automatically  recommend  good  sets  of 
actions for users issuing new queries. 

Future  research  directions  include  expanding  the  number  of 
entity  types  and  modeling  actions  for  “entity  category”  queries 
(e.g., “shoes”). Additionally, we believe that our current random 
initialization of action clusters can be improved upon by seeding 
the clusters with some prior knowledge. We are also considering 
adding a user model to our approach in order to better target user-
specific actions. For the “Webster University” query in Table 2, 
for example, actions such as “read reviews of” and “see rankings 
of” are more suited for prospective students, while “see map of” 
and “follow sports teams of” are a better fit for current students. 

This work takes first steps towards the larger vision of search as 
an action broker outlined in the introduction. We envision a world 
where  publishers  can  tag  (automatically  or  manually)  their  Web 
pages  and  native  applications  with  the  actions  that  they  can 
accomplish; a world where users’ intended actions can be inferred 
and executed seamlessly via connections to these providers. Only 
then will entities become, truly, active objects. 
7.  ACKNOWLEDGMENTS 

The  authors  thank  Omar  Alonso  for  implementing  the  user 
study for our evaluation as well as Oren Etzioni, Larry Heck, Rico 
Malvar, and Jan Pedersen for valuable discussions. 

8.  REFERENCES 
[1]  Balasubramanian, N. and Cucerzan, S. Topic Pages: An 
Alternative to the Ten Blue Links. In IEEE-ICSC (2010). 

[2]  Blei, D.M., Ng, A. and Jordan, M. Latent Dirichlet 

Allocation. In Journal of Machine Learning Research, 
3:993-1022, (2003). 

[3]  Broder, A. A Taxonomy of Web Search. SIGIR Forum, 

volume 36 number 2 pages 3-10 (2002). 

[4]  Broder, A., Fontoura, M., Gabrilovich, E., Joshi, A., 

Josifovski, V., Zhang, T. Robust Classification of Rare 
Queries Using Web Knowledge. In SIGIR (2007). 

[5]  Carman, M.J., Crestani, F., Harvey, M., and Baillie, M. 
Towards Query Log Based Personalization using Topic 
Models. In Proceedings of CIKM (2010). 

[6]  Cucerzan, S. Large-Scale Named Entity Disambiguation 

Based on Wikipedia Data. In Proceedings of EMNLP (2007). 
[7]  Curran, J. R. and Clark, S. Language independent NER using 

a maximum entropy tagger. In CoNLL, pp. 164-167 (2003). 
[8]  Dalvi, N., Kumar, R., Pang, B., Ramakrishnan, R., Tomkins, 

A., Bohannon, P., Keerthi, S., Merugu, S., A Web of 
Concepts. In Proceedings of PODS (2009). 

[9]  Dupret, G. and Piwowarski, B. A User Behavior Model for 

Average Precision and its Generalization to Graded 
Judgments. In Proceedings of SIGIR, pages 531-538 (2010). 

[10] Gao, J., Toutanova, K. and Yih, W. Clickthrough-Based 

Latent Semantic Models for Web Search. In Proceedings of 
SIGIR (2011). 

[11] Guo, J., Xu, G., Cheng, X. and Li, H. Named Entity 

Recognition in Query. In Proceedings of SIGIR, pages 267-
274 (2009). 

[12] Hamerly, G. and Elkan, C. Learning the K in K-Means. In 

Proceedings of the 7th Annual Conference on Neural 
Information Processing Systems (NIPS) (2003). 

[13] Hearst, M. Automatic Acquisition of Hyponyms from Large 

Text Corpora. In Proceedings of COLING (1992). 

[14] Jain, A. and Pennacchiotti, M. Domain-Independent Entity 
Extraction from Web Search Query Logs. In WWW (2011). 
[15] Jansen, B.J., Booth, D. and Spink, A. Determining the User 

Intent of Web Search Engine Queries. In WWW (2007). 

[16] Kemke, C. and Walker, E. Planning with Action Abstraction 

and Plan Decomposition Hierarchies. In IAT (2006). 

[17] Metzinger, T. and Gallese, V. The Emergence of a Shared 

Action Ontology: Building Blocks for a Theory. In 
Consciousness and Cognition, 12, 549-571 (2003). 

[18] Pantel, P. and Fuxman, A. Jigs and Lures: Associating Web 

Queries with Structured Entities. In ACL (2011).  

[19] Rose, D. E. and Levinson, D. Understanding User Goals in 

Web Search. In Proceedings of WWW (2004). 

[20] Sauper, C. and Barzilay, R. Automatically Generating 
Wikipedia Articles: A Structure-Aware Approach. In 
Proceedings of ACL (2009). 

[21] Sekine, S. and Suzuki, H. Acquiring Ontological Knowledge 

from Query Logs. In Proceedings of WWW (2007). 

[22] Yin, X. and Shah, S. Building Taxonomy of Web Search 

Intents for Name Entity Queries. In WWW (2010).

WWW 2012 – Session: Leveraging User Actions in SearchApril 16–20, 2012, Lyon, France598