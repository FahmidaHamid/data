Strategyproof Mechanisms for Competitive Inﬂuence in

Networks

Allan Borodin

Dept of Computer Science

University of Toronto, Ontario,

Canada

Mark Braverman

Dept of Computer Science

Princeton University,

Princeton, USA

Brendan Lucier
Microsoft Research
New England, USA

brlucier@microsoft.com

bor@cs.toronto.edu

mbraverm@cs.princeton.edu

Joel Oren

Dept of Computer Science

University of Toronto, Ontario,

Canada

oren@cs.toronto.edu

ABSTRACT
Motivated by applications to word-of-mouth advertising, we
consider a game-theoretic scenario in which competing ad-
vertisers want to target initial adopters in a social network.
Each advertiser wishes to maximize the resulting cascade of
inﬂuence, modeled by a general network diﬀusion process.
However, competition between products may adversely im-
pact the rate of adoption for any given ﬁrm. The resulting
framework gives rise to complex preferences that depend on
the speciﬁcs of the stochastic diﬀusion model and the net-
work topology.

We study this model from the perspective of a central
mechanism, such as a social networking platform, that can
optimize seed placement as a service for the advertisers. We
ask: given the reported demands of the competing ﬁrms,
how should a mechanism choose seeds to maximize overall
eﬃciency? Beyond the algorithmic problem, competition
raises issues of strategic behaviour: rational agents should
not be incentivized to underreport their budget demands.

We show that when there are two players, the social wel-
fare can be 2-approximated by a polynomial-time strate-
gyproof mechanism. Our mechanism is deﬁned recursively,
randomizing the order in which advertisers are allocated
seeds according to a particular greedy method. For three or
more players, we demonstrate that under additional assump-
tions (satisﬁed by many existing models of inﬂuence spread)
e
e−1 -approximation mech-
there exists a simpler strategyproof
anism; notably, this second mechanism is not necessarily
strategyproof when there are only two players.

Categories and Subject Descriptors
J.4 [Social and Behavioral Sciences]: Economics; F.2.2
[Analysis of Algorithms and Problem Complexity]:
Nonnumerical Algorithms and Problems

Keywords
Social networks; Inﬂuence spread; Mechanism design

Copyright is held by the International World Wide Web Conference
Committee (IW3C2). IW3C2 reserves the right to provide a hyperlink
to the author’s site if the Material is used in electronic media.
WWW 2013, May 13–17, 2013, Rio de Janeiro, Brazil.
ACM 978-1-4503-2035-1/13/05.

1.

INTRODUCTION

The concept of word-of-mouth advertising is built upon
the idea that referrals between individuals can lead to a
contagion of opinion in a population. In this way, a small
number of initial adopters can generate a cascade of inﬂu-
ence, signiﬁcantly impacting the adoption of a new prod-
uct. While this concept has been very well studied in the
marketing and sociology literature [14, 23, 5, 11, 7], recent
popularity of online social networking has made it possible
to obtain rich data and directly target individuals based on
network topology. Indeed, a potential advantage of adver-
tising served via online social networks is that the platform
could preferentially target central individuals, impacting the
overall eﬀectiveness of its advertisers’ campaigns.

Various models of network inﬂuence spread have arisen re-
cently in the literature, with a focus on the algorithmic prob-
lem of deciding which individuals to target as initial adopters
(or “seeds”) [15, 16, 19]. One commonality among many of
these (stochastic) models is that the expected number of
eventual adopters is a non-decreasing submodular function
of the seed set. This implies that natural greedy methods
[20] can be used to choose initial adopters to approximately
maximize an advertiser’s expected inﬂuence. Of course, ac-
tually applying such algorithms requires intimate knowledge
of the social network, which may not be readily available to
all advertisers. However, the owners of the network data
(e.g. Facebook or Google) could more easily ﬁnd potentially
inﬂuential individuals to target. Our goal is to study the
problem faced by a network platform who wishes to provide
this service to its advertisers.

Consider the following framework. An online social net-
work platform sells advertising space by contract, oﬀering a
price per impression to advertising ﬁrms. Each ﬁrm has an
advertising budget, which determines a number of ad im-
pressions they wish to display. As an additional service to
the ﬁrms, the platform attempts to optimize the placement
of advertisements so to maximize inﬂuence diﬀusion. This
optimization is to be provided as a service to the advertis-
ers, with the primary goal of making the social network more
attractive as a marketing platform. The network provider
thus faces an algorithmic problem: maximize the total in-
ﬂuence of the advertisers given their demands (i.e. number
of impressions). This problem may be complicated by com-

141petition between advertisers, which results in negative ex-
ternalities upon each others’ product adoptions. Moreover,
since advertising budgets are private, there is also a game-
theoretic component to the problem: the placement algo-
rithm should not incentivize ﬁrms to reduce their budgets.
This may happen if, due to eccentricities of the algorithm,
lower-budget advertisers might obtain higher expected in-
ﬂuence than advertisers with higher budgets.

Crucial to this problem formulation is the way in which in-
ﬂuence is modeled by the advertising platform. We present
a general submodular assignment problem with negative ex-
ternalities, which captures most previous inﬂuence mod-
els that have been proposed in the literature [6, 2, 4, 13].
Within this framework, we consider the optimization prob-
lem faced by a central mechanism that must determine the
seed nodes for each advertiser, given the advertisers’ bud-
get constraints. The goal of the mechanism is to maximize
the overall eﬃciency of the marketing campaigns, but the
advertisers are strategic and may underreport their budget
demands to increase their own product adoption rates.

Two points of clariﬁcation are in order. First, our formu-
lation diﬀers from a line of prior work that studies equilibria
of the game in which each advertiser selects their seed set di-
rectly [13, 2]. Such a game supposes that each advertiser has
detailed knowledge of the social network topology, the abil-
ity to compute or converge to equilibrium strategies, and the
power to target arbitrary individuals in the network. Our
work diﬀers in that we assume that the targeted advertising
goes through an intermediary (the social network), which
selects seed sets on the players’ behalf.

Second, we suppose that advertiser budgets and the price
per impression are set exogenously (or, alternatively, that
the seeds correspond to special oﬀers or other interventions
of limited quantity). As such, we do not explicitly model the
problem of maximizing revenue; rather, the role of our mech-
anism is to decide where to place the purchased impressions.
In this sense our framework is closer in spirit to matching
algorithms for display advertising [10, 9] than to revenue-
optimal mechanism design. There are many ways in which
this model could be enriched, such as by endogenizing bud-
gets or allowing complex pricing schemes that depend upon
expected inﬂuence. We leave these as avenues for future
work, though we note that such extensions presuppose that
agents have suﬃcient knowledge of the spread process and
graph topology to accurately value initial adoption sets.

Our model of competitive inﬂuence spread is described
formally in Section 2. Our formulation captures and ex-
tends many existing models of inﬂuence spread, allowing in-
corporation of features such as node weights, player-speciﬁc
spread probabilities, and non-linear selection probabilities.
A more detailed discussion appears in Appendix A.

We wish to design mechanisms that are strategyproof,
in that rational agents are incentivized to truthfully reveal
their demands. In particular, an agent should not be able
to increase its expected inﬂuence by reducing its requested
number of seeds (i.e. budget). The diﬃculty in avoiding such
non-monotonicities is that the expected outcome of an ad-
vertiser can be negatively impacted by externalities imposed
by the allocation to its opponents, which can depend on the
budget declarations in a non-trivial manner.

Our Results: We design three diﬀerent strategyproof
mechanisms for the competitive inﬂuence maximization prob-

lem, for use in varying circumstances. Our main result is a
2-approximate strategyproof mechanism for use when there
are two competing advertisers, under a very general model
of inﬂuence spread. This mechanism uses a novel technique
for monotonizing the expected utilities of the agents using
geometric properties of the problem in the two-player case.
Our construction is based upon a greedy algorithm for
submodular function maximization subject to a partition
matroid constraint, known as the locally greedy algorithm
[20, 12]. This algorithm repeatedly chooses an agent in each
round, and assigns a node to that agent in order to maxi-
mize the marginal increase to social welfare. As we discuss
in Section B, this algorithm is not strategyproof in general.
However, it has the property that the choice of agent in each
round is arbitrary; this provides a degree of freedom that can
be exploited to obtain strategyproofness.
Indeed, for the
case of two agents, we show how to recursively construct
a distribution over potential allocations returned by locally
greedy algorithms, with the property that each agent’s ex-
pected individual value under this distribution is monotone1
with respect to the number of initial elements allocated.

Our second mechanism is for three or more players, under
some natural restrictions on the inﬂuence spread process.
Speciﬁcally, we require two properties: ﬁrst, the social wel-
fare is independent of the manner in which elements are par-
titioned among the players (mechanism indiﬀerence). Sec-
ond, the payoﬀ of a player does not depend on the manner
in which the elements allocated to her competitors are par-
titioned among the competitors (agent indiﬀerence). These
conditions are deﬁned formally in Section 4. We note that
these assumptions are implicit in many prior models of in-
ﬂuence spread [6, 2]. Under these assumptions, we develop a
strategyproof mechanism that obtains a e
e−1 -approximation
to the optimal social welfare when there are three or more
players. Interestingly, our analysis makes crucial use of the
presence of three or more players, and indeed we show that
this mechanism fails to be strategyproof when only two play-
ers are present, even with these two additional assumptions2.
Our ﬁnal mechanism construction satisﬁes an additional
constraint that agent allocations be disjoint.
In its most
general form, our problem speciﬁcation does not require that
the set of elements allocated to the agents be disjoint3. Our
ﬁrst mechanism described above may place a given node in
the seed sets of multiple players. Our second mechanism for
more than two players produces a disjoint allocation when
the greedy algorithm used for a single player results in a
disjoint allocation. When it is desirable for allocations to be
disjoint, we show how our construction can be modiﬁed to
work under this additional requirement, resulting in a strat-
egyproof 3-approximation mechanism. This result requires
that we impose a symmetry assumption on the inﬂuence

1We use the word monotone in its game-theoretic sense,
meaning that a player’s outcome is a monotone function of
its bid. We distinguish this from the monotonicity of the
social welfare function of the mechanism, and use the term
non-decreasing when referring to the social welfare function.
2Notice that the agent indiﬀerence property holds vacuously
in the two-player case, as there is only one other player.
3Many prior models of competitive inﬂuence do allow non-
disjoint allocations [13, 2]; our intention is to demonstrate
that a disjointness condition can be accommodated if neces-
sary, rather than imply that non-disjointness is undesirable.

142spread model, which states that the outcome of the inﬂu-
ence process is invariant under relabelling of the players4.

Our mechanisms run in time polynomial in the demands
submitted by the agents and in the size of the underlying
ground set. This dependence on the demand values is nec-
essary, as the mechanism constructs a solution consisting of
sets of this size. Our dependence on the size of the under-
lying ground set is captured by queries for an element that
maximizes a marginal increase in social welfare. Given or-
acle access to queries of this nature, our algorithm would
run in time polynomial in the declared demands. Gener-
ally speaking, the spread process itself is randomized and
as in [15, 16], the oracle can be viewed as providing an el-
ement that approximately maximizes the marginal gain by
sampling enough trials of this process [15, 16]. Our analysis
also holds when such approximate marginal maximizers are
used to implement our underlying greedy algorithm; follow-
ing the exposition in [12], such an approximate maximizer
provides an approximation that approaches 2 as the oracle
approximation approaches 1. We will simplify our discus-
sion throughout by assuming it is possible to ﬁnd elements
that exactly maximize marginal gains in social welfare.

Related Work: Models of inﬂuence spread in networks,
covering both cascade and threshold phenomena, are well-
studied in the sociology and marketing literature [14, 23].
The (non-competitive) problem of maximizing inﬂuence in
social networks was theoretically modelled by Kempe et al.
[15, 16]. Subsequent papers extended these models to a
competitive setting in which there are multiple advertisers.
Carnes et al.
[6] suggested the Wave Propagation model
and the Distance Based model, which were based on the In-
dependent Cascade model. Additionally, Dubey et al.
[8],
Bharathi et al. [2], Kosta et al. [17], and Apt et al. [1] also
studied various competitive models. The main issue that
these models addressed was how to arbitrate ties in each step
of the process, determining which technology a node will as-
sume when reached by several technologies at once. The
main algorithmic task addressed by these models is choos-
ing the optimal set of nodes for a player entering an existing
market, in which the competitor’s choice of initial nodes is
already known. Borodin et al. [4] presented the OR model
which proposes a diﬀerent approach, in which the previously
studied, non-competitive diﬀusion models proceed indepen-
dently for each technology as a ﬁrst phase of the process,
after which the nodes decide between each technology ac-
cording to some decision function.

Recently, and independent of our work [3], Goyal and
Kearns [13] provide bounds on the eﬃciency of equilibria in a
competitive inﬂuence game played by two players. Their in-
ﬂuence spread model is characterized by switching functions
(specifying the process by which a node decides to adopt a
product) and selection functions (specifying the manner in
which nodes decide which product to adopt). They demon-
strate that an equilibrium of the resulting game yields half
of the optimal social welfare, given that the switching func-
tions are concave. Their model is closely related to our own.
Speciﬁcally, the social welfare function is monotone and sat-
isﬁes the mechanism indiﬀerence assumption, and concavity
of the switching function implies that the social welfare is

4We note that this property holds for most models of inﬂu-
ence spread studied in the literature [13, 2, 6, 1].

submodular (by [19]), so our mechanism for two players ap-
plies to their model as well5. Goyal and Kearns also note
that their results extend to k > 2 players, resulting in an
approximation factor of 2k, when the selection function is
linear; this linearity implies our agent indiﬀerence assump-
tion, and hence our mechanism for three or more players
also applies. However, we note that the Goyal and Kearns
results on eﬃciency at equilibrium are satisﬁed without an
intervening mechanism and hence are incomparable with the
mechanism results of this paper.

Finally, to the best of our knowledge, there is only one
other paper that considers a mechanism design problem in
the context of competitive inﬂuence spread. Namely, Singer
[24] considers a social network where the nodes are viewed
as agents who have private costs for hosting a product and
the mechanism has a budget for inducing some set of initial
nodes to become hosts. The mechanism wishes to maxi-
mize the number of nodes that will eventually be inﬂuenced
and each agent wishes to maximize their proﬁt equal to the
inducement received minus its private cost.

2. PRELIMINARIES
We consider a setting in which there is a ground set U =
{e1, . . . , en} of n elements (e.g. nodes in a social network),
and k players. An allocation is some (S1, . . . , Sk) ∈ 2U ×
··· × 2U ; that is, an assignment of set6 Si to each player i.
For the most part we will follow the convention that these
sets should be disjoint, though in general our model does
not require disjointness. In particular, we consider a setting
in which sets need not be disjoint in Section 3.
We are given functions fi : 2U × ···2 U → R≥0, denot-
ing the expected values of players i = 1, . . . , k, for alloca-
i=1 fi, so that f (S) =
tion (S1, . . . , Sk). We deﬁne f =
f (Si, S−i) denotes the total expected welfare of the alloca-
tion (S) = (S1, . . . , Sk) = (Si, S−i).

(cid:2)k

We will require that functions f , and f1, . . . , fk satisfy
certain properties, motivated by known properties of inﬂu-
ence spread models studied in the literature. First, we will
assume that f is a submodular non-decreasing function, in
the following sense. For any Si ⊆ S
i, S−i, and e ∈ U , we
(cid:3)
have f (Si, S−i) ≤ f (S
(cid:3)
i, S−i) and
f (Si ∪{e}, S−i)− f (Si, S−i) ≥ f (S

i ∪{e}, S−i)− f (S
(cid:3)

(cid:3)
i, S−i).

We will also require that for all i = 1, . . . , k, the function
fi be non-decreasing in the allocation to player i, so that
fi(Si, S−i) ≤ fi(S

i, S−i) for any Si ⊆ S
(cid:3)

(cid:3)
i.

j, S−j) for any Sj ⊆ S
(cid:3)

We impose one ﬁnal model assumption, which we call ad-
verse competition: that each fi is non-increasing in the allo-
cation to other players. That is, for all j (cid:8)= i, fi(Sj, S−j) ≥
(cid:3)
fi(S
j. This assumption captures our
intuition that, in a competitive inﬂuence model, the pres-
ence of additional adopters for one player can only impede
the spread of inﬂuence for another player. We discuss the
necessity of this assumption in Appendix A.
We study the following algorithmic problem. Given input
values b1, . . . , bk ≥ 0, we wish to ﬁnd sets S1, . . . , Sk ⊆ U ,
5An “adverse competition” assumption in [13] is stated for
k = 2 agents and holds at every node. Their assumption
is somewhat weaker than ours, which we only apply to the
social welfare function. See section 2.
6For notational convenience we will assume that S1, . . . , Sk
are sets, but our results extend to permit multisets.

143that |U| ≥(cid:2)k

with |Si| = bi, for all i = 1, . . . , k, such that f (S1, . . . , Sk)
is maximized. We assume we are given oracle access to the
functions f and f1, . . . , fk. Note that we impose a “demand
satisfaction” condition on the mechanism, that each agent
is allocated all of his demand. (To this end we will assume
i=1 bi; i.e. that there are enough items to allo-
cate). If we relax the cardinality constraint to |Si| ≤b i, it
is straightforward to obtain an O(k) algorithm by greedily
allocating nodes to the agent who can achieve the highest
utility.
Suppose that A is a deterministic algorithm for the above
problem, so that A(b1, . . . , bk) denotes an allocation for any
b1, . . . , bk ≥ 0. We say that A is monotone if, for all bid
vectors b = (b1, . . . , bk) ∈ Z
k≥0, fi(A(bi, b−i)) ≤ fi(A(bi +
1, b−i)), for each player i = 1, . . . , k. We extend this deﬁni-
tion to randomized algorithms in the natural way, by taking
expectations over the outcomes returned by A.

We will assume that each player i has a type ˜bi, represent-
ing the maximum number of elements they can be allocated.
The utility of player i for allocation S = (S1, . . . , Sk) is

(cid:3)
fi(Si, S−i)
−∞

ui(S) =

k≥0 and b

i ≤ bi, ui(A(b
(cid:3)

i, b−i)) ≤ ui(A(bi, b−i)).
(cid:3)

if |Si| ≤ ˜bi
otherwise.
We then say that algorithm A is strategyproof
if, for all
b ∈ Z
In
other words, an algorithm is strategyproof if it incentivizes
each agent to report its type truthfully.
The problem of maximizing welfare function f (·) sub-
ject to the reported demands can be stated in the frame-
work of maximizing a submodular set-function subject to
a partition matroid constraint. An instance of a partition
matroid M = (E,F) is given by a union of disjoint sets
E =
i=1,...,k Ei, and a set of corresponding cardinality
constraints d1, . . . , dk. A set X is in F, i.e. is independent,
if |X ∩ Ei| ≤ di, for all 1 ≤ i ≤ k. That is, an independent
set is formed by taking no more than the prescribed size
constraint for each of the sets. The optimization problem is
to ﬁnd an independent set that maximizes a non-decreasing
and submodular set-function g : F → R≥0. Our problem
falls into this framework by setting the ground set to be
U × {1, . . . , k}, the cardinality constraints di = bi, for all i
and setting the objective function to be the social welfare:

(cid:4)

k(cid:5)

g(X) = f (S), where X =

(Si × {i}).

(1)

i=1

We note, however, that this formulation does not apply if
the allocated sets are required to be disjoint. The addition of
disjointness causes our constraint to no longer take the form
of a matroid, an issue which will be addressed in Section
5. Also note that this alternative deﬁnition of our setting
conforms to the single-parameter convention of submodular
set-functions. However, we will mostly refer to the former
formulation of the problem for clarity and succinctness.

As a result of this correspondence with the framework
of partition matroids, we will be interested in a particular
greedy algorithm for this algorithmic problem, known as a
locally greedy algorithm, studied in [21], which was subse-
quently extended in [12]. The algorithm proceeds by ﬁxing
some arbitrary permutation of the multiset composed of bi
i’s for each player i.
It then iteratively builds the alloca-
tion S where, on iteration j, it chooses u ∈ arg maxc{f (Si ∪
{c}, S−i) − f (Si, S−i)} and adds u to Si, where i is the jth

element of the permutation. Regardless of the permuta-
tion selected, this algorithm is guaranteed to obtain a 2-
approximation to the optimal allocation subject to the given
cardinality constraints [21, 12].

3. A STRATEGYPROOF MECHANISM FOR

TWO PLAYERS

In this section we describe our mechanism for allocating
nodes when there are two agents. The case of k > 2 agents is
handled in Section 4, under additional assumptions that are
not necessary for the case k = 2. Our mechanism is based on
the locally greedy algorithm described in Section 2. We will
focus on cases in which the allocations to the two agents need
not be disjoint; in Section 5 we extend our result to handle
disjointness constraints when agents are “anonymous.”

A nice property of the locally greedy algorithm is that its
worst-case approximation factor of 2 holds even if we arbi-
trarily ﬁx the order in which allocations are made to players
A and B. This grants a degree of freedom that we will use to
satisfy strategyproofness. Given a particular pair of budgets
(a, b), we will randomize over possible orderings in which to
allocate to the two agents, and then apply the greedy algo-
rithm to whichever permutation we choose. The key to the
algorithm will be the manner in which we choose the distri-
bution to randomize over, which will depend on the declared
budgets and the inﬂuence functions fi. As it turns out, some
of the more immediate ways of selecting an ordering lead to
non-strategyproof mechanisms. See Appendix B for a sur-
vey of na¨ıve orderings. Indeed, it is not even clear a priori
that distributions exist that simultaneously monotonize the
expected allocation for both players. Our main technical
contribution is a proof that such distributions do exist, and
moreover can be explicitly constructed in polynomial time.
The idea behind our construction, at a high level, is as
follows. We will construct the distribution for use with bud-
gets (a, b) recursively. Writing t = a + b, we ﬁrst generate
distributions for the case t = 1 (which are trivial), followed
by t = 2, etc. To construct the distribution for demands
(a, b), we consider the following thought experiment. We
will choose an ordering in one of two ways. Either we choose
a permutation according to the distribution for budget pair
(a − 1, b) and then append a ﬁnal allocation to A, or else
choose a permutation according to the distribution for bud-
get pair (a, b − 1) and append an allocation to player B. If
we choose the former option with some probability α, and
the latter with probability 1 − α, this deﬁnes a probability
distribution for budget pair (a, b).

What we will show is that, assuming our distributions are
constructed to adhere to certain invariants, we can choose
this α such that the resulting randomized algorithm (i.e. the
greedy algorithm applied to permutations drawn from the
constructed distributions) will be monotone. That is, the ex-
pected inﬂuence of player A under the distribution for (a, b)
is at least that of the distribution for (a− 1, b), and similarly
for player B. The existence of such an α is not guaranteed
in general; we will need to prove that our constructed distri-
butions satisfy an additional “cross-monotonicity” property
in order to guarantee that such an α exists.

One problem with the above technique is that it does
not bound the size of the support of the distributions. In
general there will be exponentially many possible permuta-
tions to randomize over, leading to exponential computa-

144tional complexity to compute each α. One might attempt
to overcome such issues by sampling to estimate the re-
quired probabilities, but this introduces the possibility of
non-monotonicities due to sampling error, which we would
like to avoid. We demonstrate that each distribution we
construct can be “pruned” so that its support contains at
most three permutations, while still retaining its monotonic-
ity properties. In this way, we guarantee that our recursive
process requires only polynomially many queries (to the in-
ﬂuence functions) in order to choose a permutation.

3.1 The Allocation Algorithm

Our algorithm will proceed by choosing a distribution over
orders in which nodes are allocated to the two players. This
will be stored in a matrix M , where M [a, b] contains a distri-
bution over sequences (y1, . . . , yt) ∈ {A, B}a+b, containing a
‘A’s and b ‘B’s. We then choose a sequence from distribution
M [a, b] and greedily construct a ﬁnal allocation with respect
to that ordering. We begin by describing the manner in
which the allocation is made, given the distribution over or-
derings. The algorithm is given as Algorithm 1. An impor-

Algorithm 1: Allocation Mechanism
Input: Ground set U = {e1, . . . , . . . , en}, budgets a, b
Output: An allocation IA, IB ⊆ U for the two players

for players A and B, respectively

/* Build permutation table.

1 M ← ConstructDistributions(a, b) ;

*/

/* M [a, b] will be a distribution over sequences

(y1, . . . , ya+b) ∈ {A, B}a+b

*/

if yi = A then

2 Choose (y1, . . . , ya+b) from distribution M [a, b];
3 for i = 1 . . . a + b do
4
5
6
7
8
9

u ← argmaxc∈U{f (IA ∪ {c}, IB) − f (IA, IB)} ;
IA ← IA ∪ {u} ;
u ← argmaxc∈U{f (IA, IB ∪ {c}) − f (IA, IB)} ;
IB ← IB ∪ {u} ;

else

tant property of the allocation algorithm that we will require
for our analysis is that, given a sequence drawn from distri-
bution M [a, b], the allocation is chosen myopically. That is,
items are chosen for the players in the order dictated by the
given sequence, independent of subsequent allocations. We
will use this property to construct the distribution M [a, b],
which will be tailored to the speciﬁc algorithm to ensure
strategyproofness. We note that this technique could be ap-
plied to any allocation algorithm with this property; we will
make use of this observation in Section 5.

Recall that the approximation guarantee for the greedy
allocation does not depend on the order of assignment im-
plemented in lines 3-9, so that the allocation returned by
the algorithm will be a 2-approximation to the optimal to-
tal inﬂuence regardless of the permutation chosen on line 2.
It therefore remains only to demonstrate that we can con-
struct our distributions over sequences so that the expected
payoﬀ to each player is monotone increasing in his bid.
3.2 Constructing matrix M

We describe the procedure ConstructDistributions, used
in Algorithm 1, to generate distributions over orderings of

assignments to players A and B. We will build table M [·,·]
recursively, where M [a, b] describes the distribution corre-
sponding to budgets a and b. Our procedure will terminate
when the required entry has been constructed.
We think of M [a, b] as a distribution over sequences of
the form (y1, . . . , ya+b), where yi ∈ {A, B}. For any given
sequence, the corresponding allocation is determined since
the greedy algorithm applied in Algorithm 1 is deterministic.
We can therefore also think of M [a, b] as a distribution over
allocations, and in what follows we will refer to “allocations
drawn from M [a, b]” without further comment.

Note that M [0, b] must be assign probability 1 to the se-
quence (B, B, . . . , B), and similarly M [a, 0] assigns proba-
bility 1 to (A, A, . . . , A). We will construct the remaining
entries of the table M [a, b] in increasing order of a + b.

Before describing the recursive procedure for ﬁlling the
table, we provide some notation. Given M , we will write
wA(a, b) for the expected value of agent A under the distri-
bution of allocations returned by M [a, b]. Similarly, wB(a, b)
will be the expected value of agent B, and w(a, b) =w A(a, b)+
wB(a, b) is the expected total welfare. For notational con-
venience, set wA(a, b) = wB(a, b) = 0 if a < 0 or b < 0.

We will construct M so that the following invariants hold

for all a >0 and b >0:

1. wA(a, b) ≥ wA(a − 1, b + 1).
2. wA(a, b) ≥ wA(a − 1, b).
3. wB(a, b) ≥ wB(a, b − 1).
4. The support of M [a, b] contains at most 3 sequences.

The ﬁrst invariant is a type of cross-monotonicity property,
which will help us to construct the entries of matrix M . The
second two desiderata capture the monotonicity properties
we require of our algorithm. Note that if M satisﬁes these
properties, then Algorithm 1 will be monotone and hence
strategyproof. The ﬁnal property limits the complexity of
constructing and sampling from M [a, b], implying that Al-
gorithm 1 runs in polynomial time.

(cid:3)

(cid:3)

, b

(cid:3)

+b

] for all a

We now describe the way in which we construct distribu-
(cid:3)
tion M [a, b], given distributions M [a
< a+b.
We consider two distributions: the ﬁrst selects a sequence
according to M [a − 1, b] and appends an A, and the second
selects a sequence according to M [a, b− 1] and appends a B.
Call these two distributions D1 and D2, respectively. What
we would like to do is ﬁnd some α, 0 ≤ α ≤ 1, such that if we
choose from distribution D1 with probability α and distribu-
tion D2 with probability 1 − α, then the resulting combined
distribution (for M [a, b]) will satisfy wA(a, b) ≥ wA(a− 1, b)
and wB(a, b) ≥ wB(a, b − 1). Of course, this combined dis-
tribution may have support of size up to 6 (3 from D1 and
3 from D2) but we will show that it can be pruned to a dis-
tribution with the same expected inﬂuence for agents A and
B, with at most 3 permutations in its support.

Our main technical lemma, Lemma 1, demonstrates that
an appropriate value of α, as described in the process sketched
above, is guaranteed to exist and can be found eﬃciently.
Before stating the lemma we introduce some helpful nota-
⊕B(a, b) = w(a, b) − w(a, b − 1) ≥ 0. That is,
tion. Write Δ
⊕B(a, b) is the marginal gain in total welfare when agent
Δ
B increases his bid from b − 1 tob , given matrix M .

Lemma 1. It is possible to construct table M in such a

way that the following properties hold for all a + b ≥ 1:

1451. wA(a, b) ≥ wA(a − 1, b + 1)
2. wA(a, b) ≥ wA(a − 1, b)
3. wA(a, b) ≤ wA(a, b − 1) + Δ

⊕B(a, b)

Furthermore, the entries of M can be computed in polyno-
mial time.

Notice that condition 3 in Lemma 1 implies that player B’s
valuation is monotone increasing with his bid:

A

w

(a, b − 1) ≥ w
= w

A

A

A

(cid:8)

A

⊕B

(a, b)

(a, b) − Δ
(cid:6)(cid:7)
(a, b) − [w(a, b) − w(a, b − 1)]
(a, b) −
(a, b) + w
(a, b)
(a, b − 1) + w
(a, b − 1) − w

(cid:7)
w
(a, b − 1) + w
(a, b) ≥ w

(a, b − 1)

−

w

B

B

B

A

B

B

(cid:8)(cid:9)

−
(a, b − 1)

(a, b)

(2)

= w

A

B

= w
⇒ w

Proof. We will proceed by induction on t = a + b. The

result is trivial for t = 1.

Given t = a + b > 1, we generate distribution M [a, b] by
constructing a value α, then with probability α we choose
from the distribution of sequences (i.e. specifying an order
of allocations) M [a − 1, b] and append A, or else with prob-
ability 1− α we choose from the distribution M [a, b− 1] and
append B. We must show the existance of some α value such
that the three conditions required by Lemma 1 will hold.

Conditions 2 and 3 of the lemma describe an interval in

which the value wA(a, b) must fall, call it I a,b
m . That is,
(a, b − 1) + Δ
⊕B

(a − 1, b), w

a,b
m = [w

(a, b)].

I

A

A

⊕B(a, b).

⊕B(a, b).
(respectively, W B

Claim 2 shows that this interval is non-empty.
Claim 2. wA(a − 1, b) ≤ wA(a, b − 1) + Δ
Proof. This follows by induction applied to condition 1
of the Lemma, which implies wA(a − 1, b) ≤ wA(a, b − 1) ≤
wA(a, b − 1) + Δ
Let W A
1 ) denote the expected payoﬀ of
1
player A (respectively, player B) if we let α = 1. That
is, W A
is the expected inﬂuence of player A if we select
a permutation from M [a − 1, b] and append A, then use
1
this permutation when applying our greedy algorithm. We
deﬁne W A
0 similarly for α = 0. The following claim
follows from the adverse competition assumption.

0 and W B

Claim 3. W A

1 ≥ wA(a − 1, b) and W A

0 ≤ wA(a, b − 1).
Proof. The ﬁrst part of the claim follows because, for
each ﬁxed ordering in the support of M [a − 1, b], appending
an A to that ordering can only increse the welfare of agent
A. Likewise, the second part of the claim follows because,
for each ordering in the support of M [a, b − 1], appending a
B can only decrease the welfare of agent A.

1 and W A

We think of W A

for distributions that we can construct. Let I a,b
interval between W A
1 or W A
which of W A

1 and W A
0 is greater. Claim 3 implies that:

0 as the inﬂuence for agent A
denote the
0 . Note that we do not know

c

Claim 4. I a,b

m ∩ I a,b

c

(cid:8)= ∅.

c

c

c

m ∩ I a,b

Proof. It cannot be that I a,b

lies entirely above I a,b
m ,
⊕B(a, b). Also,
1 ≥
m , since W A

0 ≤ wA(a, b − 1) ≤ wA(a, b − 1) + Δ
lies entirely below I a,b

since W A
it cannot be that I a,b
(cid:8)= ∅.
wA(a − 1, b). Thus I a,b
m ∩I a,b
We can therefore write I a,b = I a,b
. Note that any point
in I a,b corresponds to a distribution we can construct for
M [a, b], which will satisfy conditions 2 and 3 of our Lemma.
It remains to show that we can choose this point so that
condition 1 of Lemma 1 will also be satisﬁed. Our claim is
that if we always choose α so that wA(a, b) is the minimum
endpoint of I a,b, then condition 1 will be satisﬁed.

c

With the above in mind, we will set

α = arg min
α∈[0,1]

{αW

A

1 + (1 − α)W

A

0 ∈ I}

(3)

Note that if we use this value of α to randomize between
appending A to a permutation drawn from M [a − 1, b] and
appending B to a permutation from M [a, b − 1], then the
resulting value of wA(a, b) will indeed be min I a,b.

(cid:3)
For all a

(cid:3)

(cid:3)
= t, deﬁne M [a

(cid:3)

] as described above. We
now argue that this choice satisﬁes condition 1 of Lemma 1.

+ b

, b

c

c

.

m

m

∩ I a−1,b+1

Claim 5. If a ≥ 1 then wA(a, b) ≥ wA(a − 1, b + 1).
Proof. Note ﬁrst that wA(a, b) ≥ wA(a − 1, b), since
m . Consider now the value of wA(a − 1, b + 1),
wA(a, b) ∈ I a,b
which is the minimum of I a−1,b+1
. We will now
bound the value of wA(a − 1, b + 1), by providing an upper
bound on both the minimal endpoint of I a−1,b+1
and the
minimal endpoint of I a−1,b+1
For budgets (a − 1, b + 1), the lower endpoint of I a−1,b+1
is wA(a − 2, b + 1). On the other hand, I a−1,b+1
m
contains
point W A
0 , which is the inﬂuence to player A when we choose
a permutation according to wA(a − 1, b) and append a ‘B’.
However, since allocating an additional item to player B in
any ﬁxed allocation can only degrade player A’s payoﬀ, it
must be that W A
is at most
max{wA(a − 2, b + 1), wA(a − 1, b)}. But wA(a − 2, b + 1) ≤
wA(a − 1, b) by induction (using condition 1 of Lemma 1).
We therefore conclude wA(a−1, b+1) ≤ max{wA(a−2, b+
1), wA(a − 1, b)} ≤w A(a − 1, b) ≤ wA(a, b), as required.

Thus the lower endpoint of I a−1,b+1

0 ≤ wA(a − 1, b).

∩ I a−1,b+1

m

c

c

We have shown that table M can be ﬁlled with distribu-
tions that satisfy the conditions of Lemma 1.
It remains
to discuss the complexity of computing the entries of M .
To this point we have not bounded the size of our distribu-
tions’ supports. We will modify the argument to show that
the number of permutations required for each table entry
M [a, b] can be limited to only three, by induction on t.

Consider the distribution constructed for M [a, b]. The
support of this distribution has size at most 6: the three
permutations in the support of M [a−1, b] with A appended,
plus the three permutations in the support of M [a, b−1] with
B appended. Each of these six permutations implies an al-
location, say (S1, T1), . . . ,(S 6, T6). For each allocation, we
consider the two-dimensional point (fA(Si, Ti), fB(Si, Ti))
representing the welfare to A and B for the given alloca-
tion. We can interpret our construction of M [a, b] as imple-
menting a point (wA(a, b), wB(a, b)) with certain properties,
such that this point lies in the convex hull of the six points
(fA(S1, T1), fB(S1, T1)), . . . ,(f A(S6, T6), fB(S6, T6)).

We now use the following well-known theorem [22]:

146at a time to greedily maximize the social welfare. By as-
sumption 1, the welfare does not depend on how these items
are divided among the players. This greedy algorithm gen-
erates a certain social welfare whenever the sum of budgets
is t; write w(t) for this welfare. Note that w(0), w(1), . . . is
a concave non-decreasing sequence.

(cid:4)

(cid:4)

j(cid:6)=i S

Assumption 2: Agent Indifference.

j(cid:6)=i Sj and

We will assume that fi(Si, S−i) = fi(Si, S

(cid:3)
−i) whenever
(cid:3)
sets
j are equal. That is, each agent’s
utility depends on the set of items allocated to the other
players, but not on how the items are partitioned among
those players. We will call this the Agent Indiﬀerence (AgI)
assumption. Notice that in the two-players case, this as-
sumption is essentially vacuous.

[6] and Bharathi et al.

We note that the models for competitive inﬂuence spread
proposed by Carnes et al.
[2] are
based on a cascade model of inﬂuence spread, and satisfy
both the MeI and AgI assumptions. Similarly, if we restrict
the OR model in [4] so that the underlying spread process
is a cascade (and not a threshold) process and agents are
anonymous (a restriction that will be deﬁned in Section 5),
as assumed in the Carnes et al models, then this special case
of the OR model also satisﬁes MeI and AgI.
4.1 The uniform random greedy mechanism
Consider Algorithm 2, which we refer to as the uniform
random greedy mechanism. This mechanism proceeds by
ﬁrst greedily selecting which elements of the ground set to
allocate. It then chooses an ordering of the players’ bids uni-
formly at random from the set of all possible orderings, then
assigns the selected elements to the players in this randomly
chosen order. The MeI assumption implies that the random

Algorithm 2: Uniform Random Greedy Mechanism
Input: Ground set U = {e1, . . . , em}, budget proﬁle b
Output: An allocation proﬁle S

1 Initialize: Si ← ∅, i ← 0, j ← 0, I ← ∅, t ←(cid:2)

i bi;

/* Choose elements to assign.

/* Partition elements of I.

ui ← argmaxc∈U{f (I ∪ {c}) − f (I)} ;
I ← I ∪ {ui} ; i ← i + 1 ;

2 while i < t do
3
4
5 Γ ← {β : [t] → [k] s.t. |β
6 Choose β ∈ Γ uniformly at random ;
7 while j < tdo
Sβ(j) ← Sβ(j) ∪ {uj} ;
8
j ← j + 1 ;
9

−1(i)| = bi for all i} ;

*/

*/

(cid:4)

(cid:4)

n

Theorem 6

(Carath ˜Al’odory). Given a set V ⊂ R
and a point p ∈ ConvV — the convex hull of V , there exists
a subset A ⊂ V such that |A| ≤ n + 1 and p ∈ ConvA.
It must therefore be that our point (wA(a, b), wB(a, b)) lies
in the convex hull of at most three of the points (fA(S1, T1),
fB(S1, T1)), . . . ,(f A(S6, T6), fB(S6, T6)). It follows that there
exists a distribution with a support that consists of three of
the six permutations corresponding to (a, b). Finding this
distribution can be done in constant time by considering
6
sets of three allocations.7 We can therefore construct
3
M [a, b] as a distribution over at most 3 permutations, con-
cluding the proof of Lemma 1.

(cid:10)

(cid:11)

The proof of Lemma 1 is constructive: it implies a recur-
sive method for constructing the table M of distributions.
That is, the procedure ConstructDistributions from Algo-
rithm 1 (with input (a, b)) will procede by ﬁlling table M in
increasing order of t, up to a + b, by choosing the value of α
for each table entry as in the proof of Lemma 1, then stor-
ing the implied distribution over three permutations. Note
that we can explicitly store the allocations corresponding
to the permutations in the table, making it simple to com-
pute the submodular function values needed to determine
α (which is store as well). We conclude, given this imple-
mentation of ConstructDistributions, that Algorithm 1 is a
polytime strategyproof 2-approximation to the 2-player in-
ﬂuence maximization problem.

4. A STRATEGYPROOF MECHANISM FOR

THREE OR MORE PLAYERS

To construct a strategyproof mechanism for k > 2 play-
ers, we will impose additional restrictions on the inﬂuence
functions f1, . . . , fk. These additional assumptions are sat-
isﬁed by many models of inﬂuence spread considered in the
literature, as we discuss below. We show that, under these
assumptions, there is a natural mechanism that is strate-
gyproof when there are at least three players.
In fact, it
turns out that having three or more players in such a setting
allows for a much simpler mechanism than the mechanism
for the case of only two players8.

(cid:4)

Assumption 1: Mechanism Indifference.

(cid:3)

i S

We will assume that f (S) = f (S

i Si
(cid:3)
i are equal. That is, social welfare does not depend
and
on the manner in which allocated items are partitioned be-
tween the agents. We will call this the Mechanism Indiﬀer-
ence (MeI) assumption.

) whenever the sets

If assumption 1 holds, then we can imagine a greedy algo-
i Si one

rithm that chooses which items to add to the set

7Note that all quantities in this geometric problem are ra-
tional numbers, which are constructed via the sequence of
operations described in the proof above and therefore have
polynomial bit complexity. We can therefore solve the con-
vex hull tasks described in this operation in polynomial time.
8At this point, the reader may wonder if the two player case
can be reduced to the case k > 2 by adding dummy agents
with budget 0. This does not work because strategyproof-
ness is deﬁned over the space of all possible agent bids, so
we cannot restrict our attention only to proﬁles in which
some players bid 0. Our examples in Appendix B show that
this is not just a nuance of the proof but rather an intrinsic
obstacle to using the uniform distribution.

greedy mechanism obtains a constant factor approximation
to the optimal social welfare. We now claim that, under the
MeI and AgI assumptions, this mechanism is strategyproof
as long as there are at least 3 players.

Theorem 7. If there are k ≥ 3 players and the AgI and
MeI assumptions hold, then Algorithm 2 is a strategyproof
mechanism. Furthermore, Algorithm 2 approximates the so-
cial welfare to within a factor of

e
e−1 from the optimum.

Proof. As before, notice that lines 2–4 are an imple-
mentation of the standard greedy algorithm for maximizing

147(cid:2)

a non-decreasing, submodular set-function subject to a uni-
form matroid constraint, as described in [21, 12], and hence
gives the speciﬁed approximation ratio.

Next, we show that Algorithm 2 is strategyproof. Fix
bid proﬁle b and let t =
i bi. Let I be the union of all
allocations made by Algorithm 2 on bid proﬁle b; note that
I depends only on t. Furthermore, each agent i will be
allocated a uniformly random subset of I of size bi. Thus,
the expected utility of agent i can be expressed as a function
of bi and t. We can therefore write wi(b, t) for the expected
utility of agent i when bi = b and
j bj = t (recall that we
let w(t) denote the total social welfare when
t w(t) for all i and all 0 ≤
b ≤ t. Note that this implies the desired result, since if our
claim is true then for all i and all 0 ≤ b ≤ t we will have

We now claim that wi(b, t) = b

i bi = t).

(cid:2)

(cid:2)

i

w

(b, t) =

w(t) ≤ b + 1
t + 1

b
t

w(t + 1) = w

i

(b + 1, t + 1)

which implies the required monotonicity condition.
It now remains to prove the claim. The adverse competi-
tion assumption implies that wi(0, t) ≤ wi(0, 0) = 0 for all i
and t. We next show that wi(1, t) =w j(1, t) for all i, j, and
t ≥ 1. If t = 1 then this follows from the MeI assumption.
So take t ≥ 2 and pick any three agents i, j, and (cid:4). Then,
by the AgI assumption, we have

i

(1, t) =w (t) − w

(cid:4)

(t − 1, t) = w

j

w

(1, t).

We next show that wi(b, t) = wi(1, t) +w i(b − 1, t) for all
i, all b ≥ 2, and all t ≥ b. Pick any three agents i, j, and (cid:4),
any b ≥ 2, and any t ≥ b. Then, by the AgI assumption,

(b, t) =w (t) − w

i

w

(cid:4)

(t − b, t)
= w(t) − [w(t) − w
(b − 1, t) + w
= w
(b − 1, t) + w

= w

j

i

i

i

i

(b − 1, t) − w
(1, t)

j

(1, t)]

(1, t).

It then follows by simple induction that wi(b, t) = bwi(1, t)
for all 1 ≤ b ≤ t. But now note that w(t) =w i(1, t) + wj(t−
1, t) =tw i(1, t), and hence wi(1, t) = 1
t w(t) and therefore
wi(b, t) = b

t w(t) for all 0 ≤ b ≤ t, as required.

Note that the proof of Theorem 7 makes crucial use of
the fact that there are at least three players.
Indeed, in
Appendix B we give an example satisﬁng the MeI and AgI
assumptions for which the random greedy algorithm is not
strategyproof for two players.

5. DISJOINT ALLOCATIONS

We now show how to modify the mechanism from Sec-
tion 3 to ensure disjoint allocations. Recall that our general
strategy in the non-disjoint case was to use the locally greedy
algorithm and construct a strategyproof-inducing distribu-
tion over player orderings for that algorithm. Our strategy
for achieving disjointness will be to modify the underlying
greedy algorithm so that it only returns disjoint allocations,
then apply the same techniques as in Section 3 to convert
this algorithm into a strategyproof mechanism. As noted in
Section 3, our method can be applied to any myopic alloca-
tion with a social welfare guarantee that does not depend on
the chosen order of players. It therefore suﬃces to ﬁnd such
a myopic allocation method that guarantees disjointness.

When the disjointness constraint is combined with de-
mand restrictions, the set of valid allocations is not a ma-
troid but rather an intersection of two matroids. The lo-
cally greedy algorithm described in Section 2 is therefore
not guaranteed to obtain a constant approximation for ev-
ery ordering of the players. For example, suppose the ground
set U consists of two items, 1 and 2. Suppose player A has
values 1 and 1 +  for items 1 and 2, respectively (where
 >0 is arbitrarily small), and player B has values 1 and
N for items 1 and 2, respectively (where N > 1 is arbi-
trarily large). When the demands of the two players are 1,
the locally greedy algorithm might allocate to either player
ﬁrst, but if it allocates to player A ﬁrst then it obtains the
unbounded approximation ratio N +1
2+ .

The above problem stems from the asymmetry in the val-
uations of the two players. To address this issue, we in-
troduce a notion of player anonymity that captures those
circumstances in which these problems do not occur.

Definition 8. We say agents are anonymous if their val-

uations are symmetric: fi(S1, . . . , Sk) = fπ(i)(Sπ(1), . . . , Sπ(k))
for all permutations π and all agents 1 ≤ i ≤ k.

If players are anonymous then the social welfare satisﬁes
f (S1, . . . , Sk) = f (Sπ(1), . . . , Sπ(k)) for all permutations π.
We note that the inﬂuence models proposed by Carnes et
al.
[2] satisfy this condition. At
the end of this section we will discuss the relationship be-
tween the anonymity condition and the Agent Indiﬀerence
and Mechanism Indiﬀerence conditions from Section 4.

[6] and Bharathi et al.

What we now show is that when the players are anony-
mous, our order-independent locally greedy algorithm from
Section 2 obtains a strategyproof mechanism with a (k + 1)-
approximation to the optimal social welfare, if the given per-
mutation over orderings of the player allocations is sampled
from a truthfulness-inducing distribution over permutations
(e.g. the distributions we have obtained in the case of two
players). Hence, this method provides a transformation to
the disjoint allocations case, if one were to obtain a distri-
bution over permutations for the non-disjoint case.

Algorithm 3 is a simple modiﬁcation to Algorithm 1, in

which we explicitly enforce disjointness of the allocations.

Algorithm 3: Disjoint Locally Greedy algorithm
Input: Ground set U = {e1, . . . , . . . , en}, demands a, b

for players 1, . . . , k, a valid permutation
π ∈ {1, . . . , k}t where t =

Output: An allocation I1, . . . , Ik ⊆ U for the k players
{w(Ii ∪ {c}, I−i) − w(Ii, I−i)} ;

1 for i = 1 . . . b1 + . . . + bk do
2
3

u ← argmaxc∈U−(cid:2)
Ii ← Ii ∪ {u} ;

i=1 bi

Ij

(cid:2)k

(cid:2)k
Theorem 9. For any permutation π ∈ {1, . . . , k}t where
i=1 bi, Algorithm 3 obtains (k + 1)-approximation to
t =
the optimal social welfare obtainable for disjoint allocation
for identical players 1, . . . , k.

The proof of the theorem is presented in the full version of
the paper, which can be found on the authors’ webpages.

1485.1 Relation to Indifference Conditions

In this section we explore the relationship between the
anonymity condition required by Theorem 9 and the mech-
anism and agent indiﬀerence conditions (MeI and AgI) used
in Section 4. As we will show, these conditions are incom-
parable when there are only two players, but when there are
three or more players the AgI and MeI conditions together
are strictly stronger than the anonymity condition. An im-
plication is that our strategyproof mechanism for 3 or more
players from Section 4 retains its approximation factor when
allocations are required to be disjoint, as the anonymity con-
dition required for approximability is implied by the MeI and
AgI conditions used to prove strategyproofness.

Consider ﬁrst the case of two players. To see that MeI does
not imply anonymity, consider the following example with
two objects {a, b} and two players. The functions f1 and
f2 are given by f1(x, 0) = f2(0, x) = 2 for any singleton x,
f1({a, b}, 0) = f2(0,{ab}) = 3, and f1(x, y) = 1.6, f2(x, y) =
1.4 for (x, y) = (a, b) or vice-versa. One can verify that
f = f1 + f2 is submodular and that adverse competition and
mechanism indiﬀerence are satisﬁed, but it is not anonymous
(since f1(x, y) (cid:8)= f2(y, x) for singletons x and y).
To see that anonymity does not imply MeI, consider the
following example with two objects {a, b} and two players.
We will have f1(x, 0) = f2(0, x) = 1 for each singleton x,
f1({a, b}, 0) = f2(0,{a, b}) = 2, but f1(x, y) = f2(x, y) =
3/4 for (x, y) = (a, b) or vice-versa. This pair of functions
exhibits adverse competition and its sum is submodular, but
it does not satisfy MeI (since f (a, b) (cid:8)= f ({a, b}, 0)).
For k ≥ 3 players, MeI and AgI together imply anonymity.
Theorem 10. If there are k ≥ 3 agents and the AgI and

MeI conditions hold, then the agents are anonymous.

The proof appears in the full version of the paper. Fi-
nally, we show that the MeI and AgI assumptions together
are strictly stronger than anonymity for k ≥ 3 players, as
anonymity does not imply MeI. Consider the following ex-
ample with 3 objects {a1, a2, a3} and 3 players. For any la-
beling of the singletons as x, y, z, deﬁne f1(x, y, z) = 7/24,
f1({x, y}, z, 0) = f1({x, y}, 0, z) = 3/4, f1(x,{y, z}, 0) =
f1(x, 0,{y, z}) = 1/4, and f1({x, y, z}, 0, 0) = 1. Deﬁne f2
and f3 symmetrically, so agents are anonymous. Adverse
competition is satisﬁed and the sum of these functions is
submodular, but neither MeI nor AgI are satisﬁed.

6. CONCLUSIONS

We have presented a general framework for mechanisms
that allocate items given an underlying submodular process.
Although we have explicitly referred to spread processes over
social networks, we only require oracle access to the outcome
values, and thus our methods apply to any similar settings
which uphold the properties we have required from the pro-
cesses. We build on natural greedy algorithms to construct
eﬃcient strategyproof mechanisms that guarantee constant
approximations to the social welfare.

An important question is how to extend our results to the
more general case of k > 2 agents without the MeI and AgI
assumptions. It seems that a fundamentally new approach
would be required to obtain an O(1)-approximate strate-
gyproof mechanism for k > 2 players. Another natural and
challenging extension would be to assume that nodes have
costs for being initially allocated and then replace the cardi-
nality constraint on each agent by a knapsack constraint. To

do so, the most direct approach would be to try to utilize the
known approximation for maximizing a non decreasing sub-
modular function subject to one [25] or multiple [18] knap-
sack constraints. These methods do not seem to readily lend
themselves to the approach we have been able to exploit in
the case of cardinality constraints. We have also assumed a
“demand satisfaction” condition. Without this condition, it
is trivial to achieve a strategyproof O(k) approximation by
allocating all initial elements to the agent who can achieve
the most utlility. We would like to extend our results to a
weaker version of demand satisfaction which would require
that the demand of every agent is “almost” satisﬁed.

Acknowledgements.

We would like to thank Yuval Filmus for many helpful

comments and discussions.

APPENDIX
A. RELATION WITH OTHER DIFFUSION

MODELS

We have made a number of modelling assumptions about
agent utilities and social welfare. To some extent, these as-
sumptions are necessary to be able to obtain truthfulness
and constant approximation on the social welfare. Further-
more, these assumptions are present in the existing work on
inﬂuence diﬀusion in social networks, which served as the
running example throughout the paper.

Non-decreasing and submodular utilities and so-
cial welfare: To the best of our knowledge, in order to
establish a constant approximation on the social welfare, all
of the known models in competitive and non-competitive
diﬀusion assume that the overall expected spread is a non-
decreasing and submodular function with respect to the set
of initial adopters. Without any assumption on the nature
of the social welfare function, it is NP hard to obtain any
non trivial approximation on the social welfare even for a
single player.

Adverse competition In the initial adoption of (say) a
technology, a competitor can indirectly beneﬁt from com-
petition so as to insure widespread adoption of the tech-
nology. However, once a technology is established inﬂuence
spread amongst competitors should satisfy adverse compe-
tition. The same can be said for selecting a candidate in a
political election. We note that previous competitive spread
models ([2], [6], and [4]) satisfy adverse competition. In its
generality, the Goyal and Kearns [13] model need not satisfy
this assumption, but in order to obtain their positive result
on the price of anarchy, they adopt a similar restriction.
Furthermore, a simple example shows that the assumption
of adverse competition is necessary for truthfulness. Con-
sider the following two-player setting. The ground set is
composed of two items: u1, which contributes a value of 1
to the receiving player and a value of N to her competi-
tor (who did not receive u1), and item u2 which gives both
players a value of 1. Now, consider the outcome of any
mechanism when the bid proﬁle is (1, 1). Without loss of
generality, one player, say player A, will receive u1, while
the other player will get u2. The valuations would there-
fore be 2 and N + 1 for players A and B, respectively. In
that case, player A would prefer to lower her bid to 0, which
would guarantee her a valuation of N (player B would have

149to get u1, as otherwise the approximation ratio of the so-
cial welfare is unbounded as N grows). We conclude that
unless the competition assumption holds, no strategyproof
mechanism can, in general, obtain a bounded approximation
ratio to the optimal social welfare. Although the example
refers to deterministic allocations, the same argument can
be made for randomized allocations.

Mechanism and agent indiﬀerence: In both the Wave
Propagation model and the Distance-Based model presented
in [6], the propagation of inﬂuence upholds both the mecha-
nism and agent indiﬀerence properties. In [13], it is assumed
that the probability that a node will adopt some technology
is a function of the fraction of inﬂuenced neighbours (re-
gardless of their assumed technology). This immediately im-
plies mechanism indiﬀerence, as general spread is invariant
with respect to the distribution of technologies among initial
nodes. For their positive price of anarchy results about more
than two players, it is assumed that the selection function
is linear which would imply mechanism indiﬀerence.

Anonymity: With the exception of the OR model ([4]),
the above mentioned models also satisfy an anonymity as-
sumption that will be needed to modify the local greedy
algorithm (as used in Algorithm 1) to insure that the initial
allocation is disjoint (see Appendix 5). Anonymity basically
means that the players are symmetric and when there are
more than two players this is a somewhat weaker condition
than having both mechanism and agent indiﬀerence. In [2]
and [6] there is only one edge-weight per edge 9 thereby en-
forcing anonymity.
In [13], it is explicitly stated that the
selection function is symmetric across the players and this
implies anonymity.

Generality of the Model: We emphasize the general-
ity of the model of diﬀusion under which we prove that Al-
gorithm 1 is strategyproof and provides a 2-approximation.
Our general model does not require anonymity and hence we
can accommodate agent speciﬁc edge weights. Our model
also notably allows agent-independent node weights, for de-
termining the value of an inﬂuenced node. Moreover, our ab-
stract model does not specify any particular inﬂuence spread
process, so long as the social welfare function is monotone
submodular and each player’s payoﬀ is non-decreasing in
his own set and non-increasing in the allocations to other
players. In particular, our framework can be used to model
probabilistic cascades as well as submodular threshold mod-
els.

B. COUNTER EXAMPLES WHEN THERE

ARE TWO AGENTS

The locally greedy algorithm [20] (see also [12]) is deﬁned
over an arbitrary permutation of the agents allocation turns.
In Section 3 we carefully construct such orderings in a man-
ner that induces strategyproofness for two players. To moti-
vate these gymnastics, we now demonstrate that more nat-
ural orderings fail to result in strategyproofness.

We begin by considering the “dictatorship” ordering, in
which one player is ﬁrst allocated nodes up to his budget,
and only then is the other player allocated nodes. We will
refer to the agents as A and B, and their utilities as fA and

9In fact, towards the end of the paper, the authors of [6]
conjecture that their results extend to the non-anonymous
case where each edge has technology-speciﬁc weights. This
conjecture was later shown to be false in [4].

fB respectively; suppose that A is the dictator. For the pur-
poses of our example we will describe fA and fB in terms
of the following concrete (but simple) competitive inﬂuence
spread process10 on an undirected network G = (V, E). Sup-
pose that each agent is given an initial seed set, say SA and
SB. For agent A, each node in SA is given a single chance to
activate each of its neighbors independently, which it does
with probability p = 0.9. (Note that this activation process
is not recursive; it aﬀects only the neighbors of SA). We
then, independently, allow each node in seed set SB to at-
tempt to activate each of its neighbors, resulting in a set
of nodes activated by B. To determine the ﬁnal inﬂuence
sets, any node activated only by A is inﬂuenced by A, any
activated only by B is inﬂuenced by B, and any node acti-
vated by both will choose between the two agents uniformly
at random. The value of fA(SA, SB) is the expected number
of nodes inﬂuenced by A at the end of this process, and sim-
ilarly for fB. One can easily show that an agent’s inﬂuence
is non-decreasing in its seed set, that the sum of inﬂuences
is submodular non-decreasing, and that the functions satisfy
adverse competition.

Our network is as follows. The graph consists of two com-
ponents; one is the complete bipartite graph K2,10, and the
other is the star K1,4. Let w1 and w2 be the two nodes of
degree 10, and let v be the center of the star. We claim
that the locally greedy algorithm paired with the dictator-
ship ordering is not strategyproof for this network. Suppose
each agent declares a budget of 1; in this case, the algo-
rithm will allocate w1 to agent A, then it will allocate v to
agent B (since 4p >10(1 − (1 − p)2) − 10p, which means
that v maximizes the marginal gain in social welfare). This
results in an expected inﬂuence of 10p = 9 for agent A.
In the case where A has a budget of 2 (and B’s budget
is still 1), the greedy algorithm will allocate w1 and v to
agent A (for the same reason as before), and will give w2
to agent B. In this case, the inﬂuence of agent A becomes
4p + 10(p · (1 − p) + p2
2 ) = 8.55 < 9, so in particular his
inﬂuence is not non-decreasing in his declaration.

The above construction can be modiﬁed to show that var-
ious other orderings for the locally greedy algorithm fail to
result in strategyproof mechanisms. Examples include:

1. The Round Robin ordering: the mechanism alternates

between the players when allocating a node.

2. Always choosing the player having the smallest current

unsatisﬁed budget breaking ties in favor of player A.

3. Taking a uniformly random choice over all orderings

with the required number of allocations to A and B.

These modiﬁed constructions appear in the full version of
the paper, which can be found on the authors’ webpages.
The last example is particularly relevant, since in Section 4
we showed that for the case of k > 2 agents, in the restricted
setting that assumes MeI and AgI, taking a uniformly ran-
dom permutation over the allocation turns is a strategyproof
algorithm and results in an e
e−1 approximation to the opti-
mal social welfare. In contrast, for the case of k = 2, and
even with these additional restrictions (one can verify that
the inﬂuence model described above, used for our counterex-
ample, does satisfy both MeI and AgI, although the AgI
condition is vacuous), the uniformly random mechanism is
not strategyproof.
10This process is a simpliﬁcation of the OR model [4].

150C. REFERENCES
[1] K. Apt and E. Markakis. Diﬀusion in social networks

with competing products. In G. Persiano, editor,
Algorithmic Game Theory, volume 6982 of Lecture
Notes in Computer Science, pages 212–223. Springer
Berlin / Heidelberg, 2011.

[2] S. Bharathi, D. Kempe, and M. Salek. Competitive

inﬂuence maximization in social networks. In X. Deng
and F. Graham, editors, Internet and Network
Economics, volume 4858 of Lecture Notes in Computer
Science, pages 306–311. Springer Berlin / Heidelberg,
2007.

[3] A. Borodin, M. Braverman, B. Lucier, and J. Oren.

Truthful mechanisms for competing submodular
processes. CoRR, abs/1202.2097, 2012.

[4] A. Borodin, Y. Filmus, and J. Oren. Threshold models

for competitive inﬂuence in social networks. In
A. Saberi, editor, Internet and Network Economics,
volume 6484 of Lecture Notes in Computer Science,
pages 539–550. Springer Berlin / Heidelberg, 2010.

[5] J. J. Brown and P. H. Reingen. Social ties and word of

mouth referral behavior. Journal of Consumer
Research, 14(3):350–362, 1987.

[6] T. Carnes, C. Nagarajan, S. M. Wild, and A. van

Zuylen. Maximizing inﬂuence in a competitive social
network: a follower’s perspective. In Proceedings of the
ninth international conference on Electronic
commerce, ICEC ’07, pages 351–360, New York, NY,
USA, 2007. ACM.

[7] D. Centola and M. Macy. Complex contagions and the

weakness of long ties. American Journal of Sociology,
113(3):702–734, 2007.

[8] P. Dubey, R. Garg, and B. De Meyer. Competing for
customers in a social network: The quasi-linear case.
In P. Spirakis, M. Mavronicolas, and S. Kontogiannis,
editors, Internet and Network Economics, volume
4286 of Lecture Notes in Computer Science, pages
162–173. Springer Berlin / Heidelberg, 2006.

[9] J. Feldman, M. Henzinger, N. Korula, V. S. Mirrokni,

and C. Stein. Online stochastic packing applied to
display ad allocation. In Proceedings of the 18th
annual European conference on Algorithms: Part I,
ESA’10, pages 182–194, Berlin, Heidelberg, 2010.
Springer-Verlag.

[10] J. Feldman, A. Mehta, V. Mirrokni, and

S. Muthukrishnan. Online stochastic matching:
Beating 1-1/e. FOCS, 0:117–126, 2009.

[11] J. Goldenberg, B. Libai, and E. Mulle. Talk of the

network: A complex systems look at the underlying
process of word-of-mouth. Marketing Letters, pages
221–223, 2001.

[12] P. Goundan and A. Schulz. Revisiting the greedy

approach to submodular set function maximization.
Optimization online, (1984):1–25, 2007.

[13] S. Goyal and M. Kearns. Competitive contagion in

networks. In STOC, pages 759–774, 2012.

[14] M. Granovetter. Threshold models of collective

behavior. American Journal of Sociology,
(83):1420–1443, 1978.

[15] D. Kempe, J. Kleinberg, and E. Tardos. Maximizing
the spread of inﬂuence through a social network. In
KDD ’03: Proceedings of the ninth ACM SIGKDD
international conference on Knowledge discovery and
data mining, pages 137–146, New York, NY, USA,
2003. ACM.

[16] D. Kempe, J. Kleinberg, and ´E. Tardos. Inﬂuential

nodes in a diﬀusion model for social networks. In
L. Caires, G. Italiano, L. Monteiro, C. Palamidessi,
and M. Yung, editors, Automata, Languages and
Programming, volume 3580 of Lecture Notes in
Computer Science, pages 1127–1138. Springer Berlin /
Heidelberg, 2005.

[17] J. Kostka, Y. A. Oswald, and R. Wattenhofer. Word

of mouth: Rumor dissemination in social networks. In
Proceedings of the 15th international colloquium on
Structural Information and Communication
Complexity, SIROCCO ’08, pages 185–196, Berlin,
Heidelberg, 2008. Springer-Verlag.

[18] A. Kulik, H. Shachnai, and T. Tamir. Maximizing

submodular set functions subject to multiple linear
constraints. In Proceedings of the twentieth Annual
ACM-SIAM Symposium on Discrete Algorithms,
SODA ’09, pages 545–554, Philadelphia, PA, USA,
2009. Society for Industrial and Applied Mathematics.
[19] E. Mossel and S. Roch. Submodularity of inﬂuence in

social networks: From local to global. SIAM J.
Comput., 39(6):2176–2188, 2010.

[20] G. L. Nemhauser, L. A. Wolsey, and M. L. Fisher. An
analysis of approximations for maximizing submodular
set functions—II. Mathematical Programming,
14(1):265–294, Dec. 1978.

[21] G. L. Nemhauser, L. A. Wolsey, and M. L. Fisher. An
analysis of approximations for maximizing submodular
set functions—i. Mathematical Programming,
14:265–294, 1978. 10.1007/BF01588971.

[22] R. T. Rockafellar. Convex Analysis (Princeton

Landmarks in Mathematics and Physics). Princeton
University Press, December 1996.

[23] T. Schelling. Micromotives and macrobehavior.

Norton, 1978.

[24] Y. Singer. How to win friends and inﬂuence people,
truthfully: inﬂuence maximization mechanisms for
social networks. In WSDM, pages 733–742, 2012.

[25] M. Sviridenko. A note on maximizing a submodular

set function subject to a knapsack constraint.
Operations Research Letters, 32(1):41 – 43, 2004.

151