A Quality Model for Multichannel Adaptive Information

Systems

Carlo Marchetti

Dipartimento di Informatica e
Sistemistica – Universit`a di

Roma “La Sapienza”

via Salaria 113

I-00198 Roma, Italy

Barbara Pernici

Pierluigi Plebani

Dipartimento di Elettronica ed
Informazione – Politecnico di

Dipartimento di Elettronica ed
Informazione – Politecnico di

Piazza Leonardo da Vinci, 32

Piazza Leonardo da Vinci, 32

I-20133 Milano, Italy

I-20133 Milano, Italy

Milano

Milano

marchet@dis.uniroma1.it

barbara.pernici@polimi.it

plebani@elet.polimi.it

ABSTRACT
The ongoing diffusion of novel and mobile devices offers new ways
to provide services across a growing set of network technologies.
As a consequence, traditional information systems evolve to mul-
tichannel systems in which services are provided through different
channels, being a channel the abstraction of a device and a network.
This work proposes a quality model suitable for capturing and rea-
soning about quality aspects of multichannel information systems.
In particular, the model enables a clear separation of modeling as-
pects of services, networks, and devices. Further, it embeds rules
enabling the evaluation of end-to-end quality, which can be used to
select services according to the actual quality perceived by users.

Categories and Subject Descriptors
H.4.m [Information Systems]: Miscellaneous

General Terms
Design

Keywords
Quality of Service, Model

1.

INTRODUCTION

The growing standardization, acceptance, and diffusion of novel
devices (e.g., PDA, Smartphones) and network infrastructures (e.g.
Wi-Fi, UMTS, Bluetooth) require an overall shift of the paradigms
for design and development of traditional information systems in
order to enable the access of services from users exploiting several
distinct technologies. In other words, traditional information sys-
tems are evolving to multichannel information systems in which a
service is provided on several distinct channels, being the latter an
abstraction of the network infrastructure and of the device used to
access a service. At a high level of abstraction, channel examples
are: a simple PC connected to the service provider through the In-
ternet, a PDA connected equipped with a wireless LAN network
interface, a SmartPhone exploiting UMTS and a private backbone.
The Italian MAIS project (Multichannel Adaptive Information Sys-
tems)1 focuses on the study of models, methodologies, and tools for
the design and development of this class of forthcoming systems.

1The project web site is available at http://www.mais-project.it
Copyright is held by the author/owner(s).
WWW2004, May 17–22, 2004, New York, New York, USA.
ACM 1-58113-912-8/04/0005.

In particular deﬁning, providing, certifying, and monitoring qual-
ity of service in a multichannel information systems is one of the
MAIS project objectives. Research on these topics is motivated by
observing that in a multichannel information system the quality of
a given service as perceived by users (i.e., end-to-end QoS) strictly
depends on the channels used to access the service, i.e. on the qual-
ity of networks and devices, other than on the quality of the service
itself. As an example, let us consider a Video-on-Demand (VoD)
service, allowing users to watch a video stream using both “typical”
devices and networks (e.g. a Pc connected to a wired network), as
well as innovative wireless and mobile device (e.g., PDAs, Smart-
Phones)2. In this context, and especially for chargeable services,
it is highly desirable to provide users with some guarantees about
end-to-end QoS, in order to enable service selection and compari-
son not only on the basis of functional requirements, but also us-
ing information about non-functional aspects of the service. This
requires service providers to carefully evaluate how the QoS they
are able to offer on the basis of their internal resources is modiﬁed
along the path connecting the user to the service itself. To this aim,
we deem it necessary to develop a clean quality model that enables
reasoning on how channels (and associated providers) affect non-
functional aspects of a service. Once such a model is available,
services can be labelled with end-to-end QoS information, thus en-
abling QoS-enhanced service offering (by providers) and service
lookup (by users) in a multichannel adaptive information system.
In addition, a quality model puts the basis for quality certiﬁcation
and monitoring. In particular, by clearly stating how each metric
is affected by service, network, and device providers, the proposed
model supports the deﬁnition of metrics, monitoring means, and
responsibilities of service level enforcement within a service level
agreement framework [27]. Finally, the model supports the design
of user-side and provider-side channel adaptation strategies based
on QoS [21], i.e., user criteria to trigger channel switches upon
detecting unsatisfactory levels of quality while accessing the ser-
vice from a given channel, or provider suggestions about channel
switches for maximizing user quality, respectively.

In this paper we present a quality model for multichannel infor-
mation systems. This model is composed by a system model and
by a set of roles and rules that the elements of the system model re-
spect and use to enable the eventual evaluation of end-to-end QoS.

2Let us note that this class of “Mobile TV” services has been re-
cently launched on the European marketplace from relevant cellular
phones network operators in preparation to the advent of UMTS
and are being frequently advertised, e.g., in the soccer game do-
main.

48described in the context. Furthermore, the user could classify chan-
nels according to its preferences (deﬁned in the proﬁle), by stating,
for instance, that when all the channels are available it prefers to
use the PC when it stays at home.

The service provider and the service user, before the service pro-
visioning starts, have to agree on a contract concerning the quality
of the provided services. In particular, the contract should deﬁne
which is the quality level of the service provided in terms of avail-
ability, data quality, security and so on. Other entries of the contract
should deﬁne which are the available channels through which the
service may be invoked, or which is the device the user is going to
use.

During service execution, the service provider is in charge of
maintaining what stated in the contract. For this matter, it relies
on monitoring strategies and adaptivity policies that are able to dis-
cover contract unfulﬁllment and to consequently enact the suitable
adaptation policies.

In order to allow for adaptivity from the provider standpoint, ser-
vices are provided using a reﬂective architecture [18] that handles
the underlying resources in order to enabling the suitable policies
to maintain a pre-deﬁned service level. On the contrary, from a user
standpoint, the adaptation is not motivated by the contract but by
his own requirements with respect to his proﬁle.

3. RELATED WORK

Quality of service and related issues have been the topic of sev-
eral researches and standardization efforts crossing distinct com-
munities during the last years. For the purposes of this work, it is
worth mentioning the web and web-service community (e.g., [25,
20, 29]), the networking and internetworking communities (e.g.,
[12, 13, 7, 11]) as well as the middleware community (e.g., [30,
22]). Even if different in nature, the objectives of these efforts were
at least intended (i) to identify the relevant measurable character-
istics affecting the quality of the services provided by a given “ob-
ject” (e.g., a web-service, a network infrastructure, a middleware
platform) and (ii) to deﬁne means (e.g. architectures, paradigms,
components, and protocols) to implement an “object” whose val-
ues of its measurable characteristics satisfy some quantitative con-
straints. We name the measurable characteristics of objects QoS
parameters3.

For instance, focusing on the web-service community, [20] iden-
tiﬁes the QoS parameters deemed useful for service providers to
characterize the services. In some sense, [25] integrates this pro-
posal devising means to extend service discovery on the basis of
QoS-related information in addition to interfaces. [29] proposes a
methodology enabling the evaluation of the overall QoS of a com-
posite service, i.e., a service obtained by composing several distinct
services, provided that a description of the QoS parameters of the
component services is available. Unfortunately, several of such pa-
rameters (e.g., availability, performance, and so on) are difﬁcult to
deﬁne and to evaluate in an end-to-end manner since the networks
or the devices used to let a service and users interact are even par-
tially out of the control of the provider. For this matter, in these
proposals services are labelled by providers with a set of parame-
ters in order to enable ordering and selecting them on the basis of
QoS. This approach is limited when considering that usually the
QoS perceived by users depends on factors out of the control of the
provider, e.g., service availability depends on (i) provider availabil-
ity, (ii) network availability, and (iii) user device availability.

To address this kind of issues, [28] introduces the relevant dis-

3Several other names have been proposed in the literature on the
topic, e.g. dimension, attributes [9].

Figure 1: User perspective

In particular, in the system model we identify the main objects (ser-
vices, networks, devices) and actors (service, network, and device
providers) of multichannel information system. According to the
model, actors coordinate their activities within communities to ob-
tain speciﬁcations. The basic idea underlying the quality model is
thus to extend speciﬁcations of objects with the quality information
necessary to evaluate end-to-end QoS. Further, roles deﬁne who is
responsible of deﬁning quality parameters and quality sets for each
object and each speciﬁcation, while rules dictate how to combine
quality sets associated to services, networks, and devices to evalu-
ate end-to-end QoS. Finally, we show how the quality model sup-
ports QoS-enhanced service offering and lookup. We support the
presentation using a running example, i.e., the implementation of a
VoD service in a multichannel information system.

The remainder of this paper is structured as follows: Section
2 presents an overview of the MAIS project; Section 3 discusses
related work; Section 4 illustrates the quality model; Section 5
sketches an application example; ﬁnally, Section 6 concludes the
paper.

2. MAIS OVERVIEW

A preliminary analysis of the issues related to service provision-
ing in a multichannel environment straightly drives to the necessity
of deﬁning channels and their interactions with the two main ac-
tors it serves, i.e., the service provider and the service user. Figure
1 sketches our vision of service provisioning in MAIS, and points
out the main issues we face.
Starting from the channel, using a simpliﬁed version of [23], it
is deﬁned as a pair hnetwork, devicei, where device characterizes
the user’s equipment (e.g., PDA, PC, SmartPhone), and network
identiﬁes the set of devices interconnecting the provider and the
user device.

Concerning the service provider, he is described in terms of the
provided services. In particular, besides the traditional deﬁnition in
which the performed functionalities are considered, a service is also
deﬁned by the set of channels used to carry the service information.
On the other channel side, the user is characterized by a con-
text and by a proﬁle [5]. The context describes, among the others,
the set of channels available and the channel currently in use, in a
given location and at a given time. The proﬁle captures user pref-
erences that depend on a role held by the user, its expertise on the
service, and a set of generic preferences that enable further service-
speciﬁc user proﬁling. Referring to the VoD example, a user could
be able to watch a video on both a PC and a SmartPhone, which is

ServiceReflexivearchitectureProviderDevicesUsersubnetworknetworkUser sideProvider siderealizes andprovidesis based onusesagree on SLsResourcesrelieses on49Figure 2: The system model of the quality model

tinction between Quality of Experience (QoE) and QoS in the web
environment, by pointing out that while QoS parameters are under
full control of the service provider (e.g., throughput, server avail-
ability), QoE parameters, even if closely related to QoS parameter,
may be inﬂuenced (i) by subjective elements related to user his-
tory and preferences, and (ii) by any system interposed between
the provider and the user. Evidences of this important distinction
are presented in [17], experimentally showing that the QoE of a
user surﬁng the web using a browser through an Internet Service
Provider is lightly affected by network latency and highly affected
by network bandwidth. Similar work, e.g., [26], show how to relate
QoS of service and network providers to QoE for speciﬁc services
and applications. In other words, QoE can be expressed as the user
perception of end-to-end QoS [3]. Putting the basis for evaluating
QoE of services is a ﬁrst class issue, as it would allow coping quite
straightforwardly with other relevant issues such as (i) the deﬁni-
tion of service level agreements [27, 16] based on the actual quality
of service perceived by users, (ii) the clear and unambiguous as-
signment of responsibilities for enforcing each quality parameter
value (and to possibly deﬁne the corresponding penalties in case of
unsatisfactory levels) [24, 14], and (ii) the deﬁnition of integrated
architectures among service, network, and device providers, coop-
erating to enforce QoE parameters [19, 15].

4. THE QUALITY MODEL

The quality model consists of (i) a system model deﬁning objects
and actors, and of (ii) a set of roles and rules enabling the asso-
ciation of quality information to objects. Quality information is
expressed using quality parameters and quality sets.
4.1 System Model

The proposed system model is based on the service oriented ar-
chitecture (SOA, [10, 4]), which is extended with an explicit repre-
sentation of channels (i.e, networks and devices) to ﬁt multichannel
information systems. As a consequence, the SOA basic infrastruc-

ture based on service providers, service requestors, and service di-
rectories, is augmented with networks, devices, and associated ac-
tors. Figure 2 illustrates the main concepts of the resulting systems
model, consisting of objects, actors, communities, and speciﬁca-
tions, described below.
Objects. Services, networks, and devices are the ﬁrst class objects
of our system model. They are handled by actors and speciﬁed by
communities, i.e., an object is the implementation of a speciﬁcation
deﬁned by some community (see below). In particular, a service is
a software entity performing operations that can be characterized
by a service speciﬁcation deﬁning its functionalities. Several pro-
posals address the problem of expressing such a functional spec-
iﬁcation through a standard language (e.g., WSDL [6], DAML-S
[8]). A network abstracts the set of devices used to transport mes-
sages between a service provider and the user device, which may
include several subnetworks, routers, gateways, and other devices
and could be characterized by the interface offered to devices (e.g.,
802.3, 802.11, GPRS, UMTS) and by the set of users and providers
that may connect to the network. A device is the user mean for ex-
ploiting services, and it consists of a set of input and output inter-
faces that enable interactions with users (e.g., keyboard, display),
and by a set of network interfaces (e.g., supporting 802.3, 802.11,
GPRS, UMTS) enabling the connection to a network.
Actors. Actors are entities responsible of performing actions on
objects or interested in the execution of some operations. In par-
ticular, according to the service-oriented architecture [10], service
providers publish the speciﬁcations of the provided services within
a public registry (e.g., a UDDI registry [2]), maintained by the ser-
vice directory. Network providers offer networking services and
manage the underlying network infrastructure, e.g., cellular phone
companies, Internet Service Providers (ISP). Device producers model
industries producing devices as PDAs, PCs, SmartPhones, and so
on. Users, using the service directory, are able to select, to locate,
and to invoke services by analyzing functional speciﬁcations.
Communities and speciﬁcations. Standardization efforts, carried

Service CommunitiesQuality of Service Parametersnetworkframerateresolutioncolor depthrefreshrateVideo-on-Demand specsprovidesVideo-on-DemandServiceDevice CommunitiesQuality of Device ParametersPDA specsspecquality setweigthnetworkinterfacescolorsproducesPDADeviceusesserviceproviderdeviceproducersuserNetwork CommunityQuality of Network ParametersbandwidthlatencynetworkproviderNetwork specsspecquality setPC specsmanagesjoinsjoinsjoinslossjitterQoS quality setframerateresolutioncolor depthQoN quality setbandwidthlatencyjitterQoD quality setweigthnetworkinterfacescolorsQoE quality setframerateresolutioncolor depthperceiveshas ahas ahas aimplementsimplementsimplementsincludesincludesincludesfunctionalspecsspecquality setfunctionalspecsStock Quotespecsfunctionalspecs50out by organizations and consortia, result in speciﬁcations. There-
fore a community is a group of actors which aims at proposing a
speciﬁcation for a group of objects with some relevant common
characteristics. An actor in the community implements objects
compliant to the speciﬁcation deﬁned by the community. In partic-
ular, service providers standardize the minimum functional speciﬁ-
cation a service must implement to be included into a particular ser-
vice community (e.g., the VoD community). In other words, a ser-
vice community can be characterized by a minimum service spec-
iﬁcation. Network communities deﬁne the main characteristics of
networks through network speciﬁcations. Analogously, providers
of similar devices identify a minimum set of features (e.g., display
size, color depth, audio capabilities, and network interfaces) that
members of a device community must support.

As mentioned above, the quality model must enable association
of quality information to objects. This is achieved extending spec-
iﬁcations with quality information using quality parameters, sets
and rules for composing them, described below.
4.2 Quality parameters, sets, and rules

A quality parameter models relevant and measurable non-functional

aspects of an object. Quality sets are compounds of quality param-
eters that can be associated to objects. Quality rules deﬁne how
to combine quality sets associated to distinct objects to evaluate
their global effects on their non-functional aspects. In the follow-
ing, we introduce the notation deemed necessary to deal with these
concepts.
Quality parameters. A quality parameter qp is a pair

qp = hname, admissible valuesi

where name identiﬁes the parameter and admissible values is an
ordered set of typed values within which the parameter is admitted
to vary. Examples of quality parameters are:
hbandwidth, [1Kps..512Kps]i
hencryption, [40bit; 64bit; 128bit]i
hresolution, [320 × 200; 800 × 600; 1024 × 768; 1240 × 748]i,
hlatency, [10ms...500ms]i.

Given a quality parameter qp, qp.name returns the name ﬁeld,
and qp.values returns the admissible values. Further, the functions
best(name) and worst(name) are introduced to evaluate the ad-
missible value corresponding to the best and the worst quality of
a quality parameter qp : qp.name = name, respectively. The
values of these functions clearly depends on the semantics of the
parameter, e.g. best(bandwidth) = 512Kbps, best(latency) =
10ms.
Quality sets. Quality sets are classes of quality parameters. Given
a quality set QS, QS.names returns the set of names of the quality
parameters belonging to q. We say that a quality set QS2 is con-
tained within a quality set QS1 (QS1 ⊆ QS2) iff (i) QS1 and QS2
have the same set of names, i.e. QS1.names = QS2.names,
and (ii) each quality parameter in Q1 has admissible values rang-
ing within the admissible values of the corresponding parameter in
Q2, i.e. ∀qp1 ∈ QS1, qp2 ∈ QS2, qp1.name = qp2.name ⇒
qp1.values ⊆ qp2.values. Quality sets can be associated to both
objects and speciﬁcations. Therefore, provided that object O is the
implementation of a speciﬁcation S, we distinguish between speci-
ﬁcation quality sets (S.QS) and object quality sets (O.QS). Using
S.QS a community deﬁnes relevant quality parameters and their

Figure 3: Example of the effect of containment between quality
sets

admissible values. These values represent all the possible values
that any object implementing the speciﬁcation can offer. As a con-
sequence we require that if O implements (or is compliant to) S,
then O.QS is contained within S.QS. Figure 3 illustrates the ef-
fect of containment between quality sets on the framerate quality
parameter of a VoD service (expressed in frame per seconds - fps).
Quality rules. Actors and communities ﬁrst associate quality pa-
rameters and sets to objects and speciﬁcations, and then they relate
quality sets using quality rules. A quality rule can be deﬁned as
follows: given two quality sets QS1, QS2, a quality rule for QS1
on QS2 is a function qr12(QS1, QS2) = QS3 such that: (i) QS3
is a quality set, and (ii) QS3 is contained in QS1. This implies
that independently from the set of quality parameters of QS2, QS3
has parameters whose names are the same of those contained in
QS1 and whose values are contained in the corresponding param-
eters of QS1. Indeed, these rules are used to model the effects on
the quality parameters of an object/speciﬁcation A having a qual-
ity set QS1 when it is coupled with another object/speciﬁcation B
having a quality set QS2, i.e., to evaluate how the quality of A
is affected by B. Further, we require that quality rules satisfy the
following containment property: if qr12(QS1, QS2) = QS3 is a
2 ⊆ QS2,
quality rule, then for any QS0
3 ⊆ QS3. It is
qr12(QS0
easy to see that the quality rule containment property implies that
if a quality rule is deﬁned among speciﬁcation quality sets, it can
be used to evaluate effects on quality of the corresponding object
implementations.
Remarks. The main objective of the quality model is to analyze
how the relationships among the elements of a multichannel in-
formation system affect the quality perceived by users. To this
aim, the containment relationship forces actors to implement ob-
jects with quality attributes compliant to the speciﬁcation, while
quality rules (which have a similar containment relationship) dic-
tate how to evaluate quality modiﬁcations of a service upon varying
the channel used to access the service itself. Further, being the fo-
cus on relationships, we do not enter the details of a language for
specifying quality parameters and sets, and we limit to mention a
good candidate, i.e., the Quality Modelling Language (QML, [9]).

3 is a quality rule, and QS0

1 ⊆ QS1, QS0

1, QS0

2) = QS0

1, QS0

2 : QS0

4.3 Roles for quality management

Exploiting quality parameters, sets, and rules communities and
actors operate in two different stages, namely the speciﬁcation deﬁ-
nition phase and the object implementation phase, in order to spec-
ify quality aspects of objects and speciﬁcations and to analyze their
relationships. In particular, ﬁrst communities deﬁne the speciﬁca-
tion quality sets for services, networks, and devices. Once these

540qp1.admissible_valuesqp2.admissible_values30qp1S.QS.framerate∈qp2O.QS.framerate∈fps51information are available, during the object implementation phase,
each actor can produce objects compliant to speciﬁcations accord-
ing to the containment relationships, can deﬁne quality rules en-
abling to evaluate the end-to-end quality of a service for each chan-
nel, and in particular service providers can evaluate information on
the end-to-end quality of service as a function of the channel on
which the service is provided.
Communities roles. During the speciﬁcation deﬁnition phase, com-
munities are in charge of deﬁning quality speciﬁcations (i.e., qual-
ity sets). In particular, communities identify the name and the ad-
missible values of all the quality attributes identifying all the rel-
evant measurable non-functional aspects of any object that will
comply to the speciﬁcation.
In particular, (i) each service com-
munity associates to each service the service speciﬁcation quality
set (S.QSQoS), (ii) each network community associates to each
network the network speciﬁcation quality set (S.QSQoN ), and (iii)
each device community associates to each device the device spec-
iﬁcation quality set (S.QSQoD). Examples of these speciﬁcations
can be found in [13, 7] for networks, and in [1] for devices. Con-
cerning services, we remark that current proposals, e.g., [25, 29,
24], commonly model non-functional aspects of services (e.g. per-
formance, availability, and so on), assuming either that they can
be evaluated almost independently from networks and devices or
including the end-to-end effects of a single channel within the ser-
vice quality set speciﬁcation. In both cases, they result not suit-
able for multichannel information systems. It is also important to
note that quality parameters in the service speciﬁcation quality set
shall not consider channels and end-to-end aspects. For example,
the service response time should be the time elapsed to produce
a reply since the arrival of a request at the provider site; anal-
ogously, service availability should be evaluated at the provider
site without considering network and device effects. This feature
highly simpliﬁes the deﬁnition of these service speciﬁcations. For
each quality parameter identiﬁed, the communities set the limits
of admissible value to values which include all the possible val-
ues independently from the implementation. When precise values
cannot be identiﬁed, both or one of the two admissible value
limits can be set to ±∞. For example, the VoD community, ac-
cording to the video encoding softwares now available, can set the
admissible value of the framerate quality parameter in the VoD
speciﬁcation to [5f ps..40f ps]. On the contrary, considering the
latency, the network community deﬁne the admissible value as
[0sec.. + ∞] since some implementation could be follow a best
effort approach about this parameter. Finally, a service community
can relate the speciﬁcation quality set S.QSQoS of a service with
speciﬁcation S to a set of channels. To attain this, for each channel
ci = hN, Di, the community deﬁnes a quality rule

qrs,ci (S.QSQoS, qrn,d(S.QSQoN , S.QDQoD))

Due to the quality rule containment property and to the quality set
containment relationship, such a quality rule enables every ser-
vice provider, aiming to offer a service with speciﬁcation S on
channel ci, to evaluate the end-to-end QoS. This evaluation is ob-
tained by simply substituting the object quality sets O.QSQoS,
O.QSQoN , and O.QSQoD within the rule, provided that object
quality sets are contained within those of the corresponding speciﬁ-
cation, i.e. O.QSQoS ⊆ S.QSQoS, O.QSQoN ⊆ S.QSQoN , and
O.QSQoD ⊆ S.QSQoD. In order to deﬁne quality rules, commu-
nities exploit engineering knowledge, e.g., physical dependencies
among quality parameters. As example, the bandwidth parameter
of networks signiﬁcantly affects the framerate, color depth and res-
olution quality parameters of a VoD service which are also affected
by the colors quality parameters of a device.

Actors roles. During the object implementation phase, actors im-
plement objects compliant to speciﬁcations and associate them ob-
ject quality sets that satisfy containment relationships with the cor-
responding speciﬁcation. Adhering to speciﬁcations is important to
let service providers evaluate end-to-end QoS using (i) their object
quality sets, and (ii) the set of quality rules dictated by the service
community (if any) as described above. Let us note that “adhering
to speciﬁcations” in our vision is equivalent to say that object qual-
ity sets are included in speciﬁcation quality sets. To attain this, it is
enough to let values of quality parameters of speciﬁcation quality
sets vary in interval sufﬁciently large for any possible implementa-
tion. Note also that if there is no quality rule for given a channel on
which the provider aims to offer a service, the actor is free to deﬁne
a quality rule for the channel and to propose it to the service com-
munity for approval. Therefore we can assume that exploiting the
proposed model, service provider are eventually able to label ser-
vice with the quality that will be perceived by users accessing the
services from all the channels over which the service is provided.
Remarks. A relevant issue about the proposed quality model con-
cerns the quality of its instances, this meaning answering the fol-
lowing question: “How good is this instance of the quality model
in capturing quality aspects of this particular multichannel infor-
mation system?”. Answering this question relates to the attention
paid by communities and actors in deﬁning quality sets and qual-
ity rules. In this sense, the proposed model is a ﬁrst step whose
main contribution is in enabling the creation of good instances by a
clear deﬁnition of the underlying system model, tools and respon-
sibilities. The process to build instances of the proposed model is
applied to a case-study in the following section.

5. THE VOD EXAMPLE

The focus of this section is to sketch the use of the quality model
presented in this paper mainly in order to clarify the phases and
tools introduced. Figure 2 shows all the main objects and actors
used in this example. As aforementioned, the Video-on-Demand
is a service that allows a user to watch to video-streams on sev-
eral heterogeneous devices, e.g. traditional PCs and SmartPhones.
Let us remark that this service has been recently introduced in the
European mobile phones marketplace and currently provides users
with short streams containing relevant pieces of football matches.
Therefore, in this simple example, the communities involved are:
the VoD service community (SC), the network community N C,
and two device communities (P CC for the PCs and SM C for the
SmartPhones).

First of all, recall that the model assumes that communities de-
ﬁne the functional speciﬁcations and identify the set of quality pa-
rameters deemed relevant with respect to the services they provide.
Therefore we assume communities to deﬁne the following quality
sets.
SC deﬁnes the quality set V oDspec.QSQoS as follows:
V oDspec.QSQoS = {hf ramerate, [5f ps..40f ps]i,
hcolordepth, [2bit..24bit]i,
hresolution, [320 × 200; 800 × 600; 1024 × 768]i}
N C deﬁnes the quality set M yN etspec.QSQoN as follows:
M yN etspec.QSQoN = {hbandwidth, [10Kbps...512Kbps]i,
hloss, [0..0.01]i,
hlatency, [5ms..500ms]i}
P CC deﬁnes the quality set P cspec.QSQoD as follows:
P cspec.QSQoD = {hcolors, [2..24bit]i,
hnw int, [802.11b; 802.3]i}

52SM C deﬁnes the quality set SmartP honespec.QSQoD as fol-
lows:
SmartP honespec.QSQoD = {hweight, [150gr..300gr]i,
hcolors, [2..16bit]i,
hnw int, [GP RS; U M T S; GSM ]i}

Communities are also responsible of deﬁning the quality rules
relating quality parameters. These rules originates from the analy-
sis of the physical dependencies among the service, network, and
device parameters. Considering the VoD example, and considering
very simpliﬁed versions of the actual mathematical relationships, it
is possible to state that:

f ramerate ? colordepth ? resolution = K ? bandwidth

According to this relationship we can also identify the follow-
ing relationships which affects the admissible range of the quality
parameters.

best(f ramerate) =

best(bandwidth)

worst(colordepth) ? worst(resolution)

worst(f ramerate) =

worst(bandwidth)

best(colordepth) ? best(resolution)

best(colordepth) =

minimum(best(colors), best(colordepth))

worst(qoe.colordepth) =

minimum(worst(colors), worst(colordepth))

With similar reasonings, it is possible to derive how each service
quality parameter is affected by (i) channel quality parameters and
(ii) device quality parameters, i.e. to deﬁne quality rules. There-
fore we abstract out from the detailed sequence of steps taking to
the precise derivation of quality rules, which are the main objec-
tives of some ongoing works. We limit to mention that observing
mathematical relationships as those described above, it is possible
to precisely characterize these rules. In particular, it is possible to
evaluate two end-to-end quality rules, namely qr1() and qr2(), that
take a service quality set as input parameter and return the service
quality perceived by users accessing the service through network
M yN et and using either a PC or a smartphone, respectively. Let us
now suppose that four different actors (namely, a service provider
S1, a network provider N1, a PC provider D1, and a smartphone
provider D2) implement all the speciﬁcations described above. Ac-
cording to actor roles, besides the implementation of the functional
speciﬁcation, actors are in charge of deﬁning an object quality set
that satisﬁes the containment property with respect to related speci-
ﬁcation. Therefore we assume these providers to deﬁne the follow-
ing object quality sets.
S1 deﬁnes the S1.QSQoS quality set as follows:
S1.QSQoS = {hf ramerate, [5f ps..30f ps]i,
hcolordepth, [2bit..24bit]i,
hresolution, [320 × 200; 800 × 600]i}
N1 deﬁnes the N1.QSQoN quality set as follows:
N1.QSQoN = {hbandwidth, [10Kbps...128Kbps]i,
hloss, [0..0.01]i,
hlatency, [10ms..500ms]i}

D1 deﬁnes the D1.QSQoD quality set as follows:
D1.QSQoD = {hcolors, [2..24bit]i,
hnw int, [802.3]i}
D2 deﬁnes the D2.QSQoD quality set as follows:
D2.SmartP honespec.QSQoD = {hweight, [170gr..180gr]i,
hcolors, [2..8bit]i,
hnw int, [U M T S]i}

These speciﬁcations, together with the quality rules qr1 and qr2,
allow the user to derive the end-to-end quality of service for each
available channel. Note that, in this simple example, the admissible
channels are two (obtained combining network M yN et with the
devices D1 and D2). For each of these channels the user can eval-
uate how the service quality set S1.QSQoS is perceived through
these channels applying the quality functions. Such an evalua-
tion generates, for each channel, a new quality set Ui.QSQoS ⊆
S1.QSQoS (i identiﬁes the channel). Note that Ui.QSQoS is com-
posed by the same quality parameters belonging to S1.QSQoS with
an admissible range restricted if necessary. Let us also ﬁnally re-
mark that the same evaluation can be performed by service providers
in order to provide users with a precise characterization of the ac-
tual end-to-end quality of service they are going to perceive upon
accessing the service. This feature can be used perform service
composition basing on dynamic, end-to-end quality of service spec-
iﬁcations that depend on the overall path followed by service infor-
mation.

6. CONCLUDING REMARKS

In this paper we have presented a quality model for multichannel
information systems. In this context, and in particular if we follow
an adaptive perspective as the one adopted in the MAIS project,
service provisioning and its associated quality values cannot be au-
tomatically determined.
In fact, channels and user requirements
can change during or before service provisioning, and on the other
hand the service provider can dynamically improve the provision-
ing quality if necessary.

To enable such an adaptation, the model takes into account the
different objects which compose a multichannel information sys-
tem, i.e., service, network, device, and user. Each of these objects
is modeled with respect to the related community which deﬁnes
the quality parameters and their admissible ranges. Referring to
the community, in fact, we are able to normalize the description of
the objects in order to simplify the comparison among them.

The proposed model is therefore a general framework which is
useful for both the contract speciﬁcation and contract enactment.
In the ﬁrst case the quality parameters can be used to specify multi-
party contracts between all involved partners, deﬁning admissible
values for each involved object. Once the contract is deﬁned, the
quality parameters are also used to monitor potential problems and
to adapt service provisioning both on provider side and on channel
side to context characteristics changed during the enactment.

7. ACKNOWLEDGMENTS

Part of this work has been supported by the Italian MIUR FIRB

MAIS Project.

538. REFERENCES
[1] Distributed Management Task Force Standards.

http://www.dmtf.org/standards.

[2] Uddi Web Site. http://www.uddi.org/.
[3] Workshop on ”End-to-End Quality of Service. What is it? How do

we get it?”, ITU Headquarters, Monbrillant Building, October 2003.
http://www.itu.int/ITU-T/worksem/qos/.

[4] ACM. Communications of the ACM, October 2003.
[5] L. Baresi, D. Bianchini, V. D. Antonellis, M. G. Fugini, B. Pernici,

and P. Plebani. Context-aware Composition of e-Service. In
Technologies for E-Services : Third International Workshop, TES
2003, Berlin, German, September 7-8, 2003.

[6] R. Chinnici, M. Gudgin, J. Moreau, and S. Weerawarana. Web

Services Description Language (WSDL) 1.2.
http://www.w3.org/TR/2003/WD-wsdl12-20030124,
January 2003.

[7] E. Crawley, R. Nair, B. Rajagopalan, and H. Sandick. A framework

for QoS-based Routing in the Internet. Internet Engineering Task
Force - RFC 2386, August 1998.

[8] DAML Service Coalition. DAML-S: Semantic Markup For Web

Services. http://www.daml.org/services/daml-s/0.
7/daml-s.html, October 2002.

[9] S. Frølung and J. Koistinen. QML: A Language for Quality of

Service Speciﬁcation. Technical Report HPL98-10, HP Labs, HP
Software Technologies Laboratory, February 1998.

[10] H. HP. Web Services concepts A technical overview.

http://www.bluestone.com/downloads/pdf/web_
services_tech_overvie%w.pdf.

[11] G. Huston. Next Steps for the IP QoS Architecture. Internet

Engineering Task Force - RFC 2990, November 2000.

[12] I. (ITU). Terms and deﬁnitions related to quality of service and

network performance including dependability. ITU
Recommendation E.800 (08/94), August 1994.

[13] I. (ITU). Communications Quality of Service: A framework and

deﬁnitions. ITU Recommendation G.1000 (11/01), November 2001.

[14] L. Jin, V. Machiraju, and A. Sahai. Analysis on Service Level

Agreement of Web Services. Technical Report HPL-2002-180, HP
Labs, June 2002.

[15] G. Kar, A. Keller, and S. Calo. Managing Application Services over
Service Provider Networks: Architecture and Dependency Analysis.
In Proc. of the 7th IEEE/IFIP Network Operations and Management
Symposium (NOMS), 2000.

[16] A. Keller and H. Ludwig. The WSLA Framework: Specifying and
Monitoring Service Level Agreements for Web Services. Technical
Report RC22456(W0205-171), IBM Research Division, T.J. Watson
Research Center, May 2002.

[17] S. Khirman and P. Henriksen. Relationship Between

Quality-of-Service and Quality-of-Experience for Public Internet
Service. In In Proc. of the 3rd Workshop on Passive and Active
Measurement, Fort Collins, Colorado, USA, March 2002.
http://www.labs.agilent.com/hosted/
conferences/pam2002/proceedin%gs/
Relationship_Between_QoS_and_QoE.pdf.

[18] F. Kon, F. Costa, G. Blair, and R. H. Campbell. The case for

reﬂective middleware. Communications of the ACM, 45(6):33–38,
June 2002.

[19] V. Machiraju, A.Sahai, and A. P. A. van Moorsel. Web Services

Management Network: An Overlay Network for Federated Service
Management. In Proc. of the Eighth International Symposium on
Integrated Network Management, pages 351–364, March 2003.

[20] A. Mani and A. Magarajan. Understanding quality of service of your

Web services. IBM Developer Works, January 2002.
http://www.ibm.com/developerworks/library/
ws-quality.html.

[21] C. Marchetti, B. Pernici, and P. Plebani. A quality model for

e-Service based multi-channel adaptive information systems. 1st
Web Services Quality Workshop (WQW 2003) in conjunction with
WISE Conference 2003, Rome, December 2003.

[22] C. Marchetti, A. Virgillito, and R. Baldoni. Enhancing Availability

of Cooperative Applications through Interoperable Middleware.
Journal of Information Science and Engineering, 19(1):39–57,
January 2003. special issue on parallel and distributed systems.
[23] A. Maurino, B. Pernici, and F. A. Schreiber. Adaptive channel

behaviour in ﬁnancial information system. In UMICS Workshop in
conjunction with CAISE 2003, Klagenfurt-Velden, Austria, June
16-17, 2003.

[24] J. M. Myerson. Guarantee your Web Service with an SLA. IBM

Developer Works, April 2002. http:
//www.ibm.com/developerworks/library/ws-sla.

[25] S. Ran. A model for web services discovery with QoS. ACM

SIGecom Exchanges, 4(1):1–10, Spring 2003.

[26] M. Siller and J. Woods. Improving Quality of Experience for

Multimedia Services by QoS arbitration on QoE Framework. In in
Proc. of the 13th Packed Video Workshop 2003, Nantes, France,
April 2003. http://www.polytech.univ-nantes.fr/
pv2003/papers/pv/papers/cr104%7.pdf.

[27] R. Sturm, W. Morris, and M. Jander. Foundations of Service Level

Management. SAMS, 2000.

[28] A. van Moorsel. Metrics for the Intenet Age: Quality of Experience

and Quality of Business. Technical report, HP Labs, July 2001.
appears also in the proceedings of the 5th Performability Workshop,
Spetember 16, 2001, Erlagen, Germany.

[29] L. Zeng, B. Benatallah, M. Dumas, J. Kalagnanam, and Q. Z. Sheng.

Quality driven web services composition. In Proceedings of the
twelfth international conference on World Wide Web, pages
411–421. ACM Press, 2003.

[30] J. A. Zinky, D. E. Bakken, and R. E. Schantz. Architectural support

for quality of service for CORBA objects. Theory and Practice of
Object Systems, 3(1), 1997.

54