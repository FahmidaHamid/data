An Expressive Mechanism for Auctions on the Web ∗

Paul Dütting

Ecole Polytechnique Fédérale

de Lausanne (EPFL)

Station 14

CH-1015 Lausanne,

Switzerland

paul.duetting@epﬂ.ch

Monika Henzinger
University of Vienna
Universitätsstrasse 10/11
A-1090 Vienna, Austria

monika.henzinger@univie.ac.at

Ingmar Weber
Yahoo! Research
Av. Diagonal 177 8o

E-08018 Barcelona, Spain
ingmar@yahoo-inc.com

ABSTRACT
Auctions are widely used on the Web. Applications range
from internet advertising to platforms such as eBay. In most
of these applications the auctions in use are single/multi-
item auctions with unit demand. The main drawback of
standard mechanisms for this type of auctions, such as VCG
and GSP, is the limited expressiveness that they oﬀer to the
bidders. The General Auction Mechanism (GAM) of [1] is
taking a ﬁrst step towards addressing the problem of limited
expressiveness by computing a bidder optimal, envy free out-
come for linear utility functions with identical slopes and a
single discontinuity per bidder-item pair. We show that in
many practical situations this does not suﬃce to adequately
model the preferences of the bidders, and we overcome this
problem by presenting the ﬁrst mechanism for piece-wise lin-
ear utility functions with non-identical slopes and multiple
discontinuities. Our mechanism runs in polynomial time.
Like GAM it is incentive compatible for inputs that fulﬁll a
certain non-degeneracy requirement, but our requirement is
more general than the requirement of GAM. For discontin-
uous utility functions that are non-degenerate as well as for
continuous utility functions the outcome of our mechanism
is a competitive equilibrium. We also show how our mecha-
nism can be used to compute approximately bidder optimal,
envy free outcomes for a general class of continuous utility
functions via piece-wise linear approximation. Finally, we
prove hardness results for even more expressive settings.

Categories and Subject Descriptors
F.2.2 [Theory of Computation]: Analysis of Algorithms and
Problem Complexity—Nonnumerical Algorithms and Problems

General Terms
Algorithms, Economics, Theory

Keywords
VCG, GSP, General Auction Mechanism, Expressiveness,
Envy Freeness, Bidder Optimality, Competitive Equilibrium

∗A full version of this paper with all proofs is available from:
http://infoscience.epfl.ch/record/153929

Copyright is held by the International World Wide Web Conference Com-
mittee (IW3C2). Distribution of these papers is limited to classroom use,
and personal use by others.
WWW 2011, March 28–April 1, 2011, Hyderabad, India.
ACM 978-1-4503-0632-4/11/03.

1.

INTRODUCTION

Auctions are widely used on the Web. They are, e.g., used
by Google, Microsoft, and Yahoo! for search advertising [36].
They are also used on platforms such as eBay for selling
a broad variety of goods and services [41, 8].
In most of
these applications the auctions in use are single/multi-item
auctions with unit demand. The problem solved by these
auctions is essentially a matching and pricing problem. In
this problem n bidders have to be matched to k items. Each
bidder has a utility function ui,j (pj) that expresses his utility
for being matched to item j at price pj. An outcome (µ, p)
consisting of a matching µ and prices p is said to be envy free
if at the current prices every bidder prefers the item that he
is currently matched to over every other item.1 An envy free
outcome (µ, p) is called bidder optimal if the utility of every
bidder is at least as high as in every other envy free outcome
(µ′, p′). Mechanisms that compute a bidder optimal, envy
free outcome are desirable because they not only guarantee
that everyone is “happy with what he gets”, but also that
everyone is “as happy as possible”. From an economic point
of view a bidder optimal, envy free outcome in which all
unsold items have price zero is desirable because it represents
a competitive equilibrium (or Walrasian equilibrium) [40].
1.1 Limitations of Current Mechanisms

Standard mechanisms for auctions on the web, such as
First- and Second Price for single-item auctions and Vickrey
Clarkes Groves (VCG) [45, 14, 31] and Generalized Second
Price (GSP) [26, 43] for multi-item auctions, nicely ﬁt into
the above model. For linear utility functions with identical
slopes, i.e., utilities of the form ui,j (pj) = vi,j − pj, where
vi,j denotes bidder i’s valuation for item j, the outcome of
VCG, for example, is envy free and bidder optimal [37].

The main drawback of these standard mechanisms is the
limited expressiveness that they oﬀer to the bidders. In par-
ticular, (1) they typically limit what functions the bidders
can use to express their utility for receiving a given item
at a given price. In ad auctions, for example, some of the
bidders may have per-click valuations, while others have per-
impression valuations. Mechanisms that can handle either
type exist (see, e.g., [26, 43] or [38, 27]), but mechanisms
that can handle both types simultaneously are still rare [30].
Moreover, (2) they do not allow to express budgets. Budgets
can either be soft (a limited amount of cash after which the
bidder has to take out a loan) or hard (an upper bound on
the price the bidder is willing to pay). Budgets are consid-

1In the related literature (see, e.g., [1]) such outcomes are
also referred to as stable.

WWW 2011 – Session: Monetization IMarch 28–April 1, 2011, Hyderabad, India127ered an important and diﬃcult problem that recently has
received a lot of attention (see, e.g., [11, 23]).

The General Auction Mechanism (GAM) of [1] is taking
a ﬁrst step towards addressing the problem of limited ex-
pressiveness by allowing the bidders to specify a maximum
price for each item. That is, it ﬁnds a bidder optimal, envy
free outcome for linear utilities with identical slopes and a
single discontinuity per bidder-item pair. More speciﬁcally,
the utility functions are of the form ui,j(pj) = vi,j − pj if
pj ≤ mi,j and ui,j (pj) = −∞ otherwise, where mi,j denotes
the bidder-item speciﬁc maximum price. GAM requires the
input to be in general position (see [1] and Section 4 for a
generalization of this concept). In general position it also
preserves a very desirable property of the original model.
Namely, no bidder can misreport his valuations and/or max-
imum prices to achieve a strictly higher utility. This makes
it a (weakly) dominant strategy for the bidders to report
truthfully. Mechanisms with this property are said to be
incentive compatible (or strategy proof) [40].

Despite its generality GAM has three major limitations:
(1) It can only handle linear utility functions with identical
slopes. (2) It can only handle a single discontinuity with a
jump to −∞ per bidder-item pair. (3) It cannot handle non-
linear utility functions. We illustrate why and when these
shortcomings are problematic by means of three examples.

(This example
Example 2: Soft and hard budgets.
motivates piece-wise linear utilities with non-identical slopes
and multiple discontinuities.) Suppose that bidder i wants
to buy a car on eBay.
In the current system it would be
dangerous for i to bid on more than one car at the same
time due to the risk of winning and having to pay for several
cars when one is already enough. With a GAM-like auction
i could bid on many cars at the same time while still being
guaranteed that he gets at most one.

With expensive items, such as cars, i’s valuation vi,j for
item j may exceed the amount c of cash that he possesses.
In this case i might be willing to take out a loan if the price
pj of item j exceeds c. Assume that i is oﬀered a loan with a
maximum amount of a, an interest rate of r, and a ﬁxed fee
of f . Then i’s utility for item j has the following form: (1)
Because no interest is due for the ﬁrst c dollars the utility
function drops linearly with a slope of −1 from 0 to c. (2)
At c it drops by the ﬁxed fee f .
(3) Afterwards, due to
the interest rate r, every dollar spent causes 1 + r dollars in
actual cost. Hence the utility function drops linearly with a
slope of −(1 + r) from c to c + a.
In addition to the soft budget constraint c, bidder i may
have a hard budget constraint b < c + a, which is typically
modeled by a jump to −∞ at pj = b. Hence bidder i’s utility
function for item j ultimately looks like this:

Example 1: Per-click vs. per-impression valuations.
(This example motivates linear utilities with non-identical
slopes.) Consider an ad auction with bidders with per-click
valuations vclick
and bidders with per-impression valuations
vimp
i,j . Suppose that the mechanism collects per-click valua-
tions and charges per-click prices. That is,
i,j − pclick

ui,j (pclick

) = vclick

(1)

i,j

.

j

j

j

) = vimp

i,j = vimp

A bidder with per-impression valuations can translate his
valuations into per-click valuations using the click trough
rate ctri,j as follows: vclick
i,j /ctri,j . That is, he re-
ports ui,j (pclick
. Now suppose that
given the per-click valuations, the mechanism computes an
envy free outcome (µ, pclick) consisting of a matching µ and
per-click prices pclick. That is, for every matched bidder-item
pair (i, j) ∈ µ and all items j′ 6= j we have:
i,j ′ − pclick

i,j /ctri,j − pclick

vclick
i,j − pclick

≥ vclick

(2)

j ′

.

j

j

What we actually want for bidders i with per-impression
valuations vimp

i,j

is that for (i, j) ∈ µ and all j′ 6= j:
vimp
i,j − pimp

j ≥ vimp

i,j ′ − pimp
i,j with vimp

j ′

(3)

with

But if we take (2), replace vclick
pimp
j

/ctri,j, and multiply by ctri,j, then we get

i,j /ctri,j , pclick

j

vimp
i,j − pimp

j ≥ C · (vimp

i,j ′ − pimp

j ′

),

(4)

where C = ctri,j/ctri,j ′ . That is, if C < 1, then (4) is not
strong enough to guarantee envy freeness for per-impression
bidders. With non-identical slopes this can be sidestepped
by having bidders with per-impression valuations report

ui,j(pclick

j

) = vimp

i,j − ctri,j · pclick

j

.

(5)

In this case the outcome (µ, pclick) computed by the mech-
anism will be envy free for both types of bidders, i.e., the
above problem does not arise.

without loan
with loan

j
 

m
e
t
i
 
r
o
f
 
y
t
i
l
i
t
u
 
s

’
i
 

=
 
)
j
_
p
(
j
,
i
_
u

0

c

b < c+a

p_j = price of item j

Figure 1: Bidder i’s utility function for item j.

Note that import duties that apply when bidder i wants
to purchase car j abroad and its price pj exceeds a certain
threshold give rise to similar utility functions.

Example 3: Risk aversion. (This example motivates ar-
bitrary, non-linear utilities.) In the previous example bidder
i may also be faced with costs for uncertain events after the
purchase, such as potential car repairs. A risk-averse buyer
would have a utility function that drops super-linearly in the
price as a higher price is associated with a higher risk of not
having suﬃcient money to pay for the unforeseen events.
1.2 Our Contributions

We overcome the limitations of GAM as follows: (1) We
present the ﬁrst mechanism for piece-wise linear utility func-
tions with non-identical slopes and multiple discontinuities.
The problem solved by our mechanism is more diﬃcult than
that solved by GAM as non-identical slopes require the prices
to be increased by diﬀerent amounts, and multiple disconti-
nuities can cause previously matched bidders to become un-
matched several times. Our mechanism is more expressive
than GAM as it can simultaneously auction oﬀ items to bid-
ders with per-click and per-impression valuations (Example

WWW 2011 – Session: Monetization IMarch 28–April 1, 2011, Hyderabad, India1281), and it can handle a variety of soft and hard budget con-
straints (Example 2). The running time of our mechanism
is polynomial in the number of bidders n and items k.2 It is
linear in the number of discontinuities D and constant-slope
intervals T of the utility functions. (2) We precisely charac-
terize under which conditions any mechanism that computes
a bidder optimal, envy free outcome in this setting is incen-
tive compatible. This characterization involves a generaliza-
tion of the general position concept of [1]. For discontinuous
utility functions that are non-degenerate as well as for con-
tinuous utility functions the outcome of our mechanism is a
competitive equilibrium. (3) We show how to use our mech-
anism to compute a γ-bidder optimal, envy free outcome for
a general class of continuous utility functions via piece-wise
linear approximation in time linear in 1/√γ.
(4) Finally,
we prove hardness results for two natural generalizations of
our problem. In the ﬁrst, the utilities may depend on the
matching.
In the second, they may depend on the whole
vector of prices. In both cases computing a bidder optimal,
envy free outcome is NP-hard.
1.3 Related Work
Continuous utility functions. For linear utility functions
with identical slopes the underlying matching and pricing
problem was ﬁrst studied by Shapley and Shubik [42]. They
formulated the matching problem as a linear program and
observed that the dual program yields envy free prices. With
the help of this formulation they also proved the existence
of an outcome with smallest prices/largest utilities, which
is the bidder optimal outcome. Later Leonard [37] exam-
ined the incentives for misreporting and found that the bid-
der optimal outcome is identical to the outcome of VCG
[45, 14, 31] and therefore incentive compatible. The classic
mechanism for linear utility functions with identical slopes
is the so-called Multi-Item Auction of Demange et al. [20],
which is a variant of the so-called Hungarian Method by
Kuhn [35]. The basic idea of this mechanism is to start
with prices all zero and to repeatedly raise the prices of
overdemanded items by the same amount. This idea was
generalized to continuous, piece-wise linear utility functions
with non-identical slopes by Alkan [3, 4], who showed that
the prices of overdemanded items need to be raised by dif-
ferent amounts and that these amounts can be computed by
solving a primal/dual problem. The existence of a bidder
optimal outcome for more general, non-linear utility func-
tions was shown by Demange and Gale [18] using a lattice-
theoretic argument. They also proved that for continuous
utility functions any mechanism that ﬁnds a bidder optimal
outcome is incentive compatible. Recently, Alaei et al. [2]
presented a novel, inductive characterization of the bidder
optimal utilities/prices in this setting, which yields a con-
structive proof of existence. Although hardness results have
been established for related problems (see, e.g., [22, 44]),
it is not clear whether or under which conditions a bidder
optimal outcome can be found eﬃciently for such general
continuous utility functions.

Discontinuous utility functions. The ﬁrst to add a sin-
gle discontinuity to otherwise linear utility functions with
identical slopes were Aggarwal et al. [1]. They also gave a
mechanism, which - for inputs in general position - is incen-
tive compatible and ﬁnds a bidder optimal outcome in poly-

2For n > k it is linear in n.

nomial time. Similar results to that of Aggarwal et al. [1]
were obtained by [5, 6] and [25]. In [34] it was shown how to
ﬁnd the smallest envy free prices for a given matching. Re-
cently, Chen et al. [12] gave a polynomial-time mechanism
for consistent utility functions. Note that all these results
either assume identical slopes [1, 6, 25, 34], just a single dis-
continuity [1, 6, 25, 34, 12], or both. Also note that the
piece-wise linear utility functions with non-identical slopes
and multiple discontinuities that we study here are not con-
sistent. The existence of a bidder optimal, envy free outcome
for more general, non-linear utility functions with multiple
discontinuities was established in [24], but just as in the
continuous case no polynomial-time mechanism is known for
such general discontinuous utility functions.

Externalities. Our hardness results rely on the fact that
bidder i’s utility for being matched to item j may depend
on (a) who is assigned which item or (b) the prices of the
other items. Such dependencies are referred to as externali-
ties. The “classic” result here is due to Jehiel et al. [33], who
presented a revenue maximizing auction for the sale of a sin-
gle item when bidders who do not acquire the item for sale
incur a bidder-dependent externality. Other related results
are [7] and [28]. The former analyzes Nash equilibria of so-
called social context games in which utilities are computed
based on an undirected neighborhood graph among play-
ers and aggregation functions. The latter proves that the
following winner determination problem, which, e.g, arises
is NP-hard and hard to ap-
in the pay-per lead model,
proximate:3 Choose a set S of at most k advertisers from
a set of n advertisers, each with a private value vi and a
random quality variable qi to maximize the expected value

v(S) = Pi∈S vi · Pr[∀j ∈ S ∪ {0} : qi ≥ qj], where q0 is the

quality of the best outside option. The externality is thus
encoded in the choice of S and the fact that the distributions
from which the qi are drawn need not be independent. Our
problem is diﬀerent as there is not a single winner and the
externality is either encoded in the matching or the prices.
1.4 Overview of Techniques

Our main result, the generalization of GAM, draws from
the rich literature on matching and pricing problems in var-
ious ways: First, it uses the same terminology (e.g., strict
overdemand, alternating path, alternating tree) and exploits
the same link to Hall’s theorem [32] that was already used
in [20] and in [35]. It also borrows from [3, 4], in which the
computation of price increases for continuous, piece-wise lin-
ear utility functions with non-identical slopes is formulated
as a primal/dual problem, although we reﬁne this approach
to signiﬁcantly improve upon the running time4 and extend
it to discontinuous utility functions. Finally, our analysis
follows a similar approach as [1] to cope with the fact that
in the presence of discontinuities bidder optimality and in-
centive compatibility no longer coincide by characterizing
inputs for which this is still the case.

On a conceptual level our main achievement is a decou-
pling of the argument for bidder optimality from the argu-
ment for incentive compatibility. On a technical level it is
that we can show bidder optimality even if discontinuities
require previously matched bidders to be unmatched. We

3www.iab.net/lead_generation

4In [3, 4] the running time is stated as O(n2 · k4 ·Qi,j ti,j),
where ti,j denotes the number of linear segments of ui,j (·).

WWW 2011 – Session: Monetization IMarch 28–April 1, 2011, Hyderabad, India129achieve this through a reﬁnement of Alkan’s technique for
increasing the prices when slopes are non-identical (Lemma
7) with a novel argument that shows that all price increases
by the mechanism are necessary, even if discontinuities are
reached and bidders become unmatched (Lemma 8). To-
gether these lemmata allow us to prove bidder optimality
even for inputs which make it necessary to unmatch previ-
ously matched bidders. Note that neither [3, 4] nor [1] have
to unmatch bidders, because they either assume continuity
or restrict themselves to inputs in general position.

Our new insight for incentive compatibility is that if for
each price increase at most one utility function reaches a
discontinuity, then bidders never get unmatched (Lemma
9). We also observe that in this case (a) all items with price
pj > rj , where rj denotes an item-dependent reserve price,
are matched, and (b) at least one item j that is matched
has pj = rj (Lemma 9). We then use a variant of Hwang’s
Lemma (Lemma 10) to prove that whenever (a) and (b)
are satisﬁed any mechanism that computes a bidder opti-
mal outcome is incentive compatible (Theorem 2). Finally,
we formulate a condition on the input that guarantees that
for each price increase at most one discontinuity is reached.
Following Aggarwal et al. [1] we say that inputs that satisfy
this condition are in general position, but our condition on
the input is more general than that of [1] as it applies to
piece-wise linear utility functions with non-identical slopes
and multiple discontinuities.

Concerning general continuous utility functions it is intu-
itively obvious that the solution to a close enough piece-wise
linear approximation cannot be far worse than the solution
to the original problem. The diﬃculty here is to get a run-
ning time that is polynomial in 1/γ, where γ is the maximal
distance between the resulting bidder optimal utilities for
the approximate utility functions and for the original utility
functions. In fact, it is not diﬃcult to show that O(1/√ǫ)
linear segments suﬃce to ensure that the maximum distance
between the approximate utility functions and the original
utility functions is at most ǫ (Lemma 11). The hard part
here is to show that γ scales linearly in ǫ (Lemma 12).

We establish the hardness result for utility functions that
depend on the matching through a reduction from 3-SAT
[16] and the hardness result for utility functions that de-
pend on the whole vector of prices through a reduction from
MAX-2-NASH [29, 15].5 The reduction from MAX-2-NASH
represents a novel and interesting link between the matching
and pricing problem studied here and the problem of com-
puting Nash equilibria, whose computational complexity has
been settled only recently [17, 13].

A full version of this paper with all proofs is available from:
http://infoscience.epfl.ch/record/153929

2. PROBLEM STATEMENT

We are given a set I of n bidders and a set J of k items.
The set of items J contains a dedicated dummy item that we
denote j0. For each bidder i we are given a constant oi, called
the outside option, which is the utility that bidder i derives
from not getting any non-dummy item. For each item j we
are given a constant rj ≥ 0, called the reserve price, which is
a lower bound on pj. Finally, for each bidder-item pair (i, j)
we are given a utility function ui,j (pj), where pj denotes the

price of item j. The utility functions are piece-wise linear.
That is, each ui,j (·) is composed of ti,j linear segments

(6)

i,j

i,j

i,j , e(t)

i,j ),
i,j = ∞, s(t)

(ti,j )

i,j = s(t+1)

u(t)
i,j (pj) = v(t)

i,j · pj for pj ∈ [s(t)
i,j = rj, e

i,j − c(t)
where t ∈ {1, . . . , ti,j}, s(1)
i,j < e(t)
(∀t), and e(t)
(∀t 6= ti,j ). Where possible we omit
(t) to improve readability. We make the following assump-
tions concerning the utility functions: (1) They are strictly
monotonically decreasing.
(2) They need not be globally
continuous. (3) For every bidder-item pair (i, j) there exists
a threshold value ¯pi,j such that ui,j (¯pi,j) ≤ oi. (4) The util-
ity functions ui,j0 (·) for the dummy item j0 are of the form
ui,j0 (pj0 ) = oi − pj0 for pj0 ∈ [0, ∞) and rj0 = 0.6
We want to compute (1) a subset µ ⊆ I × J of the bidder-
item pairs, in which (a) every bidder i appears in exactly
one pair (i, j) ∈ µ and (b) every non-dummy item j 6= j0
appears in at most one pair. We refer to this set as match-
ing, even though multiple bidders i can be matched to the
dummy item j0. We also want to compute (2) per-item
prices p = (p1, .., pk). We refer to the pair (µ, p) as outcome.
An outcome (µ, p) is feasible if

pj0 = 0 and pj ≥ rj for all j 6= j0.

(7)

We say that prices with this property are feasible. In the
remainder of this paper whenever we refer to prices we mean
feasible prices. An outcome is envy free if it is feasible and
for all i and (i, j) ∈ I × J,

ui,µ(i)(pµ(i)) ≥ ui,j (pj),

(8)

where µ(i) denotes the item bidder i is matched to. An
outcome (µ, p) is bidder optimal if it is envy free and for
every bidder i and every envy free outcome (µ′, p′) we have

ui,µ(i)(pµ(i)) ≥ ui,µ′ (i)(p′

µ′(i)).

(9)

Our goal is to compute a bidder optimal outcome.

3. MECHANISM

In this section we describe and analyze our mechanism for
piece-wise linear utilities. We proceed as follows: First, we
show how to reduce the problem of ﬁnding a bidder optimal
outcome for an input with reserve prices to the problem
of ﬁnding such an outcome for a diﬀerent input in which
the reserve prices are all zero. Second, we prove that the
bidder optimal outcome has minimal prices among all envy
free outcomes. We then formulate the problem as a graph
problem. This allows us to deﬁne strict overdemand and
to prove that an envy free outcome exists if and only if no
set of items is strictly overdemanded using Hall’s Theorem
[32]. Our mechanism, which can be seen as an algorithmic
version of Hall’s Theorem [32], starts with prices all zero and
iteratively raises the prices of strictly overdemanded items.
To ensure minimality of the resulting prices it does this in
an envy free and overdemand preserving manner.

Standard form. We say that the input is in standard form
if rj = 0 for all j. The following lemma shows that we can
w.l.o.g. assume that the input is in standard form as for
any problem instance that is not in standard form there is a
linear-time reduction to an instance in standard form. This

5MAX-2-NASH is the problem of ﬁnding a Nash equilibrium
of a 2-player game, which maximizes the sum of the utilities.

6Note that this deﬁnition guarantees that in every envy free
outcome every bidder i has utility at least oi.

WWW 2011 – Session: Monetization IMarch 28–April 1, 2011, Hyderabad, India130reduction is similar to the reduction described in [3]. The
lemma also shows that a suﬃcient condition for an outcome
(µ∗, p∗) to be bidder optimal is that the prices p∗ are the
minimum prices at which an envy free outcome exists. This
was already known for continuous utility functions (see, e.g.,
[18]), but it is a novel observation for discontinuous utility
functions. Moreover, unlike in the continuous case, the re-
verse need not be true for discontinuous utility functions.

Lemma 1. We have:

1. If the outcome (µ, p) is bidder optimal for u′

ui,j (pj + rj ) and r′
p′
j = pj + rj is bidder optimal for ui,j (pj) and rj.

i,j (pj) =
j = 0, then the outcome (µ, p′) with

2. If the outcome (µ∗, p∗) is envy free and p∗

j ≤ pj for
all items j and every envy free outcome (µ, p), then
(µ∗, p∗) is bidder optimal.

Graph-theoretic formulation. Next we formulate the
problem of computing an envy free outcome as a graph prob-
lem. Central to this formulation is the ﬁrst choice graph
Gp = (I ∪ J, Fp) at prices p, which consists of one node
per bidder i, one node per item j, and an edge from i to
j if and only if item j gives bidder i the highest utility
at the current prices. That is, ui,j (pj) ≥ ui,k(pk) for all
k. For i ∈ I we deﬁne Fp(i) = {j : ∃ (i, j) ∈ Fp} and
similarly Fp(j) = {i : ∃ (i, j) ∈ Fp}. Analogously, for
T ⊆ I we deﬁne Fp(T ) = ∪i∈T Fp(i) and for S ⊆ J we
deﬁne Fp(S) = ∪j∈SFp(j). Based on the ﬁrst choice graph
we deﬁne strict overdemand: A set of non-dummy items
S ⊆ J \ {j0} is strictly overdemanded at prices p with re-
spect to the set of bidders T ⊆ I if (a) Fp(T ) ⊆ S and (b)
for all R ⊆ S with R 6= ∅ : |Fp(R) ∩ T| > |R|. A set of non-
dummy items S ⊆ J \ {j0} is strictly overdemanded, if it is
strictly overdemanded with respect to some set of bidders
T ⊆ I. Our deﬁnition of strict overdemand is stronger than
the deﬁnition of overdemand [20], which only requires that
the number of bidders T demanding only items in the set S
is greater than the number of items in the set. It is diﬀerent
from the notion of minimal overdemand [20], which requires
that no subset is overdemanded. It is also diﬀerent from the
notion of directional overdemand in [4]. The advantage of
our deﬁnition will become clear in the next subsection. The
following lemma is established using Hall’s Theorem [32] and
the fact that a strictly overdemanded set of items exists if
and only if an overdemanded set of items exists.

Lemma 2. The following statements are equivalent:

1. The outcome (µ, p) is envy free.

2. There exists a matching µ in Gp.

3. No set of items S ⊆ J \ {j0} is strictly overdemanded

at prices p.

Alternating paths and trees. To identify strictly overde-
manded items our mechanism makes use of alternating paths
and trees: Let µ be a partial matching. That is, a matching
in which not all of the bidders have to be matched. An al-
ternating path P with respect to µ in the ﬁrst choice graph
Gp at prices p from an unmatched bidder i0 to some item
or bidder j is a sequence of edges that alternates between
unmatched and matched edges and in which all items ex-
cept j are non-dummy items. An alternating tree T with

respect to µ with root i0 is a tree in the ﬁrst choice graph
Gp at prices p which is rooted at an unmatched bidder i0
and in which all paths from the root i0 to a leaf j are al-
ternating. An alternating tree is maximal if the ﬁrst choice
items of all bidders in the tree are contained in the tree and
all matched items in the tree are matched to bidders in the
tree. Formally: If T ⊆ I and S ⊆ J are the bidders and
items in the tree T , then Fp(T ) ⊆ S and µ(S) ⊆ T. The fact
that a partial matching can be augmented along an alternat-
ing path from an unmatched bidder to an unmatched item
has been used before (see, e.g., [20]). The new insight of
the following lemma is thus that there is a close correspon-
dence between maximal alternating trees and our deﬁnition
of strict overdemand.

Lemma 3. For any maximal alternating tree T with re-

spect to µ with root i0 in Gp, we have:

1. If the dummy item j0 or some unmatched item j 6= j0
is contained in T , then the matching µ can be aug-
mented along an alternating path P from i0 to j0 resp. j.
2. If all items S in T are non-dummy items and matched,
then S is strictly overdemanded with respect to the bid-
ders T in the tree and |T| = |S| + 1.

Envy free price increase. Once we have identiﬁed a
strictly overdemanded set of items we need to determine
how to increase the prices in the set: A price increase d is
a k-dimensional vector with entries dj for j ∈ {1, . . . , k}. A
price increase is envy free with respect to a set of ﬁrst choice
edges E ⊆ Fp\(I×{j0}) at prices p if (a) dj > 0 for all j such
that there is a bidder i with (i, j) ∈ E and dj = 0 otherwise,
and (b) ui,j(pj + λ · dj) ≥ ui,k(pk + λ · dk) for all (i, j) ∈ E,
all (i, k) ∈ Fp, and all suﬃciently small λ > 0. Note that
it is suﬃcient to require (b) for all (i, k) ∈ Fp and not all
(i, k) ∈ I × J, because for every (i, k) ∈ (I × J)\ Fp we have
ui,j (pj) > ui,k(pk) and, thus, ui,j (pj +λ·dj) ≥ ui,k(pk+λ·dk)
holds already. Also note that because for no i we have
(i, j0) ∈ E any envy free price increase has dj0 = 0. Our
deﬁnition of envy free price increase is similar to the deﬁni-
tion of a competitive direction in [3]. The next two lemmata
are proved in [3] for competitive directions and continuous
utility functions, we generalize them to envy free price in-
creases and discontinuous utility functions. The ﬁrst lemma
is an immediate consequence of the deﬁnition of envy free
price increases. The second lemma gives a suﬃcient and
necessary condition for a price increase d 6= 0 to be envy
free for a set of ﬁrst choice edges E ⊆ Fp. It shows that a
price increase d is envy free for a ﬁrst choice edge (i, j) ∈ Fp
if and only if the “utility drop” ci,j · dj on this edge is min-
imal across the ﬁrst choice edges (i, k) ∈ Fp incident to i.
We exploit this characterization in the computation of price
increases described in the next subsection.

Lemma 4. If d is an envy free price increase with respect
to the set of ﬁrst choice edges E ⊆ Fp \ (I × {j0}) at prices
p, then E belongs to the set of ﬁrst choice edges at prices
p + λ · d for all suﬃciently small λ > 0.

Lemma 5. A price increase d 6= 0 is envy free for the
set of ﬁrst choice edges E ⊆ Fp at prices p if and only if
ci,j · dj ≤ ci,k · dk for all (i, j) ∈ E ⊆ Fp and all (i, k) ∈ Fp.
Overdemand preserving price increase. It is not diﬃ-
cult to see that envy free prices are not enough to guarantee

WWW 2011 – Session: Monetization IMarch 28–April 1, 2011, Hyderabad, India131minimum prices. To achieve this goal we deﬁne a stronger
notion of price increases, which exploits the correspondence
between maximal alternating trees and strict overdemand:
An overdemand preserving price increase d for a maximal
alternating tree T with respect to µ with root i0 in Gp with
item set S ⊆ J \ {j0} and bidder set T in which all items
are matched, is a price increase d such that (a) there is some
partial matching µ′ that matches the same bidders and items
as µ and that is identical to µ on I \ T × J \ S, (b) there is
a maximal alternating tree T ′ with respect to µ′ with root
i0 that has the same item and bidder set as T , and (c) d is
envy free for the edges of the maximal alternating tree T ′.
We say that µ′ is the matching that corresponds to d. Note
that µ′ can be diﬀerent from µ on T × S. The crucial and
new fact is that by (b) all items in the tree, i.e., all items
whose price is increased, remain overdemanded for any small
enough price increase.

Lemma 6. If d is an overdemand preserving price increase
for a maximal alternating tree T with respect to µ with root
i0 in Gp with item set S ⊆ J\{j0} and bidder set T in which
all items are matched, then S is strictly overdemanded with
respect to T in Gp+λ·d for all suﬃciently small λ > 0.

Next we present a subroutine that computes an overdemand
preserving price increase d and a corresponding matching µ′
for a maximal alternating tree T with respect to µ with
root i0 in Gp with item set S ⊆ J \ {j0} and bidder set T
in which all items are matched. The computation consists
of three steps: (1) The subroutine computes a matching σ
between T \{i0} and S consisting of ﬁrst choice edges, which
minimizes Q(i,j)∈µ ci,j , or equivalently, P(i,j)∈µ log(ci,j). It
also computes an envy free price increase d for σ. This can
be accomplished by solving a linear program (LP) and its
dual (DP), e.g., by using a primal-dual algorithm [35]. The
duality between slopes and utility drops exploited here is
reminiscent of the duality between value-maximizing match-
ings and envy free prices in [42]. (2) The subroutine extends
d to an envy free direction for a maximal alternating tree T ′
with respect to σ with root i0 in Gp with bidder set T and
item set S. (3) The subroutine extends σ to µ′ by adding to
it the bidder-item pairs from I \ T × J \ S that were matched
in µ. While (1) is essentially an application of Lemma 5 (and
has been used in a similar form in [3, 4]), (2) and (3) exploit
the newly established correspondence between maximal al-
ternating trees and strict overdemand.

Subroutine for price increases
Input: maximal alternating tree T with respect to µ with
root i0 in Gp with item set S and bidder set T in which
all items are matched

Output: overdemand preserving price increase d for T with
corresponding matching µ′
compute x as optimal solution to the following LP and
1
let σ = {(i, j) ∈ T \ {i0} × S | xi,j = 1}
min Pi,j xi,j · log(ci,j)
sb Pj∈Fp(i) xi,j = 1 (∀i ∈ T \ {i0})

Pi∈Fp(j) xi,j = 1 (∀j ∈ S)
xi,j ≥ 0

(∀(i, j) ∈ Fp ∩ (T \ {i0} × S))
compute ω, ρ as optimal solution to the following DP

2

max Pi ωi +Pj ρj

ωi + ρj ≤ log(ci,j )

sb

(∀(i, j) ∈ Fp ∩ (T \ {i0} × S))

3

4

5

6

extend ω from T \ {i0} to T by setting
ωi0 = minj∈S log(ci0,j ) − ρj
let Hρ = (T ∪ S, Eρ), where
Eρ = {(i, j) ∈ Fρ ∩ (T × S) | ωi + ρj = log(ci,j )}
let T ′ be a maximal alternating tree in Hρ with
respect to σ with root i0
let S′ ⊆ S and T ′ ⊆ T denote the items and
bidders in T ′

7 while T ′ 6= T or S′ 6= S do
8
9

let δ = min(i,j)∈Fp:i∈T ′,j∈S\S ′ log(ci,j ) − ωi − ρj
set ρj = ρj + δ for all j ∈ S \ S′,
set ωi = ωi − δ for all i ∈ T \ T ′
recompute T ′, T ′, and S′

10
11 end while
12 set dj = e−ρj for all j ∈ S and dj = 0 otherwise
13 set µ′ = σ ∪ (µ ∩ (I \ T × J \ S))
14 output d and µ′

Lemma 7. This subroutine ﬁnds an overdemand preserv-
ing price increase and a corresponding matching. It can be
implemented to run in time O(min(n, k)3).

The following lemma – our key lemma and main technical
improvement over [3, 4] – shows that if overdemand preserv-
ing price increases are used, then the resulting prices will be
minimum over all envy free outcomes.

Lemma 8. Let d be an overdemand preserving price in-
crease for a maximal alternating tree T in Gp with item set
S and bidder set T in which all items are matched. Let λ > 0
be the smallest scalar such that at p + λ· d (a) a bidder-item
pair (i, j) ∈ T × J \ S enters Gp+λ·d or (b) the end point e(t)
i,j
of some interval t > 0 is reached. Then for any envy free
outcome (µ′′, p′′) with p′′ ≥ p we have p′′ ≥ p + λ · d.
Bidder optimal outcome. Our mechanism starts with an
empty matching µ = ∅ and prices p = 0. It then matches
one bidder after the other until eventually all bidders are
matched. For this it computes a maximal alternating tree T
with respect to µ with root i0, where i0 is the bidder to be
matched, in the ﬁrst choice graph Gp. If the alternating tree
contains the dummy item j0 or an unmatched item j, then
by Lemma 3 the current matching µ can be augmented along
an alternating path from i0 to j0 resp. j. If this is not the
case, then – again by Lemma 3 – the items S in the tree are
strictly overdemanded with respect to the bidders T in the
tree. In this case the mechanism computes an overdemand
preserving price increase d together with a corresponding
matching µ′ (using the subroutine from the previous sub-
section) and raises the prices in compliance with d until (a)
a bidder-item pair (i, j) ∈ T × J \ S enters the ﬁrst choice
graph Gp+λ·d or (b) the end point e(t)
i,j of some interval t > 0
is reached. In either case the current matching µ is replaced
with µ′ and the minimality of the new prices is guaranteed
by Lemma 8. If at least one of the new prices pj + λ · dj
corresponds to a discontinuity, then one or multiple edges
might drop out of the ﬁrst choice graph. The mechanism
corrects for this by removing such edges from the matching
if necessary. If no discontinuity is reached, then the maximal
alternating tree T rooted at i0 grows by at least one item.
Mechanism for piece-wise linear utility functions
Input: bidders I, items J, piece-wise linear utility functions
ui,j (·) with non-identical slopes and multiple discontinu-
ities, reserve prices rj = 0, outside options oi

WWW 2011 – Session: Monetization IMarch 28–April 1, 2011, Hyderabad, India132Output: bidder optimal outcome (µ, p)
1
2 while there exists an unmatched bidder i0 do
3

set pj = 0 for all j and set µ = ∅

compute maximal alternating tree T wrt µ in the ﬁrst
choice graph Gp with root i0
let T and S be the bidders and items in T
while all items in S are matched and S does not

4
5

6

7

8
9

10

11
11
12

contain the dummy item j0 do

compute overdemand-preserving price increase d for
T and corresponding matching µ′ (using the sub-
routine from the previous subsection)
let λ > 0 be the smallest scalar such that at prices
p + λ · d

(a) a bidder-item pair (i, j) ∈ T × J \ S enters
(b) the end point e(t)

the ﬁrst choice graph Gp+λ·d or

i,j of some interval t > 0

is reached

set pj = pj + λ · dj for all j ∈ J and set µ = µ′
remove bidder-item pairs from µ that do not belong
to the ﬁrst choice graph Gp
compute maximal alternating tree T wrt µ in the
ﬁrst choice graph Gp with root i
let T and S be the bidders and items in T

end while
augment µ along alternating path P from i0 to
unmatched item j or dummy item j0

13 end while
14 output (µ, p)

Theorem 1. This mechanism ﬁnds a bidder optimal out-
come. It can be implemented to run in time O((n·min(n, k)+
D · min(n, k) + T ) · min(n, k) · (min(n, k)2 + k)), where D =
Pi,j di,j and T = Pi,j ti,j denote the total number of dis-
continuities and constant-slope intervals.

4.

INCENTIVE COMPATIBILITY

In this section we precisely characterize under which con-
ditions any mechanism that computes a bidder optimal out-
come is incentive compatible.
Intuitively, a mechanism is
incentive compatible if for every bidder i, independently of
all other bidders, reporting his true utility functions yields
an outcome, which gives him the highest possible utility.
This can be formalized as follows: A mechanism is incentive
compatible if for every bidder i with utility functions ui,j (·)
and every two sets of utility functions u′
i,j(·),
where u′
i,j (·) = ui,j (·) for i and all j and u′
k,j (·) for
all k 6= i and all j, and corresponding outcomes (µ′, p′) and
(µ′′, p′′) of the mechanism we have

i,j (·) and u′′
k,j (·) = u′′

ui,µ′(i)(p′

µ′(i)) ≥ ui,µ′′(i)(p′′

µ′′(i)).

(10)

Note that this deﬁnition does not involve the reserve prices
rj or outside options oi. This makes sense because the re-
serve prices rj are typically set by the seller and misreporting
oi is never beneﬁcial to i.7

(This example shows that
Example: Lying pays oﬀ.
bidder optimality does not imply incentive compatibility.)
There are two bidders i ∈ {1, 2} and two items j ∈ {1, 2}.
7Over-reporting can only lead to a missed chance of being
assigned an item and under-reporting can only lead to a
utility below the true outside option.

The utility functions for i ∈ {1, 2} are:

ui,1(p1) = (cid:26) 20 − p1
−∞
1 − p2

ui,2(p2) =

for p1 ∈ [0, 5), and
otherwise,
for p2 ∈ [0, ∞).

The reserve prices are rj = 0 for j ∈ {1, 2} and the outside
options are oi = 0 for i ∈ {1, 2}. A bidder optimal outcome
for this input is µ = {(1, 2)} with p1 = 5 and p2 = 1. For
this outcome both bidders have a utility of zero. Bidder 1
can improve his utility by pretending to have u1,1 = 0 − p1
for p1 ∈ [0, ∞). In this case the bidder optimal outcome is
µ = {(1, 2), (2, 1)} with p1 = p2 = 0. The utility of bidder 1
improves from 0 to 1. The crucial point – as we will show
below – is that in the computation of the bidder optimal
outcome on this example two ﬁrst choice edges, namely (1, 1)
and (2, 1), simultaneously break away from the ﬁrst choice
graph at price p1 = 5.

Price-independent formulation. We will deﬁne next a
condition on the input that implies that never during the
execution of the mechanism two edges will break away from
the ﬁrst choice graph during the same price increase. Which
edges break away depends on the current prices and the price
increases. However, using the following idea we can write
down a condition that does not depend on the current prices:
Suppose that the edges (i, j), (i′, j), and (i′, j′) belong to the
ﬁrst choice graph Gp at prices p. It follows that
vi′ ,j − ci′ ,j · pj = vi′ ,j ′ − ci′ ,j ′ · pj ′ .

(11)

Suppose further that d is an envy free price increase for the
set of ﬁrst choice edges E = {(i, j), (i′, j), (i′, j′)}, then
vi′ ,j − ci′ ,j · (pj + λdj ) = vi′ ,j ′ − ci′,j ′ · (pj ′ + λdj ′ ).

(12)

By subtracting (11) from (12), dividing by λ > 0, and after
rearranging we get

dj = ci′ ,j ′ /ci,j · dj ′ .

(13)

Now suppose that the discontinuities Di,j and Di′ ,j ′ are
reached simultaneously. Then by (12):

vi′ ,j − ci′ ,j · Di,j = vi′ ,j ′ − ci′ ,j ′ · Di′ ,j ′ .

(14)
Using (13), subtracting 1/dj · vi,j /ci,j from both sides, and
after rearranging we get

1
dj

(Di,j −

vi,j
ci,j

) = −

1
dj

vi,j
ci,j

+

1
dj

vi′ ,j
ci′ ,j

+

1
dj ′

(Di′ ,j ′ −

vi′ ,j ′
ci′ ,j ′

).

Below we will deﬁne a multigraph such that the left and
right hand side of this equation correspond to the weights of
two alternating walks in the graph, namely P = (i, j) and
Q = (i, j, i′, j′). Note that neither the weight of P nor the
weight of Q depend on the prices.

General position. For a given input we deﬁne a multi-
graph, called input graph, as follows: There is one node per
bidder i ∈ I and one node per item j ∈ J. There are three
types of edges: (a) there is one forward edge from i to j for
each linear segment of ui,j (·), (b) a backward edge from j to
i for each linear segment of ui,j (·), and (c) a discontinuity
edge from i to j for each discontinuity Di,j of ui,j (·).
Let P = (i0, j1, . . . , is, js) be a walk in the input graph
that alternates between forward and backward edges, and
ends with a discontinuity edge. Let d be a price increase
such that dj = (ci,j ′ /ci,j ) · dj ′ for any two edges (i, j) and

WWW 2011 – Session: Monetization IMarch 28–April 1, 2011, Hyderabad, India133(i, j′) on P . Deﬁne the weight of each forward edge (i, j) on
P with respect to d as (−1/dj)· (vi,j /ci,j ), of each backward
edge (j, i) as (1/dj )· (vi,j /ci,j ), and of the discontinuity edge
(i, j) as (1/dj ) · (Di,j − vi,j /ci,j ). Here vi,j and ci,j are the
constants of the corresponding linear segments. Deﬁne the
weight wd(P ) of P with respect to d as the sum of these
weights. We say that the input is in general position if for no
two walks P and Q that start with the same bidder and end
with a distinct discontinuity edge and for no price increase
d such that dj = (ci,j ′ /ci,j ) · dj ′ for any two edges (i, j) and
(i, j′) on P resp. Q we have wd(P ) = wd(Q). Note that this
deﬁnition of general position is more general than that in [1].
In particular, it takes into account that the utility functions
have non-identical slopes and multiple discontinuities.

Lemma 9. We have:

1. An input is in general position if and only if the asso-

ciated input in standard form is in general position.

2. Let (µ, p) denote the outcome of the mechanism in Sec-

tion 3. If the input is in general position, then

(i) no two discontinuities are reached simultaneously,
(ii) if an item gets unmatched, it gets matched again

in the subsequent iteration,

(iii) if pj > rj, then item j is matched under µ, and
(iv) the last item, say j, that gets matched has pj = rj .

Characterization. We already know that bidder optimal-
ity does not imply incentive compatibility, if the input is not
in general position. With the help of the following lemma –
which is a generalization of Hwang’s Lemma (see, e.g., [19,
21]) – we can show that any mechanism that computes a
bidder optimal outcome is incentive compatible if conditions
(iii) and (iv) from Lemma 9 are satisﬁed. An easy corollary
is that if the input is in general position, then any mecha-
nism that computes a bidder optimal outcome is incentive
compatible. Note that while we do not have a polynomial-
time algorithm to check whether an input is in general po-
sition, we can easily check whether conditions (iii) and (iv)
are satisﬁed using our mechanism from Section 3.

Lemma 10. If conditions (iii) and (iv) from Lemma 9 are

satisﬁed, then:

1. If the outcome (µ∗, p∗) is bidder optimal, then for no
µ′(i)) >

feasible outcome (µ′, p′) we can have ui,µ′(i)(p′
ui,µ∗(i)(p∗

µ∗(i)) for all i.

2. If the outcome (µ∗, p∗) is bidder optimal, the outcome
(µ′, p′) is feasible, and I + = {i ∈ I | ui,µ′(i)(p′
µ′(i)) >
ui,µ∗(i)(p∗
µ∗(i))} 6= ∅, then there exists a bidder-item
pair (i, j) ∈ I \ I + × J s.t. ui,µ′(i)(pµ′(i)) < ui,j (p′
j).

Theorem 2. If conditions (iii) and (iv) from Lemma 9
are satisﬁed, then any mechanism that computes a bidder
optimal is incentive compatible.

We conclude our discussion of the incentives involved in
computing bidder optimal outcomes with several interest-
ing open questions concerning the general position concept:
First, what does it take (time-wise) to evaluate whether an
input is in general position? Second, what does it take to
change an input that is not in general position to be in gen-
eral position? Finally, under which conditions is a bidder
optimal solution to an input that has been brought into gen-
eral position also bidder optimal for the original input?

5. APPROXIMATION

In this section we show how our mechanism for piece-
wise linear utility functions can be applied to compute ap-
proximately bidder optimal outcomes for a general class of
continuous utility functions ui,j (·). The idea is as follows:
Approximate each utility function ui,j (·) by a piece-wise lin-
ear utility function ˜ui,j (·). Then solve the problem for this
approximated input exactly and use the outcome (˜µ, ˜p) ob-
tained as an approximate solution to the original problem.
More speciﬁcally, we say that an outcome (˜µ, ˜p) is γ-envy
free for the input ui,j(·) if it is feasible and ui, ˜µ(i)(˜p ˜µ(i))+γ ≥
ui,j (˜pj) for all (i, j) ∈ I × J. An outcome (˜µ, ˜p) is γ-bidder
optimal if it is γ-envy free and for any envy free outcome
(˜µ′, ˜p′) we have ui, ˜µ(i)(˜p ˜µ(i)) + γ ≥ ui, ˜µ′(i)(˜p′
Apart from the assumptions that the utility functions
ui,j (·) are strictly monotonically decreasing and continuous
we make the following mild assumptions concerning the ﬁrst
and second derivatives ˙ui,j (·) and ¨ui,j (·) of ui,j (·), which al-
low us to bound the number of linear segments needed for
piece-wise linear approximation:
(A.1) The utility functions ui,j (·) are twice diﬀerentiable on

[rj, ¯pi,j], i.e., ¨ui,j (pj) exists on this interval.

˜µ′(i)).

(A.2) There exists a constant B such that for ∀(i, j) ∈ I×J :

maxpj ∈[rj , ¯pi,j ] |¨ui,j (pj)| ≤ B.

(A.3) There exist constants m and M such that ∀(i, j) ∈ I×J

and ∀pj ∈ [rj, ¯pi,j] : 0 < m ≤ | ˙ui,j (pj)| ≤ M.

Note that we use ˙ui,j (·) and ¨ui,j (·) to denote the ﬁrst and
second derivative of ui,j (·) to avoid confusion with u′
i,j (·) and
u′′
i,j (·), which were previously used in a diﬀerent context.
Piece-wise linear approximation. Given ǫ > 0 we con-
struct a piece-wise linear, continuous approximation ˜ui,j (·)
for ui,j (·) with error at most ǫ, i.e., |ui,j (pj)−˜ui,j (pj)| ≤ ǫ for
all pj ∈ [rj, ¯pi,j ], as follows: First, as ui,j (·) can extend from
rj to ∞ and could potentially require an inﬁnite number of
segments to approximate, we limit the approximation to the
range [rj, ¯pi,j ] as follows: Since pj > ¯pi,j cannot correspond
to a match as then ui,j (pj) < oi = ui,j0 (pj0 ), we can extend
ui,j (pj) for prices pj > ¯pi,j in a continuous and diﬀerentiable
way by the line ˜ui,j (pj) = ˙ui,j (¯pi,j)· pj − ˙ui,j (¯pi,j)· ¯pi,j . This
limits the “interesting” domain to [rj, ¯pi,j ]. Next we split the
range [rj, ¯pi,j] into S = ⌈(¯pi,j − rj)/p8ǫ/B⌉ intervals of
equal width w = (¯pi,j − rj )/S. On any interval with end-
points [˜e(t), ˜e(t+1)], where ˜e(t+1) = ˜e(t) + w, the line ˜ui,j (·)
used to approximate ui,j (·) is deﬁned by

˜ui,j (pj )=

ui,j (˜e(t+1) )−ui,j (˜e(t) )

˜e(t+1) −˜e(t)

pj +

ui,j (˜e(t) )˜e(t+1) −ui,j (˜e(t+1) )˜e(t)

˜e(t+1) −˜e(t)

.

We call this kind of approximation point-to-point approxi-
mation as the piece-wise linear approximation agrees with
the original function at the end points of each interval. The
following lemma shows that the above algorithm does indeed
give a close approximation.

Lemma 11. For every bidder-item pair (i, j) ∈ I × J the
algorithm described above gives a point-to-point approxima-
tion using O(|¯pi,j − rj| · √B · 1/√ǫ) = O(p1/ǫ) segments

that (i) is piece-wise linear, (ii) continuous, and (iii) has
error at most ǫ.

Approximately bidder optimal outcome. Given a set
of continuous, piece-wise linear, point-to-point approxima-
tions ˜ui,j (·) with error at most ǫ, we can use the mechanism

WWW 2011 – Session: Monetization IMarch 28–April 1, 2011, Hyderabad, India134from Section 3 to obtain a bidder optimal outcome (˜µ, ˜p)
for the approximated input. The following lemma bounds
how “far” away from the bidder optimal outcome (µ, p) for
the original utility functions ui,j (·) this outcome can be de-
pending on how “close” the piece-wise linear approximations
are, i.e., depending on how small ǫ is. The idea is as follows:
Suppose we knew the bidder optimal prices p for ui,j (·). We
could use them to “jumpstart” the mechanism from Section
3. That is, starting from p we could ﬁnd the smallest prices
˜p′ such that (˜µ′, ˜p′) is envy free for ˜ui,j (·). From Lemma 1
we know that for the bidder optimal prices ˜p we have that
˜p ≤ ˜p′ so that any upper bound on ˜p′ also applies to ˜p. To
bound the diﬀerence between p and ˜p′ we ﬁrst bound the ra-
tio between the biggest and the smallest non-zero entry of an
overdemand preserving price increase by O((M/m)min(n,k)).
We then argue that between any two consecutive executions
of Step 7(a) in the mechanism from Section 3 this diﬀerence
is increased by a multiplicative factor of O((M/m)min(n,k)).
The crucial point here is that the number of executions of
Step 7(a) is O(min(n, k)2) and thus independent of ǫ, while
the number of executions of Step 7(b) depends on the num-
ber of linear segments and thus on ǫ. We use the resulting
bound on the diﬀerence between the prices to bound the dif-
ference between the utilities. Theorem 3 follows from this
bound for ǫ small enough.

Lemma 12. For every envy free outcome (µ, p) for ui,j (·)
and continuous, piece-wise linear, point-to-point approxima-
tion ˜ui,j (·) with error at most ǫ the mechanism from Section
3 ﬁnds an envy free outcome (˜µ, ˜p) for ˜ui,j (·) with ˜pj ≤
pj + (2M/m)(min(n,k)+1)3
· ǫ/M for all j and ˜ui, ˜µ(i)(˜p ˜µ(i)) +
(2M/m)(min(n,k)+1)3

· ǫ ≥ ui,µ(i)(pµ(i)) for all i.

Theorem 3. Given strictly monotonically decreasing, con-
tinuous utility functions ui,j (·) satisfying assumptions (A.1)
to (A.3), we can compute a γ-bidder optimal outcome with
the running time speciﬁed in Theorem 1, where D = 0,

T = O(p1/ǫ), and ǫ = γ · (2M/m)−(min(n,k)+1)3
6. EXTERNALITIES

.

In this section we show that two natural generalizations of
our problem are NP-hard: In the ﬁrst, the utility functions
are allowed to depend on the matching. In the second, they
are allowed to depend on the vector of prices.

Utilities that depend on the matching. Our ﬁrst hard-
ness result is for utility functions that depend on the match-
ing. These utility functions allow, for example, to express
that a given advertiser (e.g. Coca-Cola) achieves a higher
utility if he gets an ad slot that is above the slot of her com-
petitor (e.g. Pepsi). For utility functions of this kind it is
NP-complete to decide whether there exists an outcome in
which the sum of the utilities is above a certain threshold.

Theorem 4. Given utility functions ui,j (µ) that depend
on the matching µ, and given a constant K, deciding whether
there exists an envy free outcome with sum of the utilities at
least K is NP-complete.
Utilities that depend on the vector of prices. Our
second hardness result concerns situations in which the util-
ity that a bidder derives from being matched to an item
depends on the whole vector of prices. These utility func-
tions allow, for example, to express that a bidder i achieves

a higher utility when the other bidders have to pay more,
i.e., when items that i does not get become more expensive.
For these utility functions deciding whether there exists an
envy free outcome in which the sum of the utilities is above
a certain threshold is NP-complete.

Theorem 5. Given utility functions ui,j (p) that depend
on the whole vector of prices p = (p1, . . . , pk), that are mono-
tonically decreasing in pj and monotonically increasing in pk
for all k 6= j, and given a constant K, it is NP-complete
to decide whether there exists an envy free outcome (µ, p) in
which the sum of the utilities is at least L.
7. FUTURE WORK

The demand for more expressive mechanisms is reﬂected
in the richness of preferences oﬀered by web applications as
diverse as matchmaking sites, sites like Amazon and NetFlix,
and services like Google’s AdSense. Standard mechanisms
often do not meet this demand. Providing mechanisms that
do meet this demand and that at the same time (1) guar-
antee the existence of a stable solution, (2) are computa-
tionally tractable, and (3) have good incentive properties is
one of the major challenges that the ﬁeld of computational
mechanism design is currently faced with.

In this paper we contributed to this general agenda by
considering the domain of multi-item auctions with unit de-
mand and by providing the most expressive mechanism for
this setting so far. This mechanism, which can be seen as a
generalization of the General Auction Mechanism of [1], can
handle piece-wise linear utility functions with non-identical
slopes and multiple discontinuities. These utility functions
allow the bidders to explicitly specify conversion rates (en-
abling , e.g., per-click auctions that are simultaneously envy
free for bidders with per-click and per-impression valuations)
and a variety of soft and hard budget constraints (which, e.g.,
arise when bidders have a limited amount of cash and have
to take out loans). An interesting direction for future work
would be to push the “expressiveness frontier” even further.
This is particularly true for more general domains, e.g., one-
to-many and many-to-many domains.

On a more abstract level it would be desirable to have a
“theory of expressiveness”, which helps to ﬁnd the right de-
gree of expressiveness. More expressiveness might be good
(e.g., because more eﬃcient outcomes are obtainable), but it
might also be too much (e.g., stable outcomes may no longer
exist, may be hard to compute, or may be easy to manipu-
late). A ﬁrst step towards such a general theory, although
under very diﬀerent premises, was recently undertaken by
[9, 10], but, especially in the light of [39], any reﬁnement of
this theory would be highly interesting.
Acknowledgement
This project has been funded by the Vienna Science and
Technology Fund WWTF grant ICT10-002 and a European
Young Investigators Award (http://www.esf.org/euryi/).
8. REFERENCES
[1] G. Aggarwal, S. Muthukrishnan, D. P´al, and M. P´al.

General auction mechanism for search advertising.
WWW, pages 241–250, 2009.

[2] S. Alaei, K. Jain, and A. Malekian. Walrasian

equilibrium for unit demand buyers with non-quasi-
linear utilities. Working paper, pages 1–19, 2010.

WWW 2011 – Session: Monetization IMarch 28–April 1, 2011, Hyderabad, India135[3] A. Alkan. Existence and computation of matching

[25] P. D¨utting, M. Henzinger, and I. Weber. Sponsored

equilibria. Political Economy, 5:285–296, 1989.

[4] M. Alkan. Equilibrium in a matching market with

general preferences. Equilibrium and Dynamics.
Essays in Honour of David Gale, pages 1–16, 1992.

[5] I. Ashlagi, M. Braverman, and A. Hassidim.

Ascending unit demand auctions with budget limits.
Working paper, pages 1–11, 2009.

[6] I. Ashlagi, M. Braverman, A. Hassidim, R. Lavi, and

M. Tennenholtz. Position auctions with budgets:
Existence and uniqueness. The B.E. Journal of
Theoretical Economics, 10 (1):(Advances), 2010.

[7] I. Ashlagi, P. Krysta, and M. Tennenholtz. Social

search, market equilibria, and the hungarian method.
STACS, pages 287–298, 2010.

[26] B. Edelman, M. Ostrovsky, and M. Schwarz. Internet
advertising and the generalized second price auction:
Selling billions of dollars worth of keywords. American
Economic Review, 97(1):242–259, 2007.

[27] J. Feldman, M. Henzinger, N. Korula, V. Mirrokni,
and C. Stein. Online stochastic packing applied to
display ad allocation. ESA, pages 1–13, 2010.

[28] A. Ghosh and A. Sayedi. Expressive auctions for
externalities in online advertising. WWW, pages
371–380, 2010.

context games. WINE, pages 675–683, 2008.

[29] I. Gilboa and E. Zemel. Nash and correlated

[8] P. Bajari and A. Hortacsu. The winner’s curse, reserve
prices, and endogenous entry: Empirical insights from
ebay auctions. The RAND Journal of Economics, Vol.
34(2):329–355, 2003.

equilibria: Some complexity considerations. Games
and Economic Behavior, 1(1):80–93, 1989.

[30] A. Goel and K. Munagala. Hybrid keyword search

auctions. WWW, pages 221–230, 2009.

[9] M. Benisch, N. Sadeh, and T. Sandholm. A theory of

[31] T. Groves. Incentives in teams. Econometrica,

expressiveness in mechanisms. AAAI, pages 17–23,
2008.

41:617–631, 1973.

[32] P. Hall. On representatives of subsets. London

[10] M. Benisch, N. Sadeh, and T. Sandholm. Methodology

Mathematical Society, 10:26–30, 1935.

for designing reasonably expressive mechanisms with
application to ad auctions. IJCAI, pages 46–52, 2009.
[11] S. Borgs, J. Chayes, N. Immorlica, M. Mahdian, and

A. Saberi. Multi-unit auctions with budget
constrained bidders. EC, pages 44–51, 2005.

[12] N. Chen, X. Deng, and A. Ghosh. Competitive

equilibria in matching markets with budgets. Working
paper, pages 1–34, 2010.

[13] X. Chen and X. Deng. Settling the complexity of

two-player nash equilibrium. FOCS, pages 261–272,
2006.

[14] E. H. Clarke. Multipart pricing of public goods. Public

Choice, 11(1):17–33, 1971.

[15] V. Conitzer and T. Sandholm. Complexity results

about nash equilibria. IJCAI, pages 765–771, 2003.

[33] P. Jehiel, B. Moldovanu, and E. Stacchetti. How (not)

to sell nuclear weapons. American Economic Review,
86(4):814–29, 1996.

[34] D. Kempe, A. Mu’alem, and M. Salek. Envy-free

allocations for budgeted bidders. WINE, pages
537–544, 2009.

[35] H. W. Kuhn. The Hungarian Method for the

assignment problem. Naval Research Logistics,
2:83–97, 1955.

[36] S. Lahaie, D. M. Pennock, A. Saberi, and R. V.

Vohra. Sponsored search auctions. Algorithmic Game
Theory, pages 699–716, 2007.

[37] H. B. Leonard. Elicitation of honest preferences for
the assignment of individuals to positions. Political
Economy, 91:461–479, 1983.

[16] S. A. Cook. The complexity of theorem-proving

[38] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani.

procedures. STOC, pages 151–158, 1971.

[17] C. Daskalakis and C. H. Papadimitriou. Three-player

Adwords and generalized online matching. Journal of
the ACM, 54(5):1–19, 2007.

games are hard. ECCC, pages 1–10, 2005.

[39] P. Milgrom. Simpliﬁed mechanisms with an

[18] G. Demange and D. Gale. The strategy structure of

two-sided matching markets. Econometrica,
53(4):873–888, 1985.

[19] G. Demange, D. Gale, and M. Sotomayor. Some

remarks on the stable marriage problem. Discrete
Applied Mathematics, 11:223–232, 1985.

[20] G. Demange, D. Gale, and M. Sotomayor. Multi-item

auctions. Political Economy, 94(4):863–72, 1986.

[21] G. Demange, D. Gale, and M. Sotomayor. A further

note on the stable matching problem. Discrete Applied
Mathematics, 16(3):217–222, 1987.

application to sponsored-search auctions. Games and
Economic Behavior, 70:62–70, 2010.

[40] N. Nisan, T. Roughgarden, E. Tardos, and

V. Vazirani. Algorithmic Game Theory. Cambridge
University Press, 2007.

[41] A. E. Roth and A. Ockenfels. Last-minute bidding and

the rules for ending second-price auctions: Evidence
from ebay and amazon auctions on the internet. The
American Economic Review, 92(4):1093–1103, 2002.
[42] L. S. Shapley and M. Shubik. The assignment game:

The core I. Game Theory, 29:111–130, 1971.

[22] X. Deng and Y. Du. The computation of approximate

[43] H. Varian. Position auctions. Industrial Organization,

competitive equilibrium is ppad-hard. Information
Processing Letters, 108(6):369–373, 2008.

[23] S. Dobzinski, R. Lavi, and N. Nisan. Multi-unit

auctions with budget limits. FOCS, pages 260–269,
2008.

[24] P. D¨utting, M. Henzinger, and I. Weber. Bidder

optimal assignments for general utilities. WINE, pages
575–582, 2009.

25(6):1163–1178, 2007.

[44] V. Vazirani and M. Yannakakis. Ppad-completeness of

ﬁsher markets under piecewise-linear, concave utility
functions. ICTS, pages 156–166, 2010.

[45] W. Vickrey. Counterspeculation, auctions, and

competitive sealed tenders. Finance, 16:8–27, 1961.

WWW 2011 – Session: Monetization IMarch 28–April 1, 2011, Hyderabad, India136