A Kernel based Structure Matching for Web Services

Search

∗

Jianjun Yu

Shengmin Guo

Hao Su

State Key Lab. of Software Development Environment

Beihang University, Beijing, China

{yujj,guosm,suhao,hzhang}@nlsde.buaa.edu.cn

Hui Zhang

Ke Xu

ABSTRACT
This paper describes a kernel based Web Services (abbrevi-
ated as service) matching mechanism for service discovery
and integration. The matching mechanism tries to exploit
the latent semantics by the structure of services. Using tex-
tual similarity and n-spectrum kernel values as features of
low-level and mid-level, we build up a model to estimate the
functional similarity between services, whose parameters are
learned by a Ranking-SVM. The experiment results showed
that several metrics for the retrieval of services have been
improved by our approach.

Categories and Subject Descriptors
H.3.3 [Information Storage and Retrieval]: Informa-
tion Search and Retrieval—retrieval models, search process,
selection process; H.3.5 [Information Storage and Re-
trieval]: Online Information Services—Web-based Services

General Terms
Algorithms, Languages, Design, Experimentation

Keywords
Web Services, Web Services Matching, WSDL, n-Spectrum
Kernel, Ranking SVM

1.

INTRODUCTION

A hotspot in the research of service is to realize large-
scale service discovery and integration in Internet. Con-
ventional matching mechanisms, like in UDDI, are mainly
based on keyword search, however, the precision of those ap-
proaches are relatively low. To address this problem, several
approaches considering structural information have sprung
up [1, 3, 6]. They signiﬁcantly improve the precision with
the requirement that matched services should be similar in
structure. But in practical, those approaches are too strict
to recognize similar services with diﬀerent data structure
encapsulation. Consequently, they have low recalls.

Therefore, we put forward a novel loose tree matching al-
gorithm which extracts the structural features from another
perspective to help improve the recognition of functionally
similar services.

∗Supported by 973 2005CB321901 and BNP 2005B12

Copyright is held by the author/owner(s).
WWW 2007, May 8–12, 2007, Banff, Alberta, Canada.
ACM 978-1-59593-654-7/07/0005.

2. WEB SERVICES SIMILARITY

In our algorithm, services are schemed by WSDL (Web

Services Description Language) as tree-structured documents,
and two kinds of features are extracted.

One kind is to calculate two WSDL documents’ text sim-
ilarity with a classical VSM (Vector Space Model) [2], re-
garding the documents as unstructured text. In the classical
VSM, a document is formalized as a vector, and each dimen-
sion of the vector represents a word in the document. The
value of the dimension is calculated by the tf − idf formula
[2] as an estimation of the importance of the word in the
document.

The other kind of features describes the structural simi-
larity. It takes two steps to get such features. First, we have
to do some preprocess to extract document trees from the
two WSDL documents and align their nodes according to
the label’s textual similarity. Aligned nodes are considered
identical. After the preprocess, we model the documents
trees as a vector in a n-spectrum vector space (n = 2, 3, ...),
and use the newly brought forward n-spectrum kernel func-
tion [4] to compare how much hierarchical relationships the
two trees share in common. With a set of diﬀerent n, we
have a set of diﬀerent function values as features.

Modeling a document tree as a vector in the n-spectrum
vector space is similar to modeling a text document stated
above, except that each dimension in the n-spectrum vector
space represents an n-path subsequence deﬁned as below:

A path subsequence (abbreviated as ps) is an ordered set
of nodes extracted from a path of the document tree (ab-
breviated as DT ). The set containing all n − ps (n is the
number of nodes in a ps) of the DT is called the n-spectrum
of DT , denoted by Ψn(DT ). Intuitively, two document trees
are more similar if they share more common ps.
Then, we consider the problem of a ps(cid:48)s weight in the
vector. A ps may not be picked contiguously from a path,
however, we assume that contiguous picked ps should weigh
more. So, we deﬁne a decay factor λ ∈ (0, 1) to weight the
presence of gap in a ps. For the indices p identifying the
occurrence of a ps in a document tree DT , we use l(p) to
denote the distance between the ﬁrst node and the last node
in the corresponding path, namely, the diﬀerence of their
depth in the tree. In the gap-weighted kernel, we weight the
occurrence of the ps with the exponentially decaying weight
λl(p)+1.
With the set of n − ps and their weights in the vector, we

can give the formula of n-spectrum kernel value:

DEFINITION 1 (GAP-WEIGHTED N-SPECTRUM). The

feature space F associated with the gap-weighted spectrum

WWW 2007 / Poster PaperTopic: Services1249kernel of n-ps is indexed by I = Σn (the set of all n-ps),
with the embedding φn : DT (cid:55)→ (φn
ps(DT ))ps∈I ∈ F given
by

ps(DT ) =

φn
(1)
Where p is the indices identifying the occurrence of ps.

p:ps=DT (p) λl(p)+1, ps ∈Pn .
P
X

The associated kernel is deﬁned as:

< φn(s), φn(t) >
(cid:107) φn(s) (cid:107) ∗ (cid:107) φn(t) (cid:107) =
s and pst ∈ Ψn
t .

κn(s, t) =
where pss ∈ Ψn
With the textual and structural similarities, we can esti-

pst (t)
pss⇔pst
(cid:107) φn(s) (cid:107) ∗ (cid:107) φn(t) (cid:107)

(2)

φn
pss (s)φn

mate the functional similarity as follows:

kX

Simk(ws1, ws2) = α1simt(ws1, ws2) +

αiκi(DT1, DT2) (3)

i=2

where k ≥ 2, ws1 and ws2 are two services, DT1 and
DT2 are their corresponding document trees, simt(ws1, ws2)
is their textual similarity, and κi is the gapped i-spectrum
kernel describing their structural similarity.

[7].

The parameters αi are estimated by the Ranking SVM
[7]. Ranking SVM is brought forward by machine learn-
ing researchers in recent years to solve ordinal regression
problem, and it has been proved to be eﬀective
In
this paper, the retrieval of matched services is formalized
as a ”learning to rank” problem, where the matching de-
gree between query and returned services are mapped into
three ordered categories (ranks). We have three features
in the ranking problem: text similarity, 2-spectrum and 3-
spectrum kernel values, and their weights are in Equation
(3). Our experiment result shows that the best values of
λ are λ2 = 0.58, λ3 = 0.85 and the best values of α are
α1 = 0.55, α2 = 0.44, α3 = 0.01 in our data sets.
3. EXPERIMENTS AND EVALUATION

The experiment data set of services is collected from WWW,

containing 2,140 valid services in total.

In this paper, we deﬁne three categories for the judgment
of the matching degree between the query and the WSDL
documents: ’good, ’insigniﬁcant’ and ’bad’.

Generally, we hope that a good return can be modiﬁed
with little eﬀort to replace the query in Web environment.
Therefore, it should provide almost the same function to
the query. A bad return may only be textually similar to
the query document with no obvious structural similarity.
An insigniﬁcant return is the one with a similarity degree
between good and bad.

As a baseline method, we simply use the text similarity
to rank and categorize the candidates into three categories.
This method does not take structural information into con-
sideration at all. As another baseline method, we use the
Edit Distance from Gabriel Valientes book [5] to get the
similarity between WSDL documents.

We made use of four evaluation metrics, which are ”er-
ror rate”, ”R-precision”, ”Top-N precision”, and ”Average
precision”. The evaluation result on the test set is listed in
Figure 1.

We have our evaluation on two levels. The ﬁrst group is
evaluated using ’good’, while the second group is evaluated
by replacing ’good’ with ’good’ and ’insigniﬁcant’. Taking
a closer look at Figure 1, we notice that Ranking-SVM out-
performs other approaches in every metric. As an interpre-
tation of the result, we may regard VSM as low-level feature

Figure 1: The Evaluation Results. ED is the Abbre-
viation of Edit Distance.

and 2-spectrum and 3-spectrum as mid-level features with
structural information. The low-level feature is directly ex-
tracted from WSDL with less deeper semantic and less noise,
while mid-level features reﬂect deeper semantic with more
noises. Ranking-SVM combines VSM, 2-spectrum kernel
and 3-spectrum features together, so that low-level feature
and high-level features complement each other; as a result,
it outperforms all other methods. We may also notice that
the R-precision and Top-5 precision for ’good’ are relatively
equal. In fact, the average number of relevant documents to
the queries is approximately 5.

4. CONCLUSION

In this paper, we present a novel approach for services
matching problem. In order to achieve the task, we model
WSDL documents in the vector space and then deﬁned the
gapped n-spectrum kernel function in the space. Using tex-
tual similarity and n-spectrum kernel values as features of
low-level and mid-level, we build up a model to estimate the
functional similarity between services, whose parameters are
learned by a Ranking-SVM. Experimental results indicate
that our model signiﬁcantly outperforms other methods.
Since the n-spectrum kernel function is deﬁned in vector
space, the framework of our approach can be easily adapted
to matching problems of other domains.

5. REFERENCES
[1] D. Carmel, Y. S. Maarek, M. Mandelbrod, Y. Mass,
and A. Soﬀer. Searching XML Documents via XML
Fragments. In the Proceedings SIGIR’03, 2003.
[2] B. Everitt. Cluster Analysis. 2nd edition. New

York:Halsted Press, 1980.

[3] N. Kokash. A Comparison of Web Service Interface
Similarity Measures. University of Trento. Technical
Report:DIT-06-025, 2006.

[4] J. Shawe-Taylor and N. Cristianini. Kernel Methods for

Pattern Analysis. United Kingdom: Cambridge
University Press, 2004. pp.344-372.

[5] G. Valiente. Algorithms on Trees and Graphs.

Springer-Verlag, New York, 2002.

[6] Y. Wang, S. Eleni, O. M. E., W. Sanjiva, P. M. P., and

J. Yang. Semantic Structure Matching for Assessing
Web Service Similarity. In the Proceeding of
ICSOC’03, 2003.

[7] J. Xu, Y. Cao, H. Li, and M. Zhao. Ranking Deﬁnitions
with Supervised Learning Methods. In the Proceedings
of WWW, 2005.

Quality Approach Error-rate R-precisionTop5 precision Top10 precision APVSM 0.18507190.67058970.66666670.6266667 0.7235433ED 0.40798080.46652330.62666670.4733333 0.64367352-spectrum 0.20003360.69100730.70666670.6466666 0.76366323-spectrum 0.19766580.65917490.68000010.6200000 0.7327877Good R-SVM0.17402010.75832060.78666680.6666666 0.8098783VSM 0.18255910.68927660.84000000.8133333 0.7845165ED 0.40798080.56074690.78666670.6266667 0.68701362-spectrum 0.20003360.74564990.85333340.8266667 0.81536853-spectrum 0.19766580.73839150.84000000.8200000 0.8158891Good &Insignificant R-SVM0.17402010.76156440.89333340.8466666 0.8312675WWW 2007 / Poster PaperTopic: Services1250