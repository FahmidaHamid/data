Which “Apple” Are You Talking About ?

Mandar A. Rahurkar

University of Illinois

rahurkar@uiuc.edu

Dan Roth

University of Illinois
danr@cs.uiuc.edu

Thomas S. Huang
University of Illinois

huang@ifp.uiuc.edu

ABSTRACT
In a higher level task such as clustering of web results or
word sense disambiguation, knowledge of all possible dis-
tinct concepts in which an ambiguous word can be expressed
would be advantageous, for instance in determining the num-
ber of clusters in case of clustering web search results. We
propose an algorithm to generate such a ranked list of dis-
tinct concepts associated with an ambiguous word. Con-
cepts which are popular in terms of usage are ranked higher.
We evaluate the coverage of the concepts inferred from our
algorithm on the results retrieved by querying the ambigu-
ous word using a major search engine and show a coverage
of 85% for top 30 documents averaged over all keywords.

Categories and Subject Descriptors: H.3.3 [Informa-
tion Systems]: Clustering General Terms: Algorithms,
Experimentation.

Keywords
Wikipedia, Concepts, Clustering

1.

INTRODUCTION AND PRIOR WORK

Consider an ambiguous query [3] “apple” queried on a
search engine. The search relevance can be improved if we
know which “apple” user is interested in. One of the better
ways to present the relevant search results would be to clus-
ter the results wherein we have a cluster for each distinct
concept in which the word apple can be used, e.g, Apple
(corporation) or Apple (fruit). However most clustering al-
gorithms require the number of clusters as an input. This re-
quires multiple iterations seeking an optimal number based
on some statistical criteria which may or may not guaran-
tee consistency within and across diﬀerent clusters. Thus,
in this example as well as other applications including word
sense disambiguation, knowing number of unique concepts
in which a word can be used would be an invaluable asset.
In this poster we propose an algorithm to determine all pos-
sible unique concepts for a given ambiguous word. We do so
by using the Wikipedia. Wikipedia has been recently used
for named entity disambiguation [1] and word sense disam-
biguation(WSD) [2] tasks. In [2] contextual text surround-
ing the ambiguous word in addition to the word itself is used
without explicitly enumerating the distinct concepts of the

Copyright is held by the author/owner(s).
WWW 2008, April 21–25, 2008, Beijing, China.
ACM 978-1-60558-085-2/08/04.

ambiguous word. In case of web queries which are typically
very short such an approach may not be an option.

2. DATA

Wikipedia is a collection of articles where each article de-
ﬁnes and describes an entity or an event. Each article may
have several hyperlinks to the other pages within or outside
Wikipedia and is uniquely referenced by a title. Title is com-
posed of one or more words and occasionally an explanation
in parenthesis clarifying the context of the article. For exam-
ple, the article for mercury with the meaning of “automobile”
has the unique identiﬁer mercury (automobile). Ambiguous
surface form is hyper linked to the appropriate article using
a pipe, e.g., link from the word orange to an article on Or-
ange Color (if applicable), as in [[Orange (Color)|Orange]].
This can generally be represented as [[Concept Identiﬁer|
Surface form]] pair. The phrase “concept identiﬁer” and the
word concept is used interchangeably. We use this struc-
tural information within the Wikipedia to identify possible
concepts for a given ambiguous word. Since these links have
been manually created and reviewed by a large diverse au-
dience, they are accurate in referencing the article clarifying
the context in which the surface form has been used.

3. ALGORITHM

We parse the Wikipedia1 to extract all the hyperlinked
occurrences of a word. While parsing, the disambiguation
pages, pages associated with dates and pages enumerating
the lists are excluded. Wikipedia, being updated regularly
by a diverse group of people reﬂects the realistic use of these
concepts. Therefore, we use the occurrence count in the ﬁrst
pass to obtain the ranked list R(cid:2)
of concepts associated with
= {C1, C2, . . . , Cn} and rank of Ci >
a keyword such that R(cid:2)
rank of Cj for i < j. Top 20 such concepts for ambiguous
keyword “Bush” are enumerated in table 1.

Most surface forms are found to associate with a large
number of concepts, e.g., surface form Orange is associ-
ated with about 150 concepts, Mercury with 110 concepts
etc. However large number of these concepts might not be
unique as seen in the table 1 where concepts “george w.
bush”, “george walker bush” and “george w bush” represent
the same concept. We re-rank R(cid:2)
ﬁltering it for the dupli-
cate concepts.
3.1 Re-Ranking the concept list

Consider a directed graph G = {V, E} where each vertex
V , represents a Wikipedia article or a concept. There exists
1XML ﬁle dump as on September 07

1197WWW 2008 / Poster PaperApril 21-25, 2008 · Beijing, ChinaTable 1: Top 20 concepts for ambiguous query
“bush” before the list is ﬁltered and re-ranked.

Rank 1-10

george w. bush

bush (band)

Rank 11-20
bush family
bush alaska

george h. w. bush

george walker bush

the bush

shrub

alaskan bush

outback

george h.w. bush

bush (canadian band)

uss bush (dd-529)

bush, alabama

forest

george herbert walker bush

george w bush

bush plane
woody plant
bush, illinois

an outgoing edge from two vertices Vi and Vj, Vi → Vj , if
there is an outgoing hyperlink from article i to j in the
Wikipedia. Example graph is shown in ﬁgure 1, where
C1 and C2 might represent “george w. bush” and “george
walker bush”. Given a ranked list R(cid:2)
containing concepts
C1, C2, . . . , Ck we seek ﬁltering measures to re-rank the list
and prune the duplicate concepts. If concept Ci ⊆ Cj un-
der some measure M , then the concept Ci
is subsumed
If a concept Cj subsumes concepts
by the concept Cj.
Ci, Ck, . . . , Cl, the counts of these concepts are added to Cj
thereby increasing its score and possibly the rank. Ranked
list R(cid:2)
is processed sequentially starting with the concept
node at the top of R(cid:2)
. Graph beginning from this node is
parsed in a depth ﬁrst search fashion to identify concepts
Ci, where i > j such that Ci ⊆ Cj under the measure M
deﬁned later. Since there are cycles in the graph we halt
processing of a node if we encounter its ancestor. We now
compute three measures and combine them to re-rank R(cid:2)
.
The ﬁrst measure checks for the existence of a bi-directional
link between the two concepts.

Mb(Ci, Cj ) = I((Cj → Ci) ∧ (Ci → Cj))

(1)
where, I is an Indicator variable. Thus, a concept Cj may
subsume Ci if Mb = 1. Mb measure however is a greedy mea-
sure and concept Ci may subsume weakly related concept
Cj due to a presence of a bi-directional link, e.g., Orange
Color and Syracuse Orange.

If two concepts share a subset of outbound and inbound
links they are likely to be similar. The second and third
measure (not shown) count the overlap between the inbound
and outbound links. Operators In(C) and Out(C) return
a set of inbound and outbound links for concept C and |x|
returns the cardinality of the set x. MOB is similar to MIB
but deﬁned instead on the outbound links.
«

„|In(Cm) ∩ In(Cn)|

|In(Cm) ∩ In(Cn)|

MIB (Cm, Cn) = max

|In(Cn)|
The fourth measure combines these three measures,

,

|In(Cm)|
„

«
α1MIB (Cm, Cn)+α2MOB(Cm, Cn)

M (Cm, Cn) = Mb(Cm, Cn)×

where, α1 + α2 = 1.
Measure M yields values in [0, 1], and a higher value indi-
cates more similarity. A concept in list R(cid:2)
, Cj , subsumes Ci,
where i > j if M (Cm, Cn) > P V al. P V al is determined em-
pirically to be 0.24. Concepts which occur less than 5 times
are discarded. The pruned concept lists for the ambiguous
words bush and mercury are shown in table 2.

Figure 1: Concept Graph

Table 2: Concepts after ﬁltering the list R(cid:2)
words bush and Mercury

for key-

Bush

George W. Bush

Bush (band)
Bush alaska

Forest

Bush LA

Mercury

Mercury (element)
Mercury (planet)
Mercury (records)

Mercury (mythology)
Mercury (automobile)

4. RESULT AND CONCLUSION

We evaluate the ranked list of concepts R by examining
its coverage over top 30 results returned by a major search
engine on querying the ambiguous words from [2, 3]. Hu-
man annotators were shown the retrieved pages and asked
to assign the concept to a page from the list R which best
describes the content on that page, e.g., Orange telecom for
a page related to “Orange mobile company”. In addition to
concepts in the list R associated with the ambiguous word,
annotator could also assign the labels “Can’t Say”, “Other:
Not deﬁned here” and “Tech Error” in cases when they could
not reliably identify a concept, or if the concept on webpage
was not mentioned in the list or if an error occurred in load-
ing a webpage. We obtained a percentage coverage of over
85% for top 30 documents and 89% for top 5 documents
averaged across all the keywords. Coverage is low for the
concept jordan because jordan in Wikipedia has not been
used to refer to “michael jordan, professor” or several other
ﬁrms by that name which were part of the retrieved results.
Coverage should improve to an extent on using the latest
version of the Wikipedia dump.

5. REFERENCES
[1] S. Cucerzan. Large-scale named entity disambiguation based
on Wikipedia data. In Proceedings of EMNLP-CoNLL 2007,
pages 708–716, 2007.

[2] R. Mihalcea. Using wikipedia for automatic word sense

disambiguation. NAACL, 2007.

[3] H.-J. Zeng, Q.-C. He, Z. Chen, W.-Y. Ma, and J. Ma.

Learning to cluster web search results. SIGIR, July 2004.

Table 3: Percentage coverage for top 30 results ob-
tained on issuing an ambiguous query.

Query Avg. Coverage Query Avg. Coverage
apple
bar
bush
clinton

ford

jaguar

jobs

jordan

100.00
83.33
90.00
73.33
100.00
86.67
96.67
66.67

lincoln
matrix
orange
quotes
saturn
tiger
ups

73.33
66.67
80.00
90.00
96.67
86.67
93.33

1198WWW 2008 / Poster PaperApril 21-25, 2008 · Beijing, China