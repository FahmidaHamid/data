Budget Constrained Bidding in Keyword Auctions and

Online Knapsack Problems

∗

Yunhong Zhou

HP Labs

1501 Page Mill Rd
Palo Alto CA 95304

yunhong.zhou@hp.com

Deeparnab Chakrabarty

College of Computing

Georgia Tech

Atlanta, GA 30332

deepc@cc.gatech.edu

Rajan Lukose

HP Labs

1501 Page Mill Rd
Palo Alto CA 95304

rajan.lukose@hp.com

ABSTRACT
We consider the budget-constrained bidding optimization
problem for sponsored search auctions, and model it as an
online (multiple-choice) knapsack problem. We design both
deterministic and randomized algorithms for the online (multiple-
choice) knapsack problems achieving a provably optimal com-
petitive ratio. This translates back to fully automatic bid-
ding strategies maximizing either proﬁt or revenue for the
budget-constrained advertiser. Our bidding strategy for rev-
enue maximization is oblivious (i.e., without knowledge) of
other bidders’ prices and/or click-through-rates for those
positions. We evaluate our bidding algorithms using both
synthetic data and real bidding data gathered manually,
and also discuss a sniping heuristic that strictly improves
bidding performance. With sniping and parameter tuning
enabled, our bidding algorithms can achieve a performance
ratio above 90% against the optimum by the omniscient bid-
der.
Categories and Subject Descriptors: G.1.6 [Mathemat-
ics of Computing]: Mathematical Software - Algorithm De-
sign and Analysis
General Terms: Algorithms, Theory, Economics
Keywords: Sponsored search auction, keyword bidding,
online knapsack problem, multiple-choice knapsack problem

1.

INTRODUCTION

Sponsored search auction is an eﬀective way of monetizing
search query activites for the search engine provider, while
shifting the burden to the advertiser to ﬁgure out how to
automate and optimize the keyword bidding process.
In
this work we focus on the bid optimization question under
the budget constraint.
Keyword Bidding Models. For simplicity, assume that
the default advertiser has a budget B over a ﬁxed time hori-
zon, discretized into time periods 1, . . . , T . He is interested
in a single keyword with expected value-per-click V .
There are bidders {1, ··· , N} at time t for this keyword
and their bids are sorted in decreasing order b1(t) > . . . >
bN (t). There are S ad slots, and are assigned to the top-S
bids as follows: bidder s gets slot s; for each user click on his
ad, bidder s is charged a price bs+1, if s < S or a minimum
fee bmin (usually 10(cid:0)). Each slot s has a click-through-rate
∗

Work was done while the author was an intern at HP Labs.

Copyright is held by the author/owner(s).
WWW 2008, April 21–25, 2008, Beijing, China.
ACM 978-1-60558-085-2/08/04.

(CTR), denoted α(s), which is deﬁned as the total number
of clicks on an ad divided by the total number of impressions
(displays). Therefore the default advertiser can obtain slot
s by bidding slightly over bs(t); for each user click, he incurs
a cost of bs(t), obtains an expected revenue V and proﬁt
V − bs(t).
Online Knapsack Problems. Let us start with the rela-
tively simple single-slot case. At time t, b(t) is the maximum
bid among bidders 1 to N , and X(t) is the number of clicks
at period t. Winning at time t costs the advertiser w(t) and
earns him a proﬁt of v(t) where

w(t) ≡ b(t)X(t)α,

v(t) ≡ (V − b(t))X(t)α.

(1)

For revenue maximization, v(t) = V X(t)α. Since the default
bidder has to decide either overbidding b(t) or not at time
t, thus keyword bidding corresponds to the online knapsack
problem (Online-KP). The case of multiple slots is captured
by the online version of the multiple-choice knapsack prob-
lem (Online-MCKP), where each time the advertiser can win
at most one ad slot.
Our Assumptions.
In general, no online algorithm can
achieve any non-trivial competitive ratio (the ratio between
the output of the given algorithm and the oﬄine optimum)
for Online-KP [4].
Fortunately, in our setting, we make
two reasonable assumptions on the knapsack items, which
allow us to develop interesting online algorithms. These two
assumptions are:

(i)w(t) (cid:4) B;

(ii)L ≤ v(t)
w(t)

≤ U,

∀t.

(2)

2. RELATED WORK
Keyword Bidding. Sponsored search auctions have at-
tracted a lot of attention, for both auctioneer revenue max-
imization and advertiser bidding optimization. Among all
these work, Mehta etc al. [5] studied the auctioneer rev-
enue maximization with budget-constrained bidders, using
a trade-oﬀ function Ψ (compare it to our threshold func-
tion) to grant queries to bidders, and the technique they use
is probably most similar to the threshold function we use.
Online Algorithms. Awerbuch et al. [2] studied the on-
line call routing which generalizes the online classical knap-
sack problem. More recently, Buchbinder et al. [3] designed
online algorithms for fractional versions of general packing
problems which imply an O(ln(U/L))-competitive algorithm
for the online knapsack problem.

1243WWW 2008 / Poster PaperApril 21-25, 2008 · Beijing, China3. THE ONLINE KNAPSACK PROBLEM

5. EXPERIMENTAL EXPLORATION

In this section we design competitive algorithms for the
Online-KP with assumptions (2)(i),(ii). We describe two
(ln(U/L) + 1)-competitive algorithms for the problem.
Randomized Algorithm: Let D be the continuous dis-
tribution from 0 to U , with the following density function:
x , for L ≤ x ≤ U , and f (x) = c/L for 0 ≤ x ≤ L,
f (x) = c
where c =
1+ln(U/L) Algorithm Online-KP-Randomized
simply picks a threshhold ρ from the distribution D; at each
time, it picks item t iﬀ its eﬃciency is at least ρ and its
budget allows.
Deterministic Algorithm: Our deterministic algorithm
for Online-KP works against all adversaries..

1

Algorithm Online-KP-Threshold
Let Ψ(z) ≡ (U e/L)z(L/e).
At time t, let z(t) be the fraction of capacity ﬁlled, pick
≥ Ψ(z(t)).
element t iﬀ

v(t)
w(t)

Theorem 3.1. Both Online-KP-Randomized and Online-

KP-Threshold have a competitive ratio of ln(U/L) + 1.

A matching lower bound:
Theorem 3.2. The competitive ratio of any (possibly ran-
domized) online algorithm for the online knapsack problem
is at least ln(U/L) + 1.

3.1 Single-Slot Auctions

we can translate the algorithms Online-KP-Threshold
to bidding strategies for single-slot keyword auctions for
both proﬁt and revenue maximization, based on Eq. (1).
Details are omitted due to space constraints.
4. ONLINE-MCKP & MULTIPLE SLOTS
The Online-MCKP. The Online-MCKP is a generaliza-
tion of the Online-KP. At each time period, at most one item
can be selected from the item-set Nt = {(vs(t), ws(t))}. The
goal again is to maximize the total value of items selected.
The Algorithm Online-MCKP-Threshold is a generaliza-
tion of Alg Online-KP-Threshold, and it works as follows:
Let Ψ(z) and z(t) be the same as before. At time t, let
Et ≡
. If Et (cid:9)= ∅, pick element
s ∈ Et with maximum vs(t).

s ∈ Nt | vs(t)

≥ Ψ(z(t))

(cid:2)

(cid:3)

ws(t)

Theorem 4.1. Online-MCKP-Threshold has a com-

petitive ratio of (ln(U/L) + 2).

Multiple-Slot Bidding. Next we translate Alg. Online-
MCKP-Threshold to bidding strategies for both proﬁt and
revenue maximization. It turns out the revenue maximiza-
tion strategy is the same as the single-slot case, thus omitted.
The proﬁt-maximization bidding strategy is below:

Bidding Strategy
Profit-Maximizing Multiple-Slot
Fix  > 0. Let Ψ(z) ≡ (U e/)z(/e).
At time t, let z(t) be fraction of budget spent,

(cid:4)

(cid:5)

,

Et ≡

s | bs(t) ≤

V

1 + Ψ(z(t))

bid bs(t) where s = arg maxs∈Et (V − bs(t))α(s).

In this section, we evaluate our bidding algorithms using
both synthetic and real-world data, and discuss two useful
heuristics: sniping and parameter tuning.
The Sniping Heuristic.
Simulation of the bidding al-
gorithm described above with synthetic dataset shows that
the bidding algorithm is too conservative, and leaves a sig-
niﬁcant fraction of budget unspent.
Thus a potential
performance improvement is sniping towards the end of the
auction.
If the bidder has knowledge (reliable estimates)
about the click traﬃc (X(t)) and the click-through rates,
then the bidding strategies can be modiﬁed to increase its
bid appropriately. Theoretically, we can prove that snip-
ing strictly improve the performance of the algorithm. For
details, see the technical report [6].
Parameter Tunning. If the lower bound L in the online
knapsack problem is too small, we can replace it with a
larger value L(cid:3) > L for the threshold function Ψ. This
essentially discards items with very low eﬃciency, and the
loss is minimal if the optimal solution consists of items with
relatively high eﬃciency . It turns out tuning the parameter
L makes a signiﬁcant performance improvement.
Evaluation using Real Bidding Data.
Next we re-
port some experimental results on evaluating bidding al-
gorithms for multiple-slot auctions using real bidding data.
We scraped bidding data from the now defunct Overture
webpage [1] with continous crawling for about two weeks,
for one of the most dynamic and expensive keyword “auto
insurance.” There are totally T = 1842 distinct time peri-
ods in our collected data, and most top-5 bids are larger
than $10. For the experiments, we use B = 1000, and
three diﬀerent values V = 8, 10, 12. We evaluated both the
proﬁt-maximizing and revenue-maximizing strategies with
and without sniping. For all these experiments, we use
U = V /bmin − 1 for proﬁt maximization and U = V /bmin
for revenue maximization, and bmin = 0.9.

Since results are very similar for diﬀerent parameter val-
ues, we summarize them in Table 5. For all the examples
we run, sniping improves the bidding performance signiﬁ-
cantly while exhausting the budget. Table 5 seems to tell
us, for almost all values, with parameter tuning of L, the
performance ratio (ALG/OPT) is around 70%-75% without
sniping, and 90%-95% with sniping.

Proﬁt-Maximization Bidding Performance

V OPT ALG ALG/
OPT
73%
82%
72%

2751
4059
4463

3779
4974
6169

8
10
12

budget
left
225.5
116.1
240.8

ALG ALG/
OPT
94%
93%
95%

(sniping)
3541
4607
5842

6. REFERENCES
[1] Overture view bids, available until Febuary 2007.

http://uv.bidtool.overture.com/d/search/tools/bidtool

[2] B. Awerbuch, Y. Azar, and S. A. Plotkin. Throughput-

competitive on-line routing. In FOCS, pages 32–40, 1993.

[3] N. Buchbinder, K. Jain, and J. S. Naor. Online primal-dual

algorithms for maximizing ad-auctions revenue. In Proc. ESA,
pages 253–264, 2007.

[4] A. Marchetti-Spaccamela and C. Vercellis. Stochastic on-line

knapsack problems. Math. Programming, 68:73–104, 1995.

[5] A. Mehta, A. Saberi, U. V. Vazirani, and V. V. Vazirani.

Adwords and generalized on-line matching. In Proc. FOCS,
pages 264–273, 2005.

[6] Y. Zhou, D. Chakrabarty, and R. Lukose. Budget Constrained
Bidding in Keyword Auctions and Online Knapsack Problems.
HP Labs tech report HPL-2008-9, 2008.

1244WWW 2008 / Poster PaperApril 21-25, 2008 · Beijing, China