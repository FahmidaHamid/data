A Comparative Analysis of Web and Peer-to-Peer Trafﬁc

Naimul Basher1, Aniket Mahanti1, Anirban Mahanti2, Carey Williamson1, and Martin Arlitt1

1 University of Calgary, Canada

2 Indian Institute of Technology Delhi, India

ABSTRACT
Peer-to-Peer (P2P) applications continue to grow in pop-
ularity, and have reportedly overtaken Web applications as
the single largest contributor to Internet traﬃc. Using traces
collected from a large edge network, we conduct an exten-
sive analysis of P2P traﬃc, compare P2P traﬃc with Web
traﬃc, and discuss the implications of increased P2P traﬃc.
In addition to studying the aggregate P2P traﬃc, we also
analyze and compare the two main constituents of P2P traf-
ﬁc in our data, namely BitTorrent and Gnutella. The results
presented in the paper may be used for generating synthetic
workloads, gaining insights into the functioning of P2P ap-
plications, and developing network management strategies.
For example, our results suggest that new models are neces-
sary for Internet traﬃc. As a ﬁrst step, we present ﬂow-level
distributional models for Web and P2P traﬃc that may be
used in network simulation and emulation experiments.

Categories and Subject Descriptors
C.2.2 [Computer-Communications Networks]: Network
Protocols; I.6.6 [Simulation and Modeling]: Model De-
velopment

General Terms
Measurement, Performance

Keywords
Web, Peer-to-Peer, Traﬃc Characterization, Traﬃc Models

1.

INTRODUCTION

In the mid-1990s, a signiﬁcant proportion of Internet traf-
ﬁc was from applications that used HTTP, the standard
protocol for exchanging Web documents. The distinguish-
ing characteristics of Web-dominated Internet traﬃc include
small-sized ﬂows, short-lived connections, asymmetric ﬂow
volumes, and well-deﬁned port usage. For the past decade,
these characteristics have underpinned the traﬃc models
used in network simulation and emulation experiments.

The introduction of Peer-to-Peer (P2P) ﬁle sharing appli-
cations, such as Napster in 2000, triggered a paradigm shift
in Internet data exchange. P2P applications typically share
large multimedia ﬁles with individual hosts (called peers),

Copyright is held by the International World Wide Web Conference Com-
mittee (IW3C2). Distribution of these papers is limited to classroom use,
and personal use by others.
WWW 2008, April 21–25, 2008, Beijing, China.
ACM 978-1-60558-085-2/08/04.

which act as both content providers and consumers. A peer
can obtain portions of a ﬁle concurrently from multiple peers
and/or obtain portions of the same ﬁle from a single peer
using one or more persistent connections. P2P usage has
grown steadily since its inception, and recent empirical stud-
ies indicate that Web and P2P together dominate today’s
Internet traﬃc [17, 21].

In this paper we use recent packet traces, collected at
the gateway of a large university, to extensively characterize
and compare traﬃc generated by Web and P2P applica-
tions. Our focus is on characterizing the behaviors of these
applications at the ﬂow-level and host-level. The goal of
this characterization is to develop ﬂow-level distributional
models that may be used to reﬁne models of Internet traﬃc
for use in network simulation and emulation experiments, to
provide insights into the similarities and diﬀerences between
Web and P2P traﬃc, and to obtain insights into how current
P2P applications work.

A distinguishing aspect of our work is the use of recent
full-payload packet traces. Popular P2P applications, in-
cluding BitTorrent, Gnutella, and eDonkey, are known to
use dynamic ports, in addition to well-known ports [6,11,20].
Identiﬁcation of P2P traﬃc by default port numbers is likely
to miss a signiﬁcant portion of this type of traﬃc. In fact,
our data suggests that as much as 90% of P2P traﬃc may
be on random ports. In this work, we utilize payload-based
signature matching to accurately identify P2P traﬃc.

Our study highlights the evolving nature of Internet traf-
ﬁc due to growing P2P traﬃc. In addition to studying the
aggregate P2P traﬃc, we also analyze and compare two pop-
ular P2P applications: Gnutella and BitTorrent. This study
of individual P2P applications aids in understanding the ag-
gregate P2P traﬃc trends and also helps in understanding
how these two applications work. We consolidate our under-
standing of these traﬃc types by developing distributional
models for each type of traﬃc; these models can help re-
ﬁne models of Internet traﬃc. We present high-level re-
sults and key observations from our study in Tables 1 and 2.
Table 1 summarizes the similarities/dissimilarities between
Web and P2P traﬃc, while Table 2 summarizes the similari-
ties/dissimilarities between Gnutella and BitTorrent traﬃc.
The remainder of this paper is structured as follows. Our
trace collection, traﬃc identiﬁcation, and analysis method-
ologies are described in Section 2. Sections 3 and 4 present
ﬂow-level and host-level characterization results, respectively.
Section 5 reviews related work. Issues related to trace data
collection and analysis are discussed in Section 6. Section 7
summarizes our contributions and lists future work.

287WWW 2008 / Refereed Track: Performance and ScalabilityApril 21-25, 2008. Beijing, ChinaTable 1: Key results: Comparing Web and P2P traﬃc

Characteristics
Flow Size

Web
Introduces many mice but few elephant ﬂows.
Model: hybrid Weibull-Pareto distribution.

Flow Inter-arrival time Typically short inter-arrival time.

Distribution is long-tailed.
Model: two-mode Weibull distribution.
Typically short-lived.
Model: two-mode Pareto distribution.
Most hosts maintain more than one concurrent
ﬂow. Hosts maintain concurrent ﬂows with a
few distinct hosts.
Large transfers are dominated by downstream
traﬃc. Heavy-hitters account for a large por-
tion of total transfer and their transfers follow a
power-law distribution.
Most external hosts are located primarily in the
same geographic region.

P2P
Introduces many mice and elephant ﬂows.
Model: hybrid Weibull-Pareto distribution.
Typically long inter-arrival time.
Distribution is heavy-tailed.
Model: hybrid Weibull-Pareto distribution.
Typically long-lived.
Model: hybrid Weibull-Pareto distribution.
Many hosts maintain only one ﬂow at a time.
Hosts that maintain more than one ﬂow do so
by connecting with many distinct hosts.
Large transfers happen in either upstream or
downstream direction. Heavy-hitters account
for a huge portion of total transfer and their
transfers follow a power-law distribution.
External peers are globally distributed.

Section

3.1

3.2

3.3

4.1

4.2

4.3

Flow Duration

Flow Concurrency

Transfer Volume

Geography

Characteristics
Flow Size

Flow Duration

Table 2: Key results: Comparing Gnutella and BitTorrent traﬃc
Gnutella
Both small and large ﬂows are observed. Elephants
are relatively more frequent.
Distribution is heavy-tailed.
Model: hybrid Lognormal-Pareto distribution.
Typically short-lived.
Distribution is heavy-tailed.

BitTorrent
Small ﬂows are prevalent. Elephants are less fre-
quent, but comparatively large.
Distribution is heavy-tailed.
Model: hybrid Lognormal-Pareto distribution.
Typically long-lived.
Distribution is long-tailed.
Peers maintain many concurrent ﬂows with a large
number of distinct hosts.
Transfers are comparatively less asymmetric and
more balanced. Heavy-hitters contribute more traf-
ﬁc volume.
External peers are from regions with broadband con-
nectivity.

Flow Concurrency Peers mostly connect to a single host at a time.

Transfer Volume

Geography

Transfers are extremely asymmetric and dominated by
single direction traﬃc. Heavy hitters account for less
volume of traﬃc.
External peers are mostly concentrated in the same
geographic region.

2. METHODOLOGY

2.1 Trace Collection and Trafﬁc Identiﬁcation
The network traﬃc traces used in this work were collected
from the commercial Internet link1 of the University of Cal-
gary, a large research-intensive university with 28,000 stu-
dents and 5,000 employees. We used lindump2 running on
a dual processor 1.4 GHz Pentium system with 2 GB mem-
ory and 70 GB disk space to capture TCP/IP packets via
port mirroring.

Identifying P2P traﬃc correctly in the traces is a chal-
lenge. One approach, which has been used in some re-
cent P2P characterization studies [17, 21, 24], is to map net-
work traﬃc to applications using well-known port numbers.
However, many P2P applications including BitTorrent and
Gnutella use dynamic port numbers. This necessitated the
use of payload signatures [11, 20] to identify applications.

We used Bro [15], an open source Network Intrusion De-
tection System, to perform the payload signature match-
ing. The built-in payload “signature matching engine” in
Bro was used to perform the mapping of network ﬂows to
application types. We used the signatures described by Sen
et al. [20] and Karagiannis et al. [11]; details of our payload-
based identiﬁcation scheme can be found in [6]. We identify
the start of a TCP ﬂow using connection establishment se-
mantics (i.e., SYN-SYNACK-ACK packet transmissions) or by
the ﬁrst packet transmission observed between hosts, and
end of a TCP ﬂow after observing a FIN or RST packet. By
default, Bro considers a ﬂow terminated if it is idle for more
than 900 seconds.

1

At the time of trace collection, the Internet link was a 100 Mbps

full-duplex connection.
2

http://awgn.antifork.org/codes/lindump.c

The payload-based identiﬁcation technique requires traces
with relevant application-layer headers. The signature strings
for some P2P applications (e.g., Gnutella) can be buried
deep inside a packet [6]; therefore, successful string matching
requires full-packet payloads. This poses another challenge:
the huge storage space required for full-packet trace collec-
tion from a high-speed Internet connection for an extended
interval (e.g., a day or a week). For our work, we used non-
contiguous one-hour traces collected between April 6 and
April 30, 2006. The traces were collected each morning (9-
10 am) and evening (9-10 pm) on Thursday through Sunday
every week (i.e., eight one-hour traces per-week). Although
discontinuous traces limit the analysis of long-term traﬃc
behavior, we expect the traces to capture morning/evening
and weekday/weekend trends. Our methodology also cap-
tured behavioral aspects related to the academic calendar.
2.2 Trace Summary

The traces contain 1.12 billion IP packets totalling 639.4
Gigabytes (GB) of data. In this paper, attention is restricted
to only TCP/IP packets because these account for 84.4% of
the total packets and 92% of the total bytes in the traces.
Furthermore, Web and P2P applications such as Gnutella
and BitTorrent use TCP in most cases. In total, we consider
23.3 million TCP ﬂows with 946 million IP packets and 588.3
GB of data.

Table 3 shows the breakdown by application type. Web
and P2P dominate in terms of bytes. Although P2P ac-
counts for only 2.8% of the total ﬂows, it accounts for 33.1%
of the total bytes. The Unknown category includes HTTPS
(port 443), ﬂows without payloads, and ﬂows unclassiﬁed by
Bro. The Others category bundles together the remaining
traﬃc; the main contributors (by bytes) are email (5%), ﬁle
transfer (3%), and streaming (2%) applications.

288WWW 2008 / Refereed Track: Performance and ScalabilityApril 21-25, 2008. Beijing, ChinaTable 3: Flow and byte count by applications

Application

Web
P2P

Unknown

Others
Total

Flows % Flows Bytes (GB) % Bytes
34.73
33.14
11.62
20.51
100.00

204.32
194.96
68.42
120.61
588.31

39.51
2.77
39.77
17.95
100.00

9,213,424
646,082
9,275,013
4,186,232
23,320,751

Table 4: Flow and byte count for P2P

P2P Systems

Gnutella
BitTorrent
eDonkey

Other-P2P

Total

Flows % Flows Bytes (GB) % Bytes
77.71
16.36
1.35
4.58
100.00

151.51
31.88
2.64
8.93
194.96

21.21
60.93
12.35
5.51
100.00

137,024
393,641
79,796
35,621
646,082

Table 4 categorizes the P2P ﬂows present in our traces by
P2P application type. There are approximately 646,000 P2P
ﬂows; these account for nearly 195 GB of traﬃc data. From
the table, we notice that BitTorrent has a lower byte-to-
ﬂow ratio than Gnutella. Table 4 also reveals that although
eDonkey accounts for many P2P ﬂows, the cumulative traf-
ﬁc volume in bytes was relatively small. The Other-P2P
category consists of P2P applications that each contributed
less than 1% of the identiﬁed P2P ﬂows.
2.3 Characterization Metrics

We consider three ﬂow-level characterization metrics:

Flow Size – the total bytes transferred during a TCP ﬂow.
Flows can be categorized as mice [25], buﬀalo [22] and ele-
phants [13]. We label ﬂows as mice if they transfer less than
10 Kilobytes (KB), and as elephants if they transfer more
than 5 Megabytes (MB) of data. The rest are labeled as
buﬀalo.
Flow Duration – the time between the start and the end
of a TCP ﬂow.
Flow Inter-arrival time – the time interval between two
consecutive ﬂow arrivals.

We consider three host-level characterization metrics:

Flow Concurrency – the maximum number of TCP ﬂows
a single host uses concurrently to transfer content.
Transfer Volume – the total bytes transferred to and from
a host during its activity period. Upstream transfer volume
is measured as the total bytes transmitted from an internal
host to the external hosts. Downstream transfer volume is
the total bytes received by an internal host from the hosts
external to the network.
Geographic Distribution – the distribution of the shortest
distance between individual hosts and our campus along the
surface of the Earth. This distance measure is known as the
great-circle3 distance.
2.4 Statistical Measures and Models

We use statistical measurements such as mean, median,
standard deviation, inter-quartile range (IQR), and skew-
ness to summarize trends of the sample data. Where neces-
sary, we also use the probability density function (PDF), cu-
mulative distribution function (CDF), and complementary
CDF (CCDF) of the sample data to obtain further insights.

]
x
=
<
X
P

[

 1

 0.8

 0.6

 0.4

 0.2

 0

-1

0

1

P2P-empirical
P2P-model
Web-empirical
Web-model
2

4

3

log10 (Flow Size in KB)
(a) Web and P2P

]
x
=
<
X
P

[

 1

 0.8

 0.6

 0.4

 0.2

 0

5

6

BT-empirical
BT-model
Gnu-empirical
Gnu-model

-1

0

1

2

3

4

5

6

log10 (Flow Size in KB)

(b) Gnutella and BitTorrent

Figure 1: CDF of ﬂow sizes

References to the “tail” of the CCDF refer to those values
in the upper 10% of the empirical distribution; the remaining
90% of the distribution is referred to as the body. CCDF
tails are often studied to determine how quickly or slowly
they decay. A distribution where the tail decays more slowly
than an exponential distribution is called long-tailed. A dis-
tribution is heavy-tailed if the tail asymptotically follows a
hyperbolic shape (i.e., shape parameter 0 < α ≤ 2).

β

σ

)α

´

We present statistical models that capture the salient fea-
`
tures seen in our data sets. We use the following distribu-
x )α), Weibull (CDF: 1 −
tional models: Pareto (CDF: 1 − ( β
−( x
ln x−μ
) where α and β
e
), and Lognormal (CDF: Φ
are shape and scale parameters, μ and σ are mean and stan-
dard deviation of the distribution, and Φ is the Laplace Inte-
gral; we also present models that are hybrid of the aforemen-
tioned distributions, where the model thresholds were deter-
mined manually such that the hybrid distribution passed a
goodness-of-ﬁt test. We tested the statistical models for ac-
curacy using the Kolmogorov-Smirnov (K-S) goodness-of-ﬁt
test. If the statistical model passed the K-S test at the 5%
signiﬁcance level, we considered it to model our empirical
data well.4 Only these models are presented in the paper.

3. FLOW-LEVEL CHARACTERIZATION

In order to conduct realistic network simulations, mod-
els of ﬂow size, inter-arrival time, and duration are needed.
In this section, we present our ﬂow-level characterization
results and derive distributional models from the character-
ization results. Summary statistics for Web and P2P traﬃc
are presented in Table 5. The corresponding statistics for
Gnutella and BitTorrent are shown in Table 6.
3.1 Flow Size

3.1.1 Web and P2P Flow Sizes

Table 5 shows that P2P ﬂows have a higher mean ﬂow size
and lower median ﬂow size than Web ﬂows. These observa-
tions suggest that P2P applications generate many small
and many very large-sized ﬂows compared to Web. The
CDF of Web and P2P ﬂow sizes in Figure 1(a) corroborates
the aforementioned observation.

The preponderance of small-sized P2P ﬂows is somewhat
unexpected as P2P applications are typically used to share
large audio and video ﬁles. There are at least three sources
of small-sized ﬂows: extensive signalling, aborted transfers,
and connection attempts with non-responsive peers. We
also ﬁnd some very large-sized P2P ﬂows. These few P2P
ﬂows are much larger than the occasional large Web trans-
fer. Our analysis indicates that P2P applications contribute
4

We validated the models using a distribution ﬁtting tool called Easy-

3

http://en.wikipedia.org/wiki/Great-circle_distance

Fit: http://www.mathwave.com/products/easyfit.html.

289WWW 2008 / Refereed Track: Performance and ScalabilityApril 21-25, 2008. Beijing, ChinaTable 5: Flow-level summary statistics of Web and P2P

Characteristic

Flow size (KB)
Flow Inter-Arrival (sec)
Flow duration (sec)

Mean Median
2.53
21.50
0.007
0.11
13.32
0.40

Web

Std. Dev.
341.92
3.53
56.71

IQR Skewness Mean Median
1.17
7.38
0.18
0.016
1.80
24.80

362.40
1.77
123.54

44.03
26.05
14.48

P2P

Std. Dev.
12470
17.21
274.37

IQR Skewness
192.13
1.89
48.69
0.39
93.30
7.61

Characteristic

Table 6: Flow-level summary statistics of Gnutella and BitTorrent
BitTorrent
Std. Dev.
11189
20.25
221.41

IQR Skewness Mean Median
0.96
2.73
0.42
0.51
25.60
33.20

Mean Median
1.89
0.21
9.70

Gnutella
Std. Dev.
15549
22.22
386.22

Flow size (KB)
Flow Inter-Arrival (sec)
Flow duration (sec)

1159.40
2.30
89.35

94.68
30.15
8.12

84.95
2.46
135.43

IQR Skewness
292.31
2.10
49.78
0.99
180.90
3.03

)
]
x
>
X
P

[

(
 
0
1
g
o

l

0
-1
-2
-3
-4
-5
-6
-7

P2P-empirical
P2P-model
Web-empirical
Web-model
0

1

-1

2

3

4

5

6

log10 (Flow Size in KB)
(a) Web and P2P

)
]
x
>
X
P

[

(
 
0
1
g
o

l

0

-1

-2

-3

-4

-5

-6

BT-empirical
BT-model
Gnu-empirical
Gnu-model

-1

0

1

2

3

4

5

6

log10 (Flow Size in KB)

(b) Gnutella and BitTorrent

Figure 2: CCDF of ﬂow sizes

many mice and elephant ﬂows, and possibly alters the mix
of these ﬂow types in today’s IP networks. We elaborate on
this phenomenon in Section 3.1.3.

We examined the tails of the ﬂow size distributions using
CCDF plots. Figure 2(a) presents the CCDF of ﬂow sizes
for Web and P2P. In the body of the distribution, P2P ﬂows
are smaller than Web ﬂows, but in the tail (speciﬁcally, the
upper 3.5% of ﬂows after the “crossover” point) P2P ﬂows
are larger than Web ﬂows. Also, the tail of the Web ﬂow
size distribution decays more quickly than the correspond-
ing P2P distribution. These observations provide further
evidence of P2P’s large elephant-sized ﬂows.

3.1.2 Gnutella and BitTorrent Flow Sizes

Table 6 indicates that Gnutella ﬂow sizes are larger and
more dispersed than BitTorrent ﬂow sizes. The empirical
CDF for the two P2P variants in Figure 1(b) shows that
both applications generate a similar percentage of small-
sized ﬂows (e.g., 5 KB or less). Many of these smaller
ﬂows are the result of control information exchanged be-
tween peers, which is a byproduct of the distributed nature
of P2P protocols. The ratio of large-sized to total ﬂows for
BitTorrent is, however, less than that for Gnutella. For ex-
ample, approximately 5% of BitTorrent ﬂows are larger than
10 KB, whereas 17% of Gnutella ﬂows exceed this size. The
characteristics of these large-sized ﬂows are analyzed next.
Figure 2(b) shows the CCDF of ﬂow sizes of Gnutella
and BitTorrent applications. Gnutella appears to gener-
ate more large-sized ﬂows than BitTorrent. BitTorrent uses
ﬁle segmentation to split an object into multiple equal-sized
“pieces” (256 KB each by default), and downloads these
pieces from either the same or diﬀerent peers using parallel
ﬂows. In contrast, Gnutella typically downloads the entire
object from a single peer. As a result, we observe fewer large
ﬂows in BitTorrent than Gnutella.

3.1.3 Mice and Elephant Phenomenon

Table 7: Mice and elephant ﬂow breakdown

Application

Mice

Elephants

% Flows % Bytes % Flows % Bytes

Web
P2P

Gnutella
BitTorrent

75.78
92.93
83.41
94.96

8.89
0.47
0.14
1.94

0.04
0.81
3.05
0.08

15.35
93.43
93.14
94.87

We observe that both categories of application generate many
mice ﬂows. Although the mice ﬂows originating from Web
applications are less prevalent than those from P2P appli-
cations, Web mice ﬂows account for a relatively higher pro-
portion of the total Web bytes than P2P mice ﬂows account
for the total P2P bytes. For example, approximately 9%
of total Web bytes are from Web mice ﬂows, whereas only
0.4% of total P2P bytes are transferred by P2P mice ﬂows.
Both applications generate a small proportion of elephant
ﬂows. Nevertheless, these few elephant ﬂows contribute a
signiﬁcant fraction of the total bytes; the elephant-sized Web
ﬂows contributed about 15% of the total Web-generated
bytes, while the elephant-sized P2P ﬂows contributed as
much as 93% of the total P2P bytes. Network operators may
be interested in bandwidth-limiting these long-duration “ele-
phant” ﬂows, or may be interested in assigning these ﬂows
lower priority. As P2P applications become more popular,
we can expect networks to carry increasingly more elephant
ﬂows. Our results also indicate that P2P elephant ﬂows are
signiﬁcantly larger than Web elephant ﬂows.

We next analyze mice and elephant ﬂows generated by
Gnutella and BitTorrent. While both P2P applications have
a similar proportion of mice ﬂows, the BitTorrent mice ﬂows
account for a much higher percentage of byte transfers than
Gnutella mice ﬂows; that is, Gnutella mice ﬂows are smaller,
on average, than BitTorrent mice ﬂows. As mentioned ear-
lier, signalling between peers is a major contributor to the
pool of P2P mice ﬂows. Our data suggests that BitTorrent
applications have more intense signaling activities compared
to Gnutella, resulting in relatively larger mice ﬂows.

In our data, Gnutella has a much higher percentage of
elephant ﬂows than BitTorrent, even though both Gnutella
and BitTorrent elephant ﬂows account for a comparable pro-
portion of byte transfers. Thus, on average, BitTorrent ele-
phant ﬂows are larger than Gnutella elephant ﬂows. We
believe that the type of ﬁles exchanged using these P2P sys-
tems can provide an explanation for our observation. A 2005
study by CacheLogic5 showed that a majority of Gnutella
users shared mostly audio ﬁles (70%), whereas BitTorrent
users shared more video ﬁles (47%). Video ﬁles are, on av-

Table 7 shows the percentage of mice and elephant ﬂows
among the total ﬂows contributed by diﬀerent applications.

5

CacheLogic. Peer-to-Peer File Type Study, http://www.cachelogic.

com/home/pages/research/filetypestudy.php

290WWW 2008 / Refereed Track: Performance and ScalabilityApril 21-25, 2008. Beijing, China]
x
=
<
X
P

[

 1

 0.8

 0.6

 0.4

 0.2

 0

P2P-empirical
P2P-model
Web-empirical
Web-model
0

2

1

-2

-1

-3
4
log10 (Flow Inter-arrival in seconds)

3

(a) CDF

0

-1

-2

-3

-4

-5

)
]
x
>
X
P

[

(
 
0
1
g
o

l

-3

P2P-empirical
P2P-model
Web-empirical
Web-model
0

-1

-2

1

2

3

log10 (Flow Inter-arrival in seconds)

(b) CCDF

]
x
=
<
X
P

[

 1

 0.8

 0.6

 0.4

 0.2

 0

-1

P2P-empirical
P2P-model
Web-empirical
Web-model

0

1

2

3

4

log10 (Flow Duration in seconds)

]
x
=
<
X
P

[

 1

 0.8

 0.6

 0.4

 0.2

 0

-1

BT-empirical
BT-model
GN-empirical
GN-model

0

1

2

3

4

log10 (Flow Duration in seconds)

(a) Web and P2P

(b) Gnutella and BitTorrent

Figure 3: Web and P2P ﬂow inter-arrival

Figure 4: CDF of ﬂow duration

erage, signiﬁcantly larger than audio ﬁles. We believe that
the extremely large BitTorrent ﬂows are due to the transfer
of multiple pieces of large video ﬁles over a single TCP ﬂow.

3.1.4 Flow Size Models

In this section, we present statistical models that describe
the body and the tail of ﬂow size (S) distribution. These
models may be used to generate transfer sizes of TCP ﬂows
in network simulations. Figures 1 and 2 plot the statisti-
cal models in addition to the empirical distributions. Web
ﬂow sizes are well-modeled by a concatenation of bounded
Weibull and Pareto distributions:

: S < 30KB
: 30KB ≤ S ≤ 5M B
: S > 5M B

: S < 4KB
: 4KB ≤ S ≤ 10M B
: S > 10M B

8><
>:1 − e−( S

1 − ( 3
1 − ( 200

S )1.05
S )2.35

2.7 )0.38

8><
>:1 − e−( S

1 − ( 0.005
1 − ( 400

1.36 )0.81
S )0.35
S )1.42

FW eb(S) =

FP 2P (S) =

We ﬁnd that the tail of the Web ﬂow size distribution is a
mix of heavy-tailed and long-tailed distributions.

Similarly, we ﬁnd that P2P ﬂow sizes are well-modeled by

a hybrid bounded Weibull and Pareto distributions:

From the above-mentioned model, we can conclude that P2P
ﬂow sizes are heavy-tailed.

Both the BitTorrent and Gnutella ﬂow sizes are well-modeled

by combining bounded Lognormal and Pareto distributions:

0.95

´

ln S−0.03

`
Φ
1 − ( 1.07
S )1.4
1 − ( 3×10−9
1 − ( 0.95
S )0.78

8>>><
>>>:
8><
`
>:Φ
1 − ( 0.04
1 − ( 1800

ln S−0.44

0.73

S

S )0.3
S )1.61

´

)0.25

FBT (S) =

FGnu(S) =

: S < 2KB
: 2KB ≤ S ≤ 50KB
: 50KB < S ≤ 7M B
: S > 7M B

: S < 3KB
: 3KB ≤ S ≤ 10M B
: S > 10M B

We ﬁnd that both BitTorrent and Gnutella ﬂow size distri-
butions are heavy-tailed; BitTorrent ﬂow sizes, however, are
less heavy-tailed than Gnutella ﬂows.
3.2 Flow Inter-arrival Times

3.2.1 Web and P2P Inter-arrival Times

Analysis of our data (see Table 5) shows that P2P ﬂow
inter-arrival times (IAT) are much longer and more dis-
persed than Web ﬂow IAT. Figure 3 shows the CDF and

CCDF of ﬂow IAT for Web and P2P. Web ﬂow IAT are
much shorter than those of P2P ﬂows. For example, ap-
proximately 97% of Web ﬂow IAT are less than 0.1 second,
whereas only 25% of P2P ﬂow IAT are this short.

Another way to understand the diﬀerence between the
IAT of Web and P2P ﬂows is to study their corresponding
ﬂow arrival rates. Web traﬃc has a higher arrival rate of
approximately 80 ﬂows/seconds, compared to P2P traﬃc,
which has arrival rate of only 6 ﬂows/seconds. Another fac-
tor contributing to the lower arrival rate and the longer IAT
values for P2P ﬂows is the persistent nature of their TCP
connections. How these persistent connections are used is
discussed in Section 4.1.

We examine the tails of ﬂow IAT for Web and P2P in
Figure 3(b). Flow IAT from both applications show similar
decay throughout the tails. At the upper tail, we observe
sharp decay due to the limited duration of our traces. Flow
IAT from individual P2P applications are found to follow
similar patterns, and thus are not shown here.

3.2.2 Inter-arrival Time Models

We ﬁnd that Web ﬂow IAT can be modeled by a two-mode

bounded Weibull distribution:
1 − e−( IAT
1 − e

FW eb(IAT ) =

−(

0.01 )0.76
3×10−5 )0.15

IAT

: IAT ≤ 0.06 sec
: IAT > 0.06 sec

(

In contrast, P2P ﬂow IAT are well-modeled by a hybrid

Weibull-Pareto distribution:

8><
>:1 − e−( IAT

1 − e−( IAT
1 − ( 0.18

IAT )0.97

0.35 )0.87
0.45 )0.65

: IAT ≤ 0.1 sec
: 0.1 < IAT ≤ 1 sec
: IAT > 1 sec

FP 2P (IAT ) =

These distribution models indicate that Web IAT are long-
tailed, whereas P2P IAT are heavy-tailed. Our models pro-
vide evidence of the inapplicability of memoryless Poisson
models for Web and P2P ﬂow arrivals [16].
3.3 Flow Duration

3.3.1 Web and P2P Flow Durations

Our statistical analysis (cf. Table 5) indicates the presence
of many short-duration ﬂows. Figure 4 shows the CDF of
ﬂow durations. From Figure 4(a) we observe that approx-
imately 30% of P2P ﬂows are shorter than 10 seconds in
duration. Some of these short-duration transfers are either
failed or aborted ﬂows, while other short-duration ﬂows are a
byproduct of the P2P applications’ signaling behavior. Note
that short-duration ﬂows typically transfer a small amount
of data, but the converse does not always hold. There are
a few long-duration mice ﬂows; these ﬂows arose due to re-
peated unsuccessful connection attempts by peers. We also

291WWW 2008 / Refereed Track: Performance and ScalabilityApril 21-25, 2008. Beijing, China)
]
x
>
X
P

[

(
 
0
1
g
o

l

0

-1

-2

-3

-4

-5

P2P-empirical
P2P-model
Web-empirical
Web-model
0

1

-1

2

3

4

)
]
x
>
X
P

[

(
 
0
1
g
o

l

0

-1

-2

-3

-4

BT-empirical
BT-model
GN-empirical
GN-model
0

1

-1

 1

 0.8

 0.6

 0.4

 0.2

]
x
=
<
X
P

[

2

3

4

 0

0

1

]
x
=
<
X
P

[

 1

 0.8

 0.6

 0.4

 0.2

 0

0

P2P
Web
2

3

BitTorrent
Gnutella

1

2

3

log10 (Flow Duration in seconds)
(a) Web and P2P

log10 (Flow Duration in seconds)

(b) Gnutella and BitTorrent

log10 (Maximum # of Concurrent Flows)
(a) Web and P2P

log10 (Maximum # of Concurrent Flows)
(b) Gnutella and BitTorrent

Figure 5: CCDF of ﬂow duration

Figure 6: CDF of host ﬂow concurrency

observe that a large proportion, approximately 40%, of P2P
ﬂow durations are between 20 and 200 seconds. We found
that some P2P connections are bandwidth-limited, and thus
of long-duration. Bandwidth limitations reﬂect the available
bandwidth between peers (e.g., peers with asymmetric In-
ternet access have limited uplink capacity) as well as ﬂow
management on our network (cf. Section 6). Approximately
70% of the Web ﬂows last no longer than 1 second. End users
have excellent Internet connectivity in our campus network,
and most Web servers are also well-provisioned. Thus, we
expect low response times for Web requests. The remaining
Web ﬂows that are longer than 1 second are typically re-
sponsible for either downloading large objects (e.g., stream-
ing video from youtube.com) or transferring multiple objects
from Web pages using persistent HTTP/1.1 connections.

In Figure 5 we analyze the tail of the ﬂow duration dis-
tributions. Figure 5(a) shows the CCDF of Web and P2P
ﬂow durations. We ﬁnd that the probability of long-duration
ﬂows is higher for P2P than Web.

3.3.2 Gnutella and BitTorrent Flow Durations

Summary statistics in Table 6 show that, on average, Bit-
Torrent ﬂows last longer than Gnutella ﬂows; furthermore,
the ﬂow durations are dispersed over a wide range of values.
Figure 4(b) shows the CDF of Gnutella and BitTorrent
ﬂow durations. This graph reaﬃrms the aforementioned
point. We ﬁnd that these relatively longer ﬂows of Bit-
Torrent resulted due to its protocol architecture. BitTor-
rent utilizes a rarest ﬁrst piece selection policy to exchange
data. At any given time, a ﬁxed number of concurrent
uploads/downloads are permitted. BitTorrent architecture
allows persistent connections between peers and controls
downloads/uploads using its piece selection policy which re-
sults in connections periodically being idle. Furthermore,
concurrent download from a single BitTorrent peer splits
the bandwidth available at uploaders for downloading. In
contrast, Gnutella can use a single ﬂow for downloading an
object and thus does not need to share bandwidth. Occa-
sionally, Gnutella peers may share bandwidth, for example,
when the same object is requested by other peers or when
diﬀerent objects are requested by the same peer.

Figure 5(b) shows the CCDF of Gnutella and BitTorrent
ﬂow duration. Two observations can be drawn. First, before
the crossover point, BitTorrent shows a higher percentage
of long-duration ﬂows than Gnutella; however, following the
crossover point (upper 2% of ﬂows), the probability of long-
duration ﬂows in Gnutella is higher than that in BitTorrent.
Second, at the distribution tail, BitTorrent ﬂow durations
decay more quickly than Gnutella ﬂow durations. We found
earlier that extremely large transfers are not very common
in BitTorrent, due to its ﬁle segmentation feature. We also
found a positive correlation (correlation coeﬃcient is 0.69)

between BitTorrent ﬂow size and duration, and therefore,
observe a lower proportion of extremely long-duration ﬂows
in BitTorrent. Other factors such as ﬁle size, swarm popu-
lation, and availability of pieces in the swarm can also inﬂu-
ence the duration of BitTorrent ﬂows. These factors result in
the BitTorrent tail being long-tailed instead of heavy-tailed.

3.3.3 Flow Duration Models

This section outlines the statistical models of ﬂow dura-
tions (D) (see Figures 4 and 5). Web ﬂow duration is well-
modeled using two bounded Pareto distributions:
: D ≤ 60 sec
: D > 60 sec

1 − ( 0.1
1 − ( 10

FW eb(D) =

D )0.43
D )1.5

(

The preceding model shows that Web ﬂow durations are
heavy-tailed. A similar analysis shows that P2P ﬂow dura-
tions can be well-modeled by a concatenation of bounded
Weibull and heavy-tailed Pareto distribution:

: D < 20 sec
: 20 ≤ D ≤ 300 sec
: D > 300 sec

8><
>:1 − e−( D

1 − e−( D
1 − ( 65
D )1.53

88.3 )0.35
57.2 )0.55

FP 2P (D) =

BitTorrent ﬂow durations are well-modeled by a hybrid
bounded Weibull and Pareto distributions, whereas Gnutella
ﬂow durations are well-modeled by a hybrid bounded Log-
normal and Pareto distributions:

83.5 )0.48

(
1 − e−( D
1 − ( 200
D )3
(
`
Φ
1 − ( 5

ln D−2.1
D )0.73

2.7

´

: D ≤ 300 sec
: D > 300 sec

: D ≤ 10 sec
: D > 10 sec

FBT (D) =

FGnu(D) =

The above-mentioned statistical distributions show that Bit-
Torrent ﬂow durations are long-tailed (tail ﬁts a Pareto dis-
tribution with α > 2) but not heavy-tailed.
In contrast,
Gnutella ﬂow durations are heavy-tailed.

4. HOST-LEVEL CHARACTERIZATION

This section presents a host-level characterization of Web
and P2P traﬃc. This characterization provides information
to network administrators for tasks such as bandwidth man-
agement and capacity planning, and also provide insights
into the functioning of modern P2P systems. The results
presented here may also be used to develop synthetic work-
loads and design realistic network simulations.

292WWW 2008 / Refereed Track: Performance and ScalabilityApril 21-25, 2008. Beijing, China)
s
P

I
 
f
o
 
#
 
t
c
n
i
t
s
D

i

(
 
0
1
g
o

l

3

2

1

0

0
3
log10 (Maximum # of Concurrent Flows)

2

1

)
s
P

I
 
f
o
 
#
 
t
c
n
i
t
s
D

i

(
 
0
1
g
o

l

3

2

1

0

0
3
log10 (Maximum # of Concurrent Flows)

1

2

(a) Web

(b) P2P

Figure 7: Flow concurrency vs distinct IPs

4.1 Flow Concurrency

Figure 6 shows the CDF of host ﬂow concurrency for Web,
P2P, Gnutella, and BitTorrent. From Figure 6(a), we ob-
serve (surprisingly) that many P2P hosts in our network
maintain only a single TCP connection. We explain the ob-
servation later in this section by analyzing ﬂow concurrency
for individual P2P applications. While analyzing the ﬂow
concurrency for Web hosts, we ignore the Web servers inter-
nal to our network. From the analysis, we ﬁnd that a sig-
niﬁcant proportion of the internal Web hosts maintain more
than one concurrent TCP connection. Web browsers often
initiate multiple concurrent connections to transfer content
in parallel. This parallel download feature increases the de-
gree of ﬂow concurrency in HTTP-based applications. How-
ever, a high-degree of ﬂow concurrency (e.g., above 30) is
not typically observed for general Web clients; rather, Web
proxies and content distribution nodes account for this high
degree of ﬂow concurrency.

The CDF of host ﬂow concurrency for Gnutella and Bit-
Torrent is shown in Figure 6(b). We observe that most
Gnutella hosts connect with only one host at a time. As
discussed earlier, Gnutella applications typically download
a whole object from another Gnutella host using a single
TCP ﬂow. We observed a few Gnutella hosts that main-
tained more than 10 concurrent TCP connections. These
hosts likely acted as “super peers” in Gnutella’s peer hierar-
chy. In contrast, most BitTorrent hosts exhibit a high degree
of ﬂow concurrency. Approximately 24% of the BitTorrent
hosts use more than 100 concurrent ﬂows. This high degree
of concurrency is a natural occurrence in BitTorrent. Bit-
Torrent clients obtain a peer list from a tracker, and then
attempt to connect with these peers. Once connections are
established, BitTorrent uses its rarest ﬁrst piece selection
policy and tit-for-tat fairness mechanisms to determine how
pieces are shared [3]. Typically, only a small number of these
concurrent connections actively transfer ﬁle pieces.

We also study the correlation between the maximum num-
ber of concurrent ﬂows seen at a host and the number of
distinct hosts connected at that time. Figure 7 shows scat-
ter plots of ﬂow concurrency versus distinct hosts for Web
and P2P hosts. (The plots for Gnutella and BitTorrent are
similar to that of P2P, and thus not shown here.) From Fig-
ure 7(a) we observe that most of the points are well-below
the diagonal. In other words, the number of concurrent Web
ﬂows far exceed the number of Web hosts concurrently con-
tacted. From Figure 7(b), we observe that P2P hosts use
concurrent ﬂows to connect to many distinct hosts as illus-
trated by the concentration of points along the diagonal.
This behavior is not unexpected, since P2P protocols such as
BitTorrent and eDonkey encourage connectivity with multi-
ple hosts to facilitate widespread sharing of data.

 1

 0.8

 0.6

 0.4

 0.2

]
x
=
<
X
P

[

 0

0

1

2

3

P2P
Web
4

5

6

log10 (Volume Transfer in KB)

Figure 8: CDF of transfer volume

Table 8: Fair-share ratio in P2P systems

Downstream (MB) Minimum Fair-share Ratio

< 1
1 - 20
20 - 40
40 - 60
60 - 80
80 - 100
> 100

none
0.01
0.25
0.35
0.45
0.55
0.65

4.2 Transfer Volume

This section studies the transfer activity of hosts in terms
of their transfer volume. Figure 8 show the CDF of the
transfer volume for Web and P2P hosts. We observe that
approximately half of the distinct P2P and Web hosts trans-
fer small amounts of data (e.g., less than 1 MB); these hosts
are typically active for less than 100 seconds. We ﬁnd that
these P2P hosts repeatedly yet unsuccessfully attempt to
connect with serving peers. Connection requests are unsuc-
cessful for a variety of reasons including insuﬃcient resources
or no useful content at the contacted peers. In contrast, Web
transfers in this region result from Web browsing, widgets
that retrieve information from the Web periodically (e.g.,
weather updates, stock prices), and downloading small ﬁles.
We ﬁnd that approximately 35% of Web hosts and 15% of
P2P hosts transfer data ranging from 1 to 10 MB, and are
active mostly for 100 to 1000 seconds. These P2P host trans-
fers are due to sharing small objects, whereas these Web host
transfers are due to prolonged Web browsing, downloading
software/multimedia ﬁles, and HTTP-based streaming. The
proportion of hosts that transfer large amounts of data (e.g.,
10 MB or more) and are active for over 1000 seconds, is sig-
niﬁcantly higher in P2P than in Web.

4.2.1 Transfer Symmetry in P2P Systems

Transfer symmetry is a major concern for P2P system
developers, who want to encourage fair sharing among par-
ticipating peers. Many content sharing portals require that
users maintain a minimum ratio of upstream to downstream
transfer volume, which we refer to as the minimum fair-share
ratio. Table 8 shows the minimum ratios of fair-sharing we
deﬁned for diﬀerent levels of downstream traﬃc. Note that
hosts transferring less than 1 MB of data in total are not
sharing any content and thus are excluded from our trans-
fer symmetry calculation. In most cases, we used equal-sized
bins to assign minimum fair-share ratios; however, for above
100 MB of data transfer, we used a single bin as only 10%
of P2P hosts fall in this category.

We divide P2P hosts into three categories (freeloaders,
fair-share, and benefactors) according to their transfer ratios
(i.e., upstream/downstream ratios) and corresponding min-
imum fair-share ratios from Table 8. We deﬁne freeloaders

293WWW 2008 / Refereed Track: Performance and ScalabilityApril 21-25, 2008. Beijing, ChinaTable 9: Transfer symmetry in P2P systems

Systems
Gnutella
BitTorrent

Freeloader Fair-share Benefactor
33.07%
49.79%

56.93%
10.30%

10.00%
39.91%

 1

 0.8

 0.6

 0.4

 0.2

]
x
=
<
X
P

[

 0

-1

0

]
x
=
<
X
P

[

 1

 0.8

 0.6

 0.4

 0.2

 0

-1

P2P
Web
1

2

log10 (Ranked Hosts %)
(a) Web and P2P

BitTorrent
Gnutella

0

1

2

log10 (Ranked Hosts %)

(b) Gnutella and BitTorrent

Figure 9: CDF of ranked hosts

as those hosts who have a transfer ratio less than the min-
imum fair-share ratio. Benefactors are hosts that have a
transfer ratio of 2 or greater. The remaining hosts are in
the “fair-share” range.

Table 9 shows the percentage of Gnutella and BitTorrent
hosts as freeloaders, fair-share hosts, and benefactors. We
ﬁnd that approximately 10% of BitTorrent hosts are acting
as freeloaders, whereas 57% of Gnutella hosts are freeload-
ers. Benefactors are common in both BitTorrent (∼50%)
and Gnutella (∼33%) hosts. Therefore, Gnutella host be-
havior appears to be dominated by extreme downstream and
upstream transfers. We ﬁnd that approximately 40% of Bit-
Torrent peers and 10% of Gnutella peers reside in the fair
share zone. BitTorrent introduced a “tit-for-tat” mechanism
to encourage fair sharing among the peers [3]. Every peer in
the BitTorrent system is encouraged to upload for obtaining
the opportunity to download. Therefore, we observe more
freeloaders in Gnutella and better fairness in BitTorrent.

4.2.2 Heavy-hitters

Figure 9 plots the CDF of hosts ranked by transfer volume
(the higher the amount of data transferred, the higher the
rank). We ﬁnd that a few hosts account for much of the
volume transferred; we call these hosts heavy-hitters.

Figure 9(a) shows that the top 0.1% of Web hosts account
for 14% (28 GB) of the total Web transfer. Similarly, the
top 0.1% of P2P hosts transfer 12% (24 GB) of the total
P2P data. Moreover, top 1% of Web and P2P hosts account
for 70 GB (34%) and 82 GB (42%) of the total Web and P2P
bytes, respectively. Clearly, heavy-hitters are present in both
Web and P2P. Examination of the upstream to downstream
transfer ratio for the P2P heavy-hitters shows that most P2P
heavy-hitters are either freeloaders or benefactors.

Figure 10 shows the transfer volume of ranked Web and
P2P hosts. We observe that the total amount of data trans-
ferred by the top 10% Web and P2P hosts follows a power-
law distribution (with α ≈ 0.27); we emphasize that the
power-law does not apply to the body and the tail of the
ranked distribution. The only diﬀerence seen between the
applications is the total transfer volume; top-ranked P2P
hosts transfer an order of magnitude more data than top-
ranked Web hosts.

Figure 9(b) shows the CDF of ranked transfer volume for
Gnutella and BitTorrent hosts. We ﬁnd that the top 1%
of BitTorrent hosts transfer 20 GB (60% of total BitTorrent
traﬃc), whereas the top 1% of Gnutella hosts account for 53
GB (35% of total Gnutella traﬃc). Our data suggests that

 
r
e
f
s
n
a
r
T
 
e
m
u
o
V

l

(
 
0
1
g
o

l

)

B
M
 
n
i
 

5
4
3
2
1
0
-1
-2
-3
-4

α=0.27

P2P
Web

-2

-1

0

1

2

log10 (Ranked Hosts %)

Figure 10: Transfer volume of ranked host

North
America

Other
Continents

Atlantic

 1

 0.8

 0.6

 0.4

 0.2

s
t
s
o
H

 
f

o

 

e
g
a

t

n
e
c
r
e
P

 0

 0

P2P
Web

 4000

 8000  12000  16000

Distance (km)

s
t
s
o
H

 
f

o

 

e
g
a

t

n
e
c
r
e
P

 1

 0.8

 0.6

 0.4

 0.2

 0

 0

BitTorrent
Gnutella

 4000

 8000  12000  16000

Distance (km)

(a) Web and P2P

(b) Gnutella and BitTorrent

Figure 11: Geographic distribution of hosts

BitTorrent heavy-hitters account for a much larger fraction
of that application’s total bytes than Gnutella heavy-hitters
do for their total bytes. We also found that the transfer
volume of top-ranked Gnutella and BitTorrent hosts did not
follow a power-law distribution.
4.3 Geographic Distribution

This section discusses the geographic distribution of hosts
external to the campus network. We calculated the great-
circle distance between individual hosts and our campus us-
ing a geolocation database6. This database provides the
geographic coordinates, country name, and city name for an
IP address range.

Figure 11 shows the geographical distribution of the exter-
nal hosts. Note the plateau between 3, 500 and 7, 000 kilo-
meters represents the Atlantic ocean. Figure 11(a) shows
the geographical distribution of the external Web and P2P
hosts. Most of the external Web hosts, approximately 75%,
are in North America; Asia and Europe each account for
10% of the external Web hosts. The results here are not
surprising. We know that most of the external Web hosts
are Web servers. O’Neill et al. [14] had shown that in 1999
and 2002, 49% and 55% of the public Web sites, respectively,
were associated with entities located in the United States.
In addition, we believe that cultural pecularities may also
aﬀect the results. A majority of our campus Web users are
English-speaking, and thus they are more likely to visit Web
sites located in predominantly English-speaking countries.

In contrast to the geographic distribution of external Web
hosts, we found that approximately 40% of P2P hosts are
located in North America, 30% in Europe, 18% in Asia, 6%
in Australia, and 5% in South America. This indicates that
connectivity between P2P hosts does not appear to strongly
rely on host locality, rather it depends on resource availabil-
ity during the connection establishment phase. The non-
interactive nature of P2P applications makes latency only a
secondary concern; the primary goal is to ﬁnd the requested
ﬁle. In addition, our results suggest that ﬁles being shared
using these systems transcend geographic divides.
6

MaxMind: GeoIP City Database, http://www.maxmind.com/app/city

294WWW 2008 / Refereed Track: Performance and ScalabilityApril 21-25, 2008. Beijing, ChinaThe host geographical distribution for the P2P variants
It shows that majority of ex-
are shown in Figure 11(b).
ternal Gnutella hosts (∼70%) are from North America. Ap-
proximately 18% of the Gnutella hosts are located in Europe
and the rest are in Asia (6%), Australia (2.3%), and South
America (2.3%). This suggests that either Gnutella peers
prefer to connect with hosts that are in close proximity or
that Gnutella clients are widely used in North America for
ﬁle-sharing.
In contrast, only 30% of external BitTorrent
hosts are located in North America. Among the rest, ap-
proximately 40% of BitTorrent hosts are located in Europe,
18% in Asia, 6% in Australia, and 3% in South America.
We know BitTorrent hosts connect to peers from a peer-list
provided by trackers. We believe that the list from trackers
is created based on host bandwidth availability in a swarm
and thus, we see a bias towards regions with high broad-
band penetration. We did observe, however, that although
BitTorrent peers connect to other distant peers for obtaining
content, most of the successful transfers originate from the
peers located in the same geographic region.

5. RELATED WORK

Web traﬃc has been extensively characterized. Many
studies concentrate on the user-level behavior such as the
size and number of request/response messages, and Web
application-speciﬁc properties such as page complexity and
[1, 2]). Flow-level properties of
document referencing(e.g.,
Web traﬃc have also been studied (e.g.,
[4, 16]). One key
observation from prior work is that Poisson arrival process
may not be appropriate for Web ﬂows [4,16]. Our data reaf-
ﬁrms this observation, and also shows that Poisson models
may not be appropriate for modeling P2P ﬂow arrivals.

There are many studies of popular P2P systems in the
literature, including Napster [19], KaZaA [8], Gnutella [19,
21, 26], BitTorrent [9, 10, 18], and eDonkey [17, 24]. These
studies have focussed on diﬀerent aspects of P2P systems
such as query traﬃc [12], data traﬃc [8,21], ﬂow characteris-
tics [17,24], peer behavior [21], system architecture [9,10,18],
and system dynamics (e.g., churn) [23, 26]. In this section,
we discuss closely related prior work.

Saroiu et al. [19] studied Gnutella and Napster systems
using traces collected using crawling techniques. They ob-
served Gnutella hosts had high-bandwidth, high-latency, and
low user-activity periods when compared to Napster hosts.
Sen and Wang [21] studied DirectConnect, Gnutella, and
FastTrack traces from a large ISP’s network. They found
that the traﬃc volume, peer connectivity, and mean band-
width usage distributions are extremely skewed, which is
similar to our observations. Recently, Zhao et al. [26] an-
alyzed traﬃc from modern Gnutella systems. They ob-
served a signiﬁcant decrease in free-riders over the past few
years. Our results, however, indicate pronounced free-riding
in Gnutella. We believe free-riding needs to be further stud-
ied.

Guo et al. [9] analyzed and modeled BitTorrent systems
based on traces collected from a popular tracker site. They
found that swarm popularity decreases exponentially over
time, and that the distribution of swarm population is heav-
ily skewed. Pouwelse et al. [18] studied performance, robust-
ness, and content integrity of BitTorrent systems.

Tutschku [24] and Plissonneau et al. [17] analyzed eDon-

key traﬃc observed on the protocol’s standard port. Tutschku
found that eDonkey ﬂow sizes follow the lognormal distribu-

)

B
K
n

 

i
 

i

 

e
z
S
w
o
F
(
 

l

0
1
g
o

l

7
6
5
4
3
2
1
0

56 Kbps

0

1

2

3

4

log10 (Flow Duration in seconds)

Figure 12: Flow size versus ﬂow duration

tion, that ﬂow IAT are exponentially distributed, and that
eDonkey ﬂows do not appear to alter the mice-elephant mix
of ﬂows. Similar to our observations, Plissonneau et al.
found that eDonkey systems generates many short duration
ﬂows, have signiﬁcant unfairness, and do not exploit geo-
graphic locality when exchanging data. Plissonneau et al.
did not present any traﬃc models in their work.

Our study complements prior work on Web and P2P traf-
ﬁc analysis. We used recent traces that reﬂect the emerging
traﬃc trends in a large edge network, and employed appli-
cation signature matching to identify Web and P2P traf-
ﬁc accurately. We explored the similarities and diﬀerences
in ﬂow-level and host-level characteristics of Web and P2P
ﬂows, and developed models for both types of traﬃc.

6. DISCUSSION

In this section, we discuss two related issues: identiﬁcation

of P2P traﬃc and impact of network traﬃc management.

Many recent P2P characterization studies (e.g.,

[17, 21,
24]) have relied on identiﬁcation by port numbers. Our
full payload packet traces allow us to apply application sig-
nature matching to identify P2P traﬃc that would other-
wise not be identiﬁed had we only relied on port numbers
for traﬃc identiﬁcation. We believe that future character-
ization of P2P traﬃc should not rely solely on port num-
bers for identiﬁcation of this traﬃc. Because collection of
traces with payloads poses unique challenges (e.g., process-
ing cost, longer-term data collection) and are often diﬃcult
to obtain, alternative approaches are necessary. For exam-
ple, recently proposed machine-learning techniques that use
only ﬂow statistics (see [6, 7] and the references therein) or
heuristics-based techniques [5, 11] that leverage characteris-
tic behavior of P2P applications may be suitable candidates
for identifying P2P traﬃc.

A consequence of increased use of P2P applications is the
deployment of bandwidth management solutions in edge net-
works. Any analysis of network traﬃc, therefore, needs to
be aware of the potential implications of traﬃc management
as some characteristics of interest such as ﬂow duration and
ﬂow concurrency may be aﬀected by ﬂow management. At
the University of Calgary, traﬃc is managed using a com-
mercial packet shaping device. The packet shaper (to the
best of our knowledge) employs a combination of applica-
tion signatures and port numbers to identify traﬃc. At the
time of trace capture, the network policy in place was to
group together all identiﬁed P2P ﬂows (except those from
the student residences) and collectively limit their band-
width to 56 Kbps. Figure 12 shows a scatter plot of P2P
ﬂow size and duration for our trace. The scatter plot in-
cludes a straight line that marks the 56 Kbps boundary;
P2P ﬂows (i.e., points) above this line represent an achieved

295WWW 2008 / Refereed Track: Performance and ScalabilityApril 21-25, 2008. Beijing, Chinaﬂow throughput exceeding 56 Kbps. We should also note
that points below this line do not necessarily imply that the
ﬂow’s bandwidth was limited by the traﬃc shaping device.
Flow rates may be below this line for other reasons such
as multiplexing of ﬂows, ﬂow control, or congestion control
mechanisms. The key observation from the plot is that we
do not observe a strong positive correlation between ﬂow size
and duration. This suggests that some P2P ﬂows are indeed
identiﬁed and limited by the packet shaping device. Never-
theless, we do see many points above the 56 Kbps thresh-
old; these P2P ﬂows clearly escaped detection by the traﬃc
shaper.

The ﬁnal comment we make is regarding the representa-
tiveness of our observations and models. Our study is based
on observations from one vantage point, and on a network
that employs some form of bandwidth management. Clearly,
there is a need to study traﬃc from diﬀerent networks to
validate the models we propose and also to develop general
models for Web and P2P traﬃc. Nevertheless, we believe
that our results are still useful as they provide a snapshot of
Web and P2P traﬃc characteristics from a large edge net-
work, and thus should be representative of other large edge
networks with similar population and network management
policies. In cases where the network diﬀers signiﬁcantly in
design or management policy, our methodology can be ap-
plied to develop representative models.

7. CONCLUSIONS

This paper presented an extensive characterization of Web
and P2P traﬃc using full packet traces collected at a large
edge network. We considered three ﬂow-level metrics, namely
ﬂow size, ﬂow IAT, and ﬂow duration, and three host-level
metrics, speciﬁcally ﬂow concurrency, transfer volume, and
geographic distance. We observed a number of contrasting
features between Web and P2P traﬃc. Typically, Web ﬂows
are short-lived whereas P2P ﬂows are long-lived. Both Web
and P2P host transfers are asymmetric; however, P2P host
transfers are dominated by both upstream and downstream
traﬃc, but not both. Web hosts maintain a high degree of
ﬂow concurrency, whereas many P2P hosts maintain a single
ﬂow at a time. Finally, P2P traﬃc exacerbates the “mice and
elephants” phenomenon in Internet traﬃc. Flow-level distri-
butional models were developed for Web and P2P traﬃc;
these models can be used in network simulation and emu-
lation experiments. We believe much work remains. Traﬃc
from other networks should be studied to facilitate develop-
ment of general models for Web and P2P traﬃc. Similarly,
traﬃc from other non-Web applications, for example P2P
streaming applications such as PPLive, P2P VoIP, and other
P2P applications, should be examined, and their impact on
Web-based applications studied.
Acknowledgements
The authors thank Jeﬀrey Erman, the anonymous WWW
reviewers, iCORE, and NSERC.

8. REFERENCES
[1] M. Arlitt and C. Williamson. Internet Web Servers: Workload

Characterization and Performance Implications. ToN, 1997.

[2] F. Campos, K. Jeﬀay, and F. Smith. Tracking the Evolution of

Web Traﬃc: 1995-2003. In MASCOTS, 2003.

[3] B. Cohen. Incentives Build Robustness in BitTorrent. In

P2PECON, 2003.

[4] M. Crovella and A. Bestavros. Self-Similarity in World Wide

Web Traﬃc: Evidence and Possible Causes. ToN, 1997.

[5] T. Dang, M. Perenyi, A. Geﬀerth, and S. Molnar. On the
Identiﬁcation and Analysis of P2P Traﬃc Aggregation. In
Networking, 2006.

[6] J. Erman, A. Mahanti, M. Arlitt, I. Cohen, and C. Williamson.

Oﬄine/Realtime Traﬃc Classiﬁcation Using Semi-Supervised
Learning. In Performance, 2007.

[7] J. Erman, A. Mahanti, M. Arlitt, and C. Williamson.

Identifying and Discriminating Between Web and Peer-to-Peer
Traﬃc in the Network Core. In WWW, 2007.

[8] K. Gummadi, R. Dunn, S. Saroiu, S. Gribble, H. Levy, and

J. Zahorjan. Measurement, Modeling, and Analysis of a
Peer-to-Peer File-Sharing Workload. In SOSP, 2003.

[9] L. Guo, S. Chen, Z. Xiao, E. Tan, X. Ding, and X. Zhang.

Measurements, Analysis, and Modeling of BitTorrent-like
Systems. In IMC, 2005.

[10] M. Izal, G. Urvoy-Keller, E. Biersack, P. Felber, A. Hamra, and

L. Garcs-Erice. Dissecting BitTorrent: Five Months in a
Torrents Lifetime. In PAM, 2004.

[11] T. Karagiannis, K. Papagiannaki, and M. Faloutsos. BLINC:
Multilevel Traﬃc Classiﬁcation in the Dark. In SIGCOMM,
2005.

[12] A. Klemm, C. Lindemann, M. K. Vernon, and O. P. Waldhorst.
Characterizing the Query Behavior in Peer-to-Peer File Sharing
Systems. In IMC, 2004.

[13] T. Mori, M. Uchida, R. Kawahara, J. Pan, and S. Goto.

Identifying Elephant Flows through Periodically Sampled
Packets. In IMC, 2004.

[14] E. O’Neill, B. Lavoie, and R. Bennett. Trends in the Evolution

of the Public Web: 1998 - 2002. D-Lib Mag., 2003.

[15] V. Paxson. Bro: A System for Detecting Network Intruders in

Real-Time. Com. Net., 1999.

[16] V. Paxson and S. Floyd. Wide-Area Traﬃc: The Failure of

Poisson Modeling. ToN, 1995.

[17] L. Plissonneau, J. Costeux, and P. Brown. Analysis of

Peer-to-Peer Traﬃc on ADSL. In PAM, 2005.

[18] J. Pouwelse, P. Garbacki, D. Epema, and H. Sips. The

Bittorrent P2P File-sharing System: Measurements and
Analysis. In IPTPS, 2005.

[19] S. Saroiu, P. Gummadi, and S. Gribble. Measuring and

analyzing the characteristics of Napster and Gnutella hosts.
Multi. Sys., 2003.

[20] S. Sen, O. Spatscheck, and D. Wang. Accurate, Scalable

In-Network Identiﬁcation of P2P Traﬃc. In WWW, 2004.
[21] S. Sen and J. Wang. Analyzing Peer-to-Peer Traﬃc Across

Large Networks. ToN, 2004.

[22] A. Soule, K. Salamatian, N. Taft, R. Emilion, and

K. Papagiannaki. Flow Classiﬁcation by Histograms: or How to
go on Safari in the Internet. In SIGMETRICS, 2005.
[23] D. Stutzbach and R. Rejaie. Understanding Churn in

Peer-to-Peer Networks. In IMC, 2006.

[24] K. Tutschku. A Measurement-Based Traﬃc Proﬁle of the

eDonkey Filesharing Service. In PAM, 2004.

[25] Z. Zhang, V. Ribeiro, S. Moon, and C. Diot. Small-time Scaling
Behaviors of Internet Backbone Traﬃc: An Empirical Study. In
INFOCOM, 2003.

[26] S. Zhao, D. Stutzbach, and R. Rejaie. Characterizing Files in

the Modern Gnutella Network: A Measurement Study. In
MMCN, 2006.

296WWW 2008 / Refereed Track: Performance and ScalabilityApril 21-25, 2008. Beijing, China