Privacy-Enhanced

Sharing of Personal Content on the Web∗

Mohammad Mannan, Paul C. van Oorschot

School of Computer Science, Carleton University

Ottawa, Ontario, Canada

{mmannan, paulv}@scs.carleton.ca

ABSTRACT
Publishing personal content on the web is gaining increased
popularity with dramatic growth in social networking web-
sites, and availability of cheap personal domain names and
hosting services. Although the Internet enables easy pub-
lishing of any content intended to be generally accessible,
restricting personal content to a selected group of contacts
is more diﬃcult. Social networking websites partially enable
users to restrict access to a selected group of users of the
same network by explicitly creating a “friends’ list.” While
this limited restriction supports users’ privacy on those (few)
selected websites, personal websites must still largely be pro-
tected manually by sharing passwords or obscure links. Our
focus is the general problem of privacy-enabled web con-
tent sharing from any user-chosen web server. By leverag-
ing the existing “circle of trust” in popular Instant Messag-
ing (IM) networks, we propose a scheme called IM-based
Privacy-Enhanced Content Sharing (IMPECS) for personal
web content sharing. IMPECS enables a publishing user’s
personal data to be accessible only to her IM contacts. A
user can put her personal web page on any web server she
wants (vs. being restricted to a speciﬁc social networking
website), and maintain privacy of her content without re-
quiring site-speciﬁc passwords. Our prototype of IMPECS
required only minor modiﬁcations to an IM server, and PHP
scripts on a web server. The general idea behind IMPECS
extends beyond IM and IM circles of trust; any equiva-
lent scheme, (ideally) containing pre-arranged groups, could
similarly be leveraged.

Categories and Subject Descriptors
K.6.5 [Management of Computing and Information
Systems]: Security and Protection—Authentication, Unau-
thorized access; K.4.1 [Computers and Society]: Public
Policy Issues—Privacy

General Terms
Security, Human Factors

Keywords
access control, sharing, circle of trust, privacy
∗Version: February 24, 2008.
Copyright is held by the International World Wide Web Conference Com-
mittee (IW3C2). Distribution of these papers is limited to classroom use,
and personal use by others.
WWW 2008, April 21–25, 2008, Beijing, China.
ACM 978-1-60558-085-2/08/04.

1.

INTRODUCTION

Through social networking and photo-sharing websites,
and personal blogs, it is becoming increasingly popular to
make personal content available on the Internet. For some
users, these sites provide a textual and/or pictorial docu-
mentary of life. Primarily because it is the easiest mode of
operation, many users of these services allow their personal
web content to be accessed by all other Internet users, often
with the false impression that none other than their family
or friends would look into their personal online posts [29].
Privacy concerns are largely being ignored (sometimes un-
knowingly) in the current rush to online lifecasting.

Social networking websites such as Facebook and MyS-
pace provide access control mechanisms for partially restrict-
ing personal content to a known circle of contacts; photo-
sharing websites such as Flickr and Shutterﬂy provide sim-
ilar mechanisms. A user can invite her friends and family
to be added to her permitted list, and can authorize only
such people to view her web content, but only if they create
accounts at the publishing user’s social networking site. Al-
though users reportedly disclose personal data in abundance
at these social networking sites, a relatively small number
of users limit access to their proﬁles only to a friends’ cir-
cle; several studies provide evidence of such behaviour [21,
29, 39, 51]. While this limited restriction might help users’
privacy, this applies only for the content on those (few) sites.
We focus on the general problem of privacy-enabled web
content sharing from any user-chosen web server. Many
users now own domain names for hosting personal web-
sites, facilitated by the very low price; as of October 2007,
a top-level domain name may cost less than $6/year, with
$4/month commercial hosting fees. Most ISPs also oﬀer
free web spaces for home users. It is thus cheap and easy
to make any personal data available to anyone around the
globe through a website; however, restricting such content to
a selected group of people is more diﬃcult. Currently this
is achieved primarily by either (i) advertising an obscure
link through personal email, i.e., a URL which is not linked
from any other web page; or (ii) protecting a web page with
a password, and distributing that password among chosen
contacts through email, instant messaging (IM), or phone.
Emailing an obscure URL to many contacts (friends and
family members) is a rather cumbersome approach, espe-
cially if the shared URLs are often updated. Password pro-
tection (e.g. HTTP Authentication [18], forcing a login di-
alogue/page) is not uncommon among the more technically
inclined, but this leads to yet one more password to share
and maintain, and once a password is shared with some-

487WWW 2008 / Refereed Track: Security and Privacy - MiscApril 21-25, 2008 · Beijing, Chinaone, the access grant cannot be retracted without chang-
ing the password (which also requires distributing the new
password to all other contacts). Also, anyone who learns the
shared password can view the protected content without the
publishing user’s consent; anyone knowing the password can
pass it on to others, and such transitive access is not gener-
ally preventable.

Relying on the immense popularity of public instant mes-
saging (IM) networks,1 we propose a scheme called IM-based
Privacy-Enhanced Content Sharing (IMPECS) to disseminate
personal web content by leveraging the established “circle
of trust” on IM networks. We assume both publishing and
viewing users can, or already do use IM. A user’s web con-
tent can be viewed only by her IM contacts. Further re-
strictions can be applied depending on which group of users
(e.g. family, friends, co-workers) a speciﬁc contact is placed
in by a publishing user, i.e., one who originally makes per-
sonal content available for her IM contacts. A viewing user
is one who wants to view such content. We assume that a
web server and an IM server share a user-speciﬁc content
sharing key; a ‘ticket’ (similar to a session cookie) is gener-
ated by the IM server for a viewing user using the content
key of a publishing user, and the web server validates the
ticket before serving data from a user’s web folder (cf. Ker-
beros [31]). Our primary goal is to enhance privacy (i.e.
conﬁdentiality) of users’ personal web content; we do not
aim for very high-end or military-grade security, as the se-
curity of IMPECS is limited by the underlying IM and web
communication protocols, which in current practice trans-
fer most content in plaintext although authentication pass-
words are generally sent over SSL (cf. [26, 11]). The main
intended feature of IMPECS is that total strangers are pre-
cluded from direct access to a user’s personal web content,
but “friends” as designated by the user’s IM contact list are
allowed access (without requiring any special shared pass-
word). IMPECS also prevents large-scale web crawlers and
auto-indexers from tagging personal data and pictures (see
e.g. [4, 27]). However, malicious IM contacts of a publish-
ing user may of course re-post the user’s private content to
a public web forum, and we are not proposing any form of
digital rights management (DRM) control.

In summary, our proposal for privacy-enhanced personal
web content sharing oﬀers the following features and beneﬁts.

1. Privacy-Enhanced Sharing. A publishing user’s
personal web content can be viewed only by the IM
contacts that she pre-approves. Thus privacy of a
user’s web content is restricted to a designated group.
For many existing IM users, such groups can be lever-
aged without additional setup costs.

2. Usable Security. The privacy enhancement does
not require a viewing user to separately update his
IM client, or remember the publishing user’s URL, or
have access to a site-speciﬁc password to view the pub-
lisher’s content. Similarly, the publishing user need not
carry out any extra steps beyond existing management
of an IM contact list, although ﬁner granularity lists
can optionally be created by advanced users.

3. Interoperability. In contrast to social networking

1For example, according to one estimation [6], there are
about 350 million user accounts in MSN and Yahoo! IM
networks in total.

websites, a user can publish her web content at any
web server of her choice, and yet be able to maintain
greater access control on her content.

4. Decreased Risks Related to Sharing. By re-
stricting open access to personal details, IMPECS re-
duces opportunities for launching context-aware, tar-
geted phishing attacks [30, 44, 50].

5. Protection Against Web Server Compromise. A
variant of IMPECS (Section 4) can prevent en masse
drive-by-downloads [36, 47] as currently being enabled
by the compromise of a hosting provider with a large
number of customers.

To test our design, we built a prototype of IMPECS using
the IETF standardized Extensible Messaging and Presence
Protocol (XMPP [40, 41], i.e., the Jabber IM protocol). This
required only minor modiﬁcations to the IM server, and PHP
scripts on a web server. Our implementation source code is
available on request.

Organization. In Section 2, we discuss the proposed IM-
PECS scheme, threat model and operational assumptions.
Our prototype implementation is discussed in Section 3,
along with brief comments on deployment issues. A vari-
ant of IMPECS is discussed in Section 4. Section 5 provides
further motivation, an overview of existing and proposed
work related to personal content sharing, and a compari-
son of IMPECS with these in terms of user convenience and
usability. Section 6 concludes.

2.

IM-BASED PRIVACY-ENHANCED
CONTENT SHARING (IMPECS)

In this section, we describe the proposed IMPECS scheme,
threat model and operational assumptions. Table 1 summa-
rizes our notation. We assume readers are familiar with
basic IM deﬁnitions such as presence and contact list (e.g.
see [25]).

A, B

Si, Sw

IDAw
KAw

Two IM users Alice and Bob, both members of
each other’s respective contact lists. A is the
publishing user; B is the viewing user.
IM and web servers, respectively. Both A and
B have accounts with Si, and A maintains an
account with Sw.
A’s user ID at Sw (unique in Sw’s domain).
A’s content sharing key, shared with both Sw
and Si.

{data}K Authenticated encryption [20, 10] of data using

URLA
R
Tiw

symmetric key K.
The URL of A’s publishing web folder on Sw.
Access restrictions on URLA as imposed by A.
An access control ticket for viewing URLA (gen-
erated by Si, and validated by Sw).

URLAR A ‘registration’ URL generated by Sw when re-
quested by A. The content sharing key and re-
strictions are shared between Sw and Si through
this URL.

URLAT A ‘viewing’ URL (for accessing URLA) contain-
ing a ticket Tiw, generated by Si at the request
of B.

Table 1: Notation used in IMPECS

488WWW 2008 / Refereed Track: Security and Privacy - MiscApril 21-25, 2008 · Beijing, ChinaPublisher (A)

IM Server (Si)

Web Server (Sw)

Authentication (between A, Sw)

Request a registration URL for URLA, specifying restrictions R

URLAR

Authentication (between A, Si)

URLAR

Figure 1: Registering a URL in IMPECS

Overview of IMPECS. Assume user A maintains a web-
site on a web server Sw. A registers her site with an IM
server Si, and sets permission for the site, e.g., which con-
tacts can access which pages/folders. For example, contacts
in the group “friends” may have diﬀerent permissions than
the group “family.” Sw and Si share a user-speciﬁc content
sharing key for A. IM contacts of A can see (through their
IM clients) whether A oﬀers any personal URL which they
are permitted to view. When a contact B wants to visit A’s
advertised personal website (or any pages thereon), B sends
a request to Si to visit the website. Depending on restric-
tions R (e.g. duration, frequency) for viewing web pages at
URLA, Si generates a ‘ticket’ (similar to a session cookie),
and sends a special URL to B along with the ticket. B re-
ceives the URL instantly (e.g. as an IM text message) from
Si, and can visit URLA within a time period as speciﬁed by
the ticket. Note that A need not be online to provide this
permission. We now describe the scheme in greater detail.

Setup. A and B are two IM users who maintain IM ac-
counts at the same IM server Si. (Note that A and B may
use diﬀerent IM servers, as long as their IM servers facili-
tate communication between the users, e.g., as in distributed
XMPP [40], Windows Live/Yahoo! Messenger.) Both users
have added each other into their contact lists; adding some-
one to a contact list requires explicit permission from the
user being added (a common practice in most IM networks).
A also puts B into an appropriate group of her contact list
(e.g. “family”, “friends”, “co-workers”). A maintains an ac-
count with a web server Sw, and uploads some personal pic-
tures or ﬁles under a web folder URLA at Sw. A wants to
share URLA with a select group of IM contacts including B.

Registering a URL with the IM server. We now de-
scribe the steps for publishing a content-hosting URL in IM-
PECS. Figure 1 outlines the following steps.

1. A logs into Sw (e.g. using a pre-established password

over SSL).

2. A uploads her personal ﬁles and sets restrictions on
URLA, e.g., the length of time a ticket will remain
valid after being generated by Si (using e.g. HTML
check-boxes or drop-down lists). A then requests Sw
to generate a registration URL for URLA.

3. Sw generates a random content sharing key KAw (e.g.
128 bits, suﬃcient for precluding oﬄine dictionary at-
tacks) and stores it in a protected database, or in a ﬁle

under A’s private space. Sw constructs the registration
URL, URLAR = http://<URLA>/?userid=IDAw &key=
KAw&restrictions=R, and sends URLAR to A (e.g.
through HTTPS). Here, by <URLA> we mean the ac-
tual URL (without the ‘scheme name’), not a label for
that URL (i.e. not the string “URLA”).

4. A logs into Si (e.g. using her regular IM password

over SSL).

5. A forwards URLAR to Si, for the purpose of registering
this information with Si. Si stores URLA, IDAw, KAw
and R for future ticket generation.

Viewing a protected URL via an IM server. We now
describe the steps for viewing a content-hosting URL in IM-
PECS. Figure 2 outlines these steps.

1. B logs into Si (e.g. using his regular IM password over
SSL), and receives his contact list as usual in IM. As
part of IMPECS, B also receives a list of private URLs,
oﬀered by his contacts, which are authorized to be ac-
cessed by B.

2. B sends a request to Si for a ticket to view one of these

URLs, say A’s web content at URLA.

3. Si generates a ticket Tiw = {IDAw, R}KAw , constructs

URLAT = http://<URLA>/?userid=IDAw &ticket=
Tiw, and sends URLAT to B.

4. B forwards URLAT to Sw. Sw retrieves KAw using
IDAw as embedded in B’s request. Then Sw decrypts
the ticket Tiw, and compares whether A’s user ID in
the URL is the same as inside the ticket. Sw also
checks the restrictions; e.g., R could be as simple as
a timestamp, in which case Si encrypts the current
timestamp into the ticket and Sw accepts that ticket if
received within a speciﬁc time period (e.g. 60 seconds,
as set by A).

5. Sw sends the content hosted at URLA to B after val-
idating B’s ticket Tiw in URLAT (as in step 4). If a
valid ticket is not supplied, Sw denies access to URLA.

Caveats. A malicious user B can compromise the privacy
of content hosted at URLA, by making a copy of the web-
site and posting it on a publicly accessible site, or sending
a valid ticket to anyone B wants. Although A cannot stop

489WWW 2008 / Refereed Track: Security and Privacy - MiscApril 21-25, 2008 · Beijing, Chinao
o
/
/
/
/
o
o
o
o
/
/
/
/
Viewer (B)

IM Server (Si)

Web Server (Sw)

Authentication (between B, Si)

Request to access URLA

URLAT

URLAT

Content hosted at URLA

Figure 2: Viewing a personal URL in IMPECS

copying of her personal content, she may limit (to some ex-
tent) forwarding of a valid ticket with the help of Si and Sw
in the following way. Si can encrypt B’s current IP address
into the ticket, and Sw can check whether it receives the
ticket from the speciﬁed IP address as embedded inside the
ticket (assuming both Si and Sw have access to the same IP
address of B).

If a content key KAw is leaked, anyone can generate valid
tickets with that key, and thus compromise the privacy of
content hosted at URLA. If A changes her content key KAw,
this threat can be minimized. Note that A’s modiﬁcations to
her web content, and key updates, are transparent to view-
ing users. Although valid tickets can be generated with a
compromised KAw, this key does not enable access to mod-
ify A’s content on Sw.

Most IM and web accounts are currently authenticated
by user-chosen (generally weak ) passwords. A compromised
IM account enables an attacker to add any malicious link
(as personal URLs) to that account. A compromised web
account enables an attacker to post any content on the com-
promised user’s web space, and modify content keys (al-
though he cannot update the content key at Si). However,
these threats exist currently for both IM and web accounts;
IMPECS does not increase these existing risks nor does it
attempt to address them.

If user content is distributed across many diﬀerent hosting
sites (rather than being concentrated only to few sites as in
current social networking sites), then an adversary cannot
easily track users by collecting their personal web content
from only a few selected sites. However, in IMPECS if the
IM server Si is compromised (or cooperates with the adver-
sary), privacy of user content is lost for all IMPECS users of
Si even if their content is hosted at diﬀerent providers; from
compromised content keys, anyone can generate valid tickets
for accessing user data. Thus the IM server is a potential
single point of privacy breach (if compromised or hostile).

If attackers can compromise the web server of a publishing
user A, they can display whatever content they want from
A’s site, or spread malware to users visiting the site [36].
Compromise of a web server that hosts content from a large
number of users is particularly more risky, and has been
reported in the past (e.g. [47]). We brieﬂy outline a a variant
of IMPECS to mitigate such a large scale compromise in
Section 4.

Threat model and operational assumptions. We as-
sume that the circle of trust as built into IM networks is

reliable, i.e., a viewing user is not malicious. A publishing
user A cannot be added to anyone’s contact list without be-
ing explicitly approved by A (as is the common practice in
most IM networks). To achieve ﬁne-grained access control,
we also assume that a publishing user groups contacts ap-
propriately, and authorizes access to these groups conscien-
tiously (e.g. which group can access which URLs). IMPECS
trusts that the IM server checks publishing user A’s permis-
sions properly, and only sends tickets to authorized users.
The web server is trusted to deliver A’s content only after
validating an appropriate access control ticket. The avail-
ability of usable site maintenance tools (e.g. HTML editing,
ﬁle uploading) is also assumed for publishing users.

If a publishing user A’s IM client oﬀers a user interface
for setting a personal URL (which is the norm in many IM
clients, e.g., Yahoo! Messenger), we can use that to send
the registration URL (containing the content key and re-
strictions), and thus may avoid changing A’s IM client. A
viewing user B’s IM client can also remain the same if it
oﬀers viewing IM contacts’ personal URLs (e.g. the ‘View
Proﬁle’ option in Yahoo! Messenger provides a ‘Home Page’
ﬁeld in a proﬁle webpage). We require only minor modiﬁca-
tions to a web server through server-side scripts (assuming
the server allows such scripts). The web server may op-
tionally maintain a database of user-speciﬁc content keys;
otherwise, the content key of a user must be stored in the
user’s private space on that web server. For an IM server, en-
forcing restrictions (in ticket generation) is easy; the server
already restricts text (and other request) messages sent to
a user from any other IM users according to the receiving
user’s preferences. However, users must register their URLs
with the IM server; most IM services currently enable users
to register personal URLs on their proﬁles. Leaking these
URLs (without the corresponding content keys) will not by
itself authorize access to any web content; they are inacces-
sible unless someone gets a valid ticket from the IM server.
Communication in most public IM networks (client-server
and client-client) and web servers (client-server) is plaintext,
although a password for authentication is generally sent over
SSL. Note that our design involves the content key KAw (i.e.
URLAR) being sent over SSL. An attacker with access to the
communication link may eavesdrop on private content of a
user when the user uploads content to the web server, or
when content is served to a (valid) viewing user. Using a
variant of IMPECS (see Section 4), or at the added cost of
SSL, these attacks can be addressed.

490WWW 2008 / Refereed Track: Security and Privacy - MiscApril 21-25, 2008 · Beijing, Chinao
o
/
/
/
/
o
o
/
/
o
o
Figure 3: A viewing URL instance in IMPECS

3.

IMPLEMENTATION

In this section we discuss our prototype implementation,

and computational and deployment costs of IMPECS.

We implemented a prototype of IMPECS using the Ex-
tensible Messaging and Presence Protocol (XMPP [40, 41],
based on the popular Jabber2 IM protocol). As XMPP
server and client, we chose jabberd2 [22] and Pidgin [34]
(previously known as Gaim) respectively, on a Linux plat-
form. For cryptographic library, we use OpenSSL and the
PHP mcrypt module; we use AES-CBC-128 for symmetric
encryption, and /dev/urandom for random number genera-
tion. MySQL is used for database support. Our implementa-
tion source code for the prototype is available on request.

We assume that the publishing user A can run PHP scripts
on the web server Sw. Sw also stores A’s content sharing key
in a database. We create a web folder for A on Sw which
is accessible for writing (and viewing) when A logs into Sw.
Other than login as A, for viewing any content of the folder,
one must supply a ticket containing a valid timestamp (and
IDAw) encrypted under A’s content key. We assume that
system clocks of Si and Sw are (more or less) synchronized.
Sw checks whether a requesting URL contains a valid ticket;
we accept a timestamp to be valid if it arrives within 60
seconds of being generated by Si. A and B also add each
other to their respective contact lists.

XMPP uses the vCard [15] format for personal proﬁle in-
formation storage, which facilitates advertising one’s per-
sonal URL. We use this ﬁeld in vCard for storing a user-
speciﬁed URL, and added one ﬁeld called content-key into
the vCard table for storing a user’s content sharing key
(along with IDAw).3 Ideally an XMPP user can set vCard
values from any XMPP client. However, as the Pidgin imple-
mentation we used (version 2.0.1) lacks any such user inter-
face for setting vCard values, we directly inserted URLA and
KAw to A’s vCard table on the jabberd2 server database.
For viewing a contact’s vCard, a user can select the contact
from the Pidgin contact list, and choose the “Get Info” op-
tion from the context menu. When Si receives such a request

2www.jabber.org
3Instead of inserting the content-key ﬁeld, IDAw and KAw
could be embedded into the URL ﬁeld, allowing Si to remain
in conformance with the vCard standard.

for A’s vCard from B, Si retrieves A’s content key KAw, and
generates a ticket by encrypting the current time and IDAw
with the key. Si then constructs a URL using URLA as the
base, and IDAw and the (hexadecimal encoded) ticket as
parameters. Figure 3 shows one example of Si’s response to
B. Then B can click on the link and be able to view URLA,
if validated by Sw.

Computational and deployment costs. In addition to
retrieving A’s vCard information from a database (as re-
quired by a regular XMPP server), IMPECS requires one
symmetric-key encryption by Si. One symmetric-key de-
cryption is required by Sw when a viewing URL is received
(for ticket validation). Sw also must generate a 128-bit ran-
dom number when A requests a registration URL (for the
content key generation). These operations are relatively
light-weight for the IM and web servers; no practical de-
ployment barrier in terms of performance is expected.

In a distributed IM service such as XMPP or Windows
Live/Yahoo! Messenger, where A and B may have accounts
with diﬀerent IM servers, IMPECS does not require any
changes to B’s server or client software. (Note that as of
Feb. 2008, XMPP is supported by several large IM services,
e.g., Google Talk, IBM Lotus Sametime, and AOL/ICQ.)
We require changes to A’s IM and web servers. The changes
in Sw are mostly achieved through PHP scripts. A’s content
key and restrictions can be stored in a ﬁle under a private
folder (on A’s web space), or in a database if Sw provides
database access. Also, B remains anonymous to Sw in IM-
PECS; i.e., B does not need an account at Sw for viewing
A’s content, as opposed to social networking websites (al-
though a ticket is required in IMPECS). Note that all pub-
lishing users at Sw can reuse the same PHP scripts for our
scheme; i.e., users are not required to write or modify the
PHP scripts (these scripts may be provided by, e.g., Sw or
the open-source community).

Why not to implement IMPECS as a Facebook ap-
plication. For ease of deployment, we could implement
IMPECS in Facebook Platform4 or Google OpenSocial.5 In-
stead we chose to base our IMPECS design and implementa-

4http://developers.facebook.com/
5http://code.google.com/apis/opensocial/

491WWW 2008 / Refereed Track: Security and Privacy - MiscApril 21-25, 2008 · Beijing, Chination on IM for the following reason. We believe that storing
relationship information and user data at the same site may
undermine privacy; for example, a single entity then learns
too much about users and may use that knowledge to launch
unfriendly (in regard to users’ privacy) campaigns such as
targeted advertisements, sharing user data with government
agencies and third-party businesses. This also makes such
sites an attractive target to compromise. These threats are
quite evident from the short history of Facebook and MyS-
pace. IM networks have also been targeted for malicious pur-
poses such as spreading worms and phishing URLs; however,
such attacks generally compromise relationship information
(i.e. email addresses) but not user content.

4. A VARIANT OF IMPECS

In this section, we brieﬂy outline a variant of IMPECS
that can prevent malware-spread from a compromised web
hosting provider. We have not implemented this variant yet.
Some large hosting providers (e.g. godaddy.com) currently
facilitate web hosting for thousands of personal and corpo-
rate sites.
If many IMPECS users host their content at
such a provider, a successful attack against the provider
might possibly aﬀect all those IMPECS users. The com-
promised user sites could be used for malicious purposes,
e.g., hosting malware for drive-by-downloads [36, 47]. This
could be particularly bad for IMPECS users as private URLs
as shared through IMPECS may appear to be more trust-
worthy. Here we outline a proposal that can guard against
such en masse exploits.

Additional steps during URL registration. The fol-
lowing additional steps are required from a publishing user.

1. A uses a local application (in-browser JavaScript plug-
in or an independent content editing application) to
generate an encryption key Kenc, 128 bits long. A
then uses Kenc to encrypt her personal ﬁles and up-
load the result (i.e. {dataf iles}Kenc ) to the web server
Sw. This is done at the beginning of step 2 in URL
registration of IMPECS (see Fig. 1 in Section 2).

2. A appends Kenc to the registration URL received from
Sw before sending the URL to the IM server Si. This
is done at the end of step 3 in URL registration of
IMPECS (see Fig. 1 in Section 2).

Additional steps for a viewing user. The following
additional steps (although transparent) are required from a
viewing user.

1. When Si generates URLAT (step 3 in Fig. 2; see Sec-
tion 2), it also appends the URL with Kenc as a URL
fragment, i.e., <URLAT >#Kenc. When B visits this
URL, URLAT is forwarded to Sw but not the fragment,
i.e., Sw does not receive Kenc (cf. [2]).

2. In step 5 (see Fig. 2 in Section 2), Sw sends the re-
quested (encrypted) content. B’s browser uses Kenc
as received from Si to display the decrypted content.

technique. The publishing user A may update Kenc in a
similar way to the content key KAw. However, an update
to Kenc does not mandate updating KAw or vice-versa, and
both key updates are transparent to viewing users.

5. MOTIVATION, RELATED WORK
AND COMPARISON TO IMPECS

In this section we discuss existing and proposed work re-
lated to personal web publishing, and contrast the IMPECS
scheme with these in terms of privacy and user convenience.
Popular IM networks, e.g., Yahoo!, AOL, and Windows
Live enable users to maintain a proﬁle accessible as a web-
page. Microsoft oﬀers free web spaces for sharing personal
web content (e.g. proﬁle, photos, blogs, guestbook) through
its Windows Live Spaces social networking website at www.
spaces.live.com. Live Spaces is integrated with the Win-
dows Live Messenger IM client. User A can control who
may view her Live Spaces’ webpage. A can invite friends
to join the Windows Live Messenger network to view her
content. A may authorize only her IM contacts (or a sub-
set of the contacts) to view her space. Alternatively, A may
make her space accessible to anyone on the web. If A’s space
is restricted to IM contacts, a contact B (from A’s contact
list) can login to Live Spaces using B’s Windows Live Mes-
senger login credential for viewing A’s space. If logged into
the IM network, B can also select A’s proﬁle from a context
menu from the Live Messenger client; from A’s proﬁle, B can
access A’s space without further authentication. Yahoo! is
also extending its IM service to oﬀer a social networking site
called Mash (mash.yahoo.com).6 However, in either case,
similar to the common social networking practice (e.g. as in
Facebook or MySpace), B must join A’s network to view any
access-restricted content. In contrast, when using IMPECS,
B does not need to know where his (IMPECS-enabled) IM
contacts host their content.

To partially relieve users from the necessity of creating
multiple web credentials, Microsoft permits third-party busi-
nesses to use its Windows Live ID Web Authentication7
(previously known as Microsoft Passport). Similarly, Yahoo!
oﬀers the Browser-Based Authentication8 (BBAuth) service
that enables third-party web applications to be authenti-
cated through widely used Yahoo! IDs. OpenID (openid.
net) is an initiative from the open source community to
unify online authentication, also reducing the burden of cre-
ating multiple web credentials. AOL has enabled the use
of OpenID (through openid.aol.com) for its IM service and
AOL Pages social network. OpenID can also be used for Ya-
hoo!
login (through openid.yahoo.com). Liberty Alliance
(projectliberty.org) is another ‘holistic’ approach to es-
tablish an open standard for online identity.
If any such
uniﬁed identiﬁcation framework becomes widely accepted in
the long-run, IMPECS would become even more appealing
(e.g. through a common login credential). However, IM-
PECS does not address user authentication across websites
per se, but rather focuses on how the existing trust network
and interactiveness of a popular service like IM can be lever-
aged to oﬀer privacy-enhanced personal content sharing on
the web.

The encryption key Kenc is not accessible to Sw at any
time. Thus by compromising Sw, an attacker cannot control
what is served to the visiting IMPECS users. Note, however,
that regular visitors to such a site are not protected by this

6As of Feb. 10, 2008, this is an invitation-only ‘beta’ service.
7http://msdn2.microsoft.com/en-us/library/
bb676633.aspx
8http://developer.yahoo.com/auth/

492WWW 2008 / Refereed Track: Security and Privacy - MiscApril 21-25, 2008 · Beijing, ChinaMost IM networks oﬀer ﬁle sharing from user machines
generally through custom-built ﬁle transfer protocols. An
IM user can restrict which contacts in her IM contact list
can access the shared ﬁles. However, IM ﬁle transfer pro-
tocols may not work in some cases (e.g. due to ﬁrewall re-
strictions), and a publishing user must be online to make
her ﬁles available to others.

YouServ [9] is an end-user P2P application designed by
IBM to enable people to easily share personal content (e.g.
photos, music, presentations, work documents) with little to
no cost.9 Instead of a specialized P2P protocol, all YouServ
content is served through standard web protocols (i.e. DNS
with HTTP). An implementation of YouServ was used by
thousands of users internally at IBM and Carnegie Mel-
lon University (apparently the web interface for this ser-
vice at YouServ.com is now defunct). YouServ requires two
centralized components called YouServ Coordinator (for au-
thentication and peer coordination) and YouServ Dynamic
DNS (for ﬁnding a peer site’s dynamic IP address). A user’s
YouServ content remains available even when the user’s PC
is oﬄine (through a peer hosted site), or ﬁrewalled (through
a proxy site). Authentication is provided using a single sign-
on password scheme (valid for any YouServ site). Access to
any speciﬁc ﬁle can be limited to certain members of the
YouServ community. Using YouServ, Bayardo et al. [8] pro-
posed a technique to make IM ﬁle transfer easier by making
local ﬁles available through transient web links; the web link
of a ﬁle is sent to the recipient simply as an IM text message.
In contrast to YouServ, publishing users in IMPECS make
their personal content available from a third-party hosting
site (as is the current common practice) instead of their own
PC (or any of their peers’ PC).

The popularity of social networking websites, e.g., Face-
book, MySpace, Twitter, Bebo, is apparently comparable
to the early years of large-scale IM networks. By joining
Facebook or MySpace, users can search and connect with
friends, share personal content such as photos, videos, blogs,
contact information, and preferences.
In Facebook, users
generally locate friends from groups, e.g., classmates from
the same school or university, co-workers, geographical lo-
cations. MySpace generally categorizes user groups by in-
terests, e.g., music, photography. To add to the interactive
power of IM, MySpace oﬀers its own IM client called MyS-
paceIM (accessible only to MySpace users). Facebook also
has recently (Oct. 2007) added IM capability through the
FriendVox browser-based IM client. Twitter enables users
to send short messages to selected friends through the web,
SMS messages, or IM. Most social networking sites enable
limited access control through explicitly creating a “friends’
list.” Online photo sharing website Flickr oﬀers creation of a
list of friends through Yahoo! login credentials. Other photo-
sharing websites such as Shutterﬂy oﬀer similar privacy-
enhancing mechanisms. We discuss the eﬀectiveness of such
access control mechanisms below.

Privacy issues in social networking websites. Al-
though social networking sites enable publishing users to
partially restrict access to their personal content, privacy
concerns are emerging quickly regarding the use of these
networks. People have been denied or lost jobs because of

9Note that when this research [9] was published in 2002, the
cost of hosting a personal website at a third-party hosting
company was much higher than today.

their comments on MySpace or Facebook proﬁles (e.g. [32,
33]), a grocery chain dismissed employees for comments on
Facebook (e.g. [19]), and students were suspended for their
Facebook comments (e.g. [13]). Government agencies such
as the CIA are suspected of tracking users with special inter-
ests (e.g. [35]); apparently under the U.S. Patriot Act, state
agencies can look into a job interviewee’s Facebook proﬁle,
even if the proﬁle is “privacy-protected,” i.e., permitted to
be viewed only by the publisher’s circle of friends (e.g. [28]).
If a user removes content from his/her proﬁle that may be
deemed oﬀensive or was posted as a momentary emotional
response, or even if the user deletes the entire proﬁle, per-
sonal content may still reside in (incremental) archives for a
long time (cf. [27]).

Many users of social networking sites keep their proﬁles
and friends list publicly accessible. A user survey [29] of
social networking websites reported that 74% of adult users
of those sites exposed their personal information such as
email address, name, birthday, home and work address, and
even Social Security Number (SSN). Only 39% of respon-
dents chose to restrict their personal proﬁles only to friends.
Initial results from another survey [48] of Facebook users re-
ported that 67% of the participants kept their personal pro-
ﬁle open for all. Another study [37] of the LinkedIn social
networking website (used mostly for business purposes, e.g.,
to ﬁnd potential clients, service providers, business oppor-
tunities, job listings) reported that people generally expose
detailed and (possibly) conﬁdential information on their pro-
ﬁles. Dwyer et al. [16] compared information disclosure and
perceptions of trust and privacy in an online survey of Face-
book and MySpace users. Facebook users were reported
to reveal more identifying information than MySpace users.
For example, real name, email address, and IM screen name
have been disclosed by 100%, 94%, and 71% of Facebook
users respectively (in contrast to 66.7%, 40%, and 49.8% of
MySpace users respectively).

Gross and Acquisti [21] investigated patterns of personal
information revelation and associated privacy implications
using more than 4,000 publicly available Carnegie Mellon
University (CMU) users’ Facebook proﬁles. Most users pro-
vided (seemingly highly accurate) personal information in-
cluding proﬁle image, full birth date, hometown, current
residence, and phone number. Personal preferences, inter-
ests, and political views were also disclosed by the majority
of CMU users. Although Facebook oﬀers privacy control,
most users did not change the default privacy preferences
which grant access to a user’s full proﬁle by any member of
the user’s groups/networks (e.g. place, institution, interest);
only three CMU users’ proﬁles (0.06%) were precluded from
view by unconnected users (i.e. not a friend or friend-of-a-
friend). Based on the revealed personal information, the
authors outlined a number of privacy implications includ-
ing online and real-world stalking, digital dossier of partic-
ipants (by any third-party), and demographics and face re-
identiﬁcation (i.e. relating seemingly anonymous data to ex-
plicitly identifying information). The authors also discussed
how a user’s SSN may be estimated from disclosed birth
date, hometown, current residence and phone number. A
similar study [17] on 20,000 MySpace user-proﬁles reported
that 68% of users kept their personal proﬁles open for all.
Almost half of a randomly selected 1000 users’ group pro-
vided global access to all elements of their personal proﬁle.
Rosenblum [39] analyzed privacy risks of social networking

493WWW 2008 / Refereed Track: Security and Privacy - MiscApril 21-25, 2008 · Beijing, Chinasites, including privacy options as provided by major net-
working sites and limitations of such privacy settings.
In
addition to highlighting privacy issues of social networking
sites, Barnes [7] emphasizes that a signiﬁcant educational
eﬀort from parents, schools, social networking sites, and
government agencies, is required to address the emerging
privacy issues related to these sites.

Jagatic et al. [23] collected publicly available “circles of
friends” data from several social networking websites by us-
ing web crawlers; this enabled the researchers to quickly
build a database of tens of thousands of relationships. When
a (benign) phishing attack was launched by using the col-
lected social network database, 72% of social networking
targets fell victim to the phishing attack, while only 16% of
regular users were fooled by the attack. In fact, social net-
working websites are speciﬁcally being targeted for launch-
ing context-aware phishing attacks (see e.g. [30, 44, 5, 50]),
spreading spyware [12] and malware [45], and even for build-
ing botnets [43]. Cross-site scripting ﬂaws in the MySpace
website have been reported [49] in the past which could have
been exploited to disclose even privacy-protected user con-
tent. Social networking websites with personal details of
millions of users would also seem to be lucrative targets
to online attackers (e.g. for targeted phishing or identity
theft), and government agencies (e.g. for tracking citizens’
digital identities). Equifax, a leading consumer credit re-
porting ﬁrm, has recently (July, 2007) warned [38] that user
proﬁles on social networking sites are a “goldmine” for ID
thieves. MySpace acknowledged [1] that as of July 2007, it
had removed more than 29,000 registered sex oﬀenders pro-
ﬁles from the MySpace website, indicating that criminals
with other than monetary motives are also exploiting the
abundance of personal information freely available at social
networking sites.

Ahern et al. [3] examined privacy decisions in mobile and
online photo sharing using Flickr. Most interviewed users in
the study showed little or no concern regarding exposure of
aggregated contextual information, e.g., time, location (em-
bedded with some uploaded photo ﬁles), arising from their
photo-sharing habits. In addition to manual photo-tagging
as oﬀered by common photo-sharing websites such as Flickr
and Shutterﬂy, Polar Rose (www.polarrose.com) uses facial
recognition algorithms for tagging unknown images of a sub-
ject if there is a tagged image of the subject on Polar Rose’s
image database (see [4] regarding the inadequacy of current
privacy laws in this regard). Search engines, e.g., Spock
(www.spock.com), customized for ﬁnding personal proﬁles
posted at diﬀerent websites, may provide even easier access
to personal web content. Since September 2007, Facebook is
allowing non-members to search for user proﬁles that are not
access-restricted; third-party search engines such as Google
and Yahoo! are also authorized to index such proﬁles (as of
Feb. 2008).

Convenience and usability of IMPECS. IM contact
lists are already in place for IM users, whereas social net-
working sites require users to invite friends and family mem-
bers through, e.g., email to join a user’s “friends’ list”; some-
times these standardized, impersonal invitation emails sim-
ply irritate the recipients. IM is more interactive than so-
cial networking sites despite the immense recent popularity
of those sites. For many IM users, IM clients start auto-
matically after users log into their PC, and many IM users
remain signed-on to an IM network as long as they use their

computer. Social networking sites require a user to open a
web browser, load a site, and sign into that site for mainte-
nance or to view a friend’s proﬁle. IM users can view and
control more eﬀectively what content is being shared at any
given time;
information regarding who viewed what, and
how frequently, may also be gathered from the IM server’s
ticket-issuing statistics.

We believe the following factors make IMPECS appeal-
ing. The viewing user B’s role in IMPECS is simpliﬁed in
comparison to the current social networking practice. B
need only log into his IM client, and select an intended con-
tact’s URL for viewing.
In contrast to social networking
sites, B can remain unaware of who hosts his contact’s web
content. B need not even store or memorize A’s URL; in
fact, a bookmarked URL may not work depending on A’s
restrictions. However, B must realize that private URLs
as shared through IMPECS are diﬀerent than regular static
URLs. The publishing user A’s content sharing key KAw
must be shared between Si and Sw. This can be accom-
plished by any of the following means (in increasing order
of convenience): (i) A manually copies the registration URL
(containing KAw) from Sw to Si using an interface provided
by her IM client; (ii) Sw forms an XMPP URI (xmpp: [42])
embedding the key with URLA, and A activates the URI
(e.g. by a mouse click) to be processed by a locally installed
XMPP client;10 the client sends URLA and KAw to Si; or,
(iii) Sw forwards KAw to Si if there exists a pre-established
relationship between the servers. A content key update is
also similar to updating a URL link at Si. To revoke B’s
viewing permission, A can simply place B on a separate
IM contact group which does not have access to URLA (or
remove B from her contact list). Thus it is natural to ex-
pect that IMPECS is more convenient than current con-
tent sharing/limiting techniques on the web (e.g. password
protection, obscure links). However, we hesitate to make
any stronger usability claims without formal user testing
(cf. [14]).

Once published on the Internet, private content may be-
come permanent, e.g., through archived search engine queries
and web crawlers [27]; in essence, the Internet does not for-
get anything published on it, although much of the personal
information on the web (e.g. blogs, emotional responses, crit-
icisms of friends and authorities) is meant to be transient.
Unfortunately, momentary emotional responses to an event,
if posted as text or image on the publicly accessible Inter-
net, may bring unpleasant consequences at a later time. Our
approach can enhance “forgetfulness” of the web by not mak-
ing personal content public in the ﬁrst place (cf. [11]). Web
pages meant for certain personal contacts, friends and fam-
ily will remain among the pre-established circle of trust as
long as none of the trusted IM contacts make copies of a
web page and republish it on the public Internet.

6. CONCLUDING REMARKS

Privacy is typically violated as a consequence of any of
a number of factors. These seem to include: (i) oppres-
sive administrations or large corporations (sometimes by ex-
ploiting the common misconception of “I’ve got nothing to
hide” [46]); (ii) a shortage of usable tools to guard online

10Most popular IM protocols provide custom URI handlers,
e.g., ymsgr: (Yahoo! Messenger), aim: (AOL Instant Mes-
senger).

494WWW 2008 / Refereed Track: Security and Privacy - MiscApril 21-25, 2008 · Beijing, Chinaprivacy; (iii) apathy towards privacy; and (iv) a misunder-
standing of the implications of lost privacy. In our opinion,
easy access to usable privacy tools may change the actions
of ordinary web users towards online privacy; IMPECS is
designed to be such a tool to enhance privacy of personal
web content (i.e. we focus on addressing factor (ii) as listed
above). We leverage the existing circles of trust among IM
contacts, as well as encourage further reﬁnements of trust
in popular IM networks. Unlike current social networking
websites, users do not need to (re-)build a “friends’ list” in
parallel to IM contact lists. In addition, users can publish
their content at any website of their choice, and still be able
to maintain privacy of their content (without being limited
to use only a particular social networking site). Note that
the general idea behind IMPECS extends beyond IM and IM
circles of trust; any equivalent scheme, (ideally) containing
pre-arranged groups, could similarly be leveraged (cf. Lib-
erty Alliance People Service [24]).

As reported in a user survey [29], even most adult users of
social networking websites keep their personal proﬁles open
for all. We believe that such behaviour results largely from
practical issues such as diﬃculties in ensuring close contacts
join the same social networking site as the publishing user
(just to view a friend’s proﬁle), or simply ignorance of the
privacy implications of posting personal details on the In-
ternet.
IM is a very popular Internet application with a
greater user base than social networking sites. Distributed
IM services such as XMPP and Windows Live/Yahoo! net-
works enable IM communication between users of diﬀerent
IM networks. Therefore, we believe that IMPECS has sig-
niﬁcant deployment advantages over other personal content
sharing techniques (e.g. password protection). By restricting
personal content to a closed group of IM contacts, we believe
IMPECS reduces opportunities for launching context-aware,
targeted phishing attacks [30, 44, 50] where fraudsters col-
lect social context of a target victim from their seemingly
innocuous unprotected personal data, and enhances “forget-
fulness” [27] of transient personal content on the web.

Acknowledgements
We thank anonymous reviewers for their comments and mem-
bers of Carleton’s Digital Security Group for enthusiastic
discussion on this topic. The ﬁrst author is supported in part
by an NSERC CGS. The second author is Canada Research
Chair in Network and Software Security, and is supported
in part by an NSERC Discovery Grant, and the Canada
Research Chairs Program.

7. REFERENCES
[1] ABC News. MySpace ﬁnds 29,000 sex oﬀenders. News
article (July 25, 2007). http://www.abcnews.go.com/
Technology/wireStory?id=3409947.

[2] B. Adida. Beamauth: Two-factor web authentication

with a bookmark. In ACM Computer and
Communications Security (CCS), 2007.

[3] S. Ahern, D. Eckles, N. Good, S. King, M. Naaman,

and R. Nair. Over-exposed? Privacy patterns and
considerations in online and mobile photo sharing. In
ACM Computer/Human Interaction (CHI), 2007.

[4] Anonymous. In the face of danger: Facial recognition

and the limits of privacy law. Harvard Law Review,
120(7), May 2007.

[5] Anti-Phishing Working Group. Phishing activity

trends report for April 2007.
http://www.antiphishing.org/reports/apwg_
report_april_2007.pdf.

[6] ArsTechnica.com. Yahoo Messenger and Windows

Live Messenger get together. News Article (Sep. 27,
2006). http://arstechnica.com/news.ars/post/
20060927-7846.html.

[7] S. B. Barnes. A privacy paradox: Social networking in

the United States. First Monday: Peer-reviewed
Journal on the Internet, 11(9), 2006.

[8] R. J. Bayardo and S. Thomschke. Exploiting the web
for point-in-time ﬁle sharing (poster). In World Wide
Web (WWW) Conference, 2005.

[9] R. J. Bayardo Jr., R. Agrawal, D. Gruhl, and

A. Somani. YouServ: A web hosting and content
sharing tool for the masses. In World Wide Web
(WWW) Conference, 2002.

[10] M. Bellare and C. Namprempre. Authenticated

encryption: Relations among notions and analysis of
the generic composition paradigm. In AsiaCrypt, 2000.
[11] N. Borisov, I. Goldberg, and E. Brewer. Oﬀ-the-record

communication, or, why not to use PGP. In ACM
Workshop on Privacy in the Electronic Society
(WPES), 2004.

[12] BusinessWeek. Social-networking sites a ‘hotbed’ for

spyware. News article (Aug. 18, 2006). http:
//www.msnbc.msn.com/default.aspx/id/14413906/.
[13] CBC.ca. 4 charged after school protest over Facebook

suspensions. News article (Mar. 23, 2007).
http://www.cbc.ca/canada/toronto/story/2007/
03/23/protest-birchmount.html.

[14] S. Chiasson, P. van Oorschot, and R. Biddle. A

usability study and critique of two password
managers. In USENIX Security, 2006.

[15] F. Dawson and T. Howes. vCard MIME directory
proﬁle, 1998. RFC 2426, Status: Standards Track.

[16] C. Dwyer, S. Hiltz, and K. Passerini. Trust and

privacy concern within social networking sites: A
comparison of Facebook and MySpace. In Americas
Conference on Information Systems (AMCIS),
Keystone, Colorado, USA, Aug. 2007.

[17] R. Feizy. An evaluation of identity on online social

networking: MySpace (poster). In ACM Hypertext and
Hypermedia (HT), 2007.

[18] J. Franks, P. Hallam-Baker, J. Hostetler, S. Lawrence,

P. Leach, A. Luotonen, and L. Stewart. HTTP
authentication: Basic and digest access authentication,
June 1999. RFC 2617, Status: Standards Track.

[19] M. Geist. Facing up to Facebook fears. BBC news

article (May 9, 2007). http:
//news.bbc.co.uk/2/hi/technology/6639417.stm.

[20] V. D. Gligor and P. Donescu. Fast encryption and

authentication: XCBC encryption and XECB
authentication modes. In Workshop on Fast Software
Encryption, Yokohama, Japan, Apr. 2001.

[21] R. Gross and A. Acquisti. Information revelation and
privacy in online social networks. In ACM Workshop
on Privacy in the Electronic Society (WPES), 2005.

[22] jabberd project. jabberd2 XMPP server. Version 2.1.6.

http://jabberd.jabberstudio.org/2/.

495WWW 2008 / Refereed Track: Security and Privacy - MiscApril 21-25, 2008 · Beijing, China[23] T. Jagatic, N. Johnson, M. Jakobsson, and

F. Menczer. Social phishing. Communications of the
ACM, 50(10), Oct. 2007.

[24] Liberty Alliance. Liberty ID-WSF People Service –

federated social identity. White paper (Dec. 5, 2005).
http://www.projectliberty.org.

[25] M. Mannan and P. C. van Oorschot. Secure public

instant messaging: A survey. In Privacy, Security and
Trust (PST), Fredericton, NB, Canada, Oct. 2004.
[26] M. Mannan and P. C. van Oorschot. A protocol for

secure public instant messaging. In Financial
Cryptography and Data Security (FC), Anguilla,
British West Indies, 2006.

[27] V. Mayer-Sch¨onberger. Useful void: The art of
forgetting in the age of ubiquitous computing.
Harvard KSG Faculty Research Working Paper Series,
article number RWP07-022, Apr. 2007.

[38] Reuters UK. Networking sites a goldmine for ID

fraudsters. News article (July 19, 2007).
http://uk.reuters.com/article/
personalFinanceNews/idUKHIL95513120070719.

[39] D. Rosenblum. What anyone can know: The privacy

risks of social networking sites. IEEE Security and
Privacy, 5(3), May 2007.

[40] P. Saint-Andre. Extensible messaging and presence

protocol (XMPP): Core, Oct. 2004. RFC 3920, Status:
Standards Track.

[41] P. Saint-Andre. Extensible messaging and presence
protocol (XMPP): Instant messaging and presence,
2004. RFC 3921, Status: Standards Track.

[42] P. Saint-Andre. Internationalized resource identiﬁers
(IRIs) and uniform resource identiﬁers (URIs) for the
extensible messaging and presence protocol (XMPP),
July 2006. RFC 4622, Status: Standards Track.

[28] NACE Spotlight Online. The issues surrounding

[43] SANS Internet Storm Center. MySpace phish and

college recruiting and social networking web sites.
News article (June 22, 2006). http:
//career.studentaffairs.duke.edu/undergrad/
find_job/consider/nace_socialnetworks.html.

[29] National Cyber Security Alliance. CA/NCSA social

networking cyber security survey. Online article (Sep.
2006). http://staysafeonline.org/features/
SocialNetworkingReport.ppt.

[30] Netcraft.com. MySpace accounts compromised by

phishers. News article (Oct. 27, 2006).
http://news.netcraft.com/archives/2006/10/27/
myspace_accounts_compromised_by_phishers.html.

[31] B. C. Neuman and T. Ts’o. Kerberos: An

authentication service for computer networks. IEEE
Communications, 32(9), Sept. 1994.

[32] New York Times. For some, online persona undermines

a r´esum´e. News article (June 11, 2006). http:
//www.nytimes.com/2006/06/11/us/11recruit.html.

[33] New York Times. How to lose your job on your own

time. News article (Dec. 30, 2007). http://www.
nytimes.com/2007/12/30/business/30digi.html.
[34] Pidgin project. Pidgin: A multi-protocol IM client.

Version 2.0.1. http://www.pidgin.im/.

[35] PrisonPlanet.com. The Facebook.com: Big brother

with a smile. News article (June 9, 2005).
http://www.prisonplanet.com/articles/june2005/
090605thefacebook.htm.

[36] N. Provos, D. McNamee, P. Mavrommatis, K. Wang,

and N. Modadugu. The ghost in the browser: Analysis
of web-based malware. In USENIX HotBots, 2007.

[37] D. Rand. Threats when using online social networks.
CSIS Security Group (a Danish IT security company;
article published on May 16, 2007).
http://www.csis.dk/dk/forside/LinkedIn.pdf.

drive-by attack vector propagating Fast Flux network
growth. SANS handler’s diary (June 26, 2007).
http://isc.sans.org/diary.html?storyid=3060.

[44] SecurityFocus.com. Image attack on MySpace boosts

phishing exposure. News article (June 11, 2007).
http://www.securityfocus.com/brief/522.

[45] SecurityFocus.com. QuickTime worm uses MySpace to

spread. News article (Apr. 12, 2006).
http://www.securityfocus.com/brief/375.

[46] D. J. Solove. ‘I’ve got nothing to hide’ and other

misunderstandings of privacy. San Diego Law Review,
44, 2007.

[47] StopBadware.org. StopBadware.org identiﬁes

companies hosting large numbers of websites that can
infect internet users with badware. Press release (May
3, 2007).
http://www.stopbadware.org/home/pr_050307.

[48] K. Strater and H. Richter. Examining privacy and

disclosure in a social networking community (poster).
In Symposium on Usable Privacy and Security
(SOUPS), Pittsburgh, PA, USA, July 2007.

[49] Toronto Star. Social networking sites hacker targets.

News article (Aug. 3, 2007). http://www.thestar.
com/sciencetech/Technology/article/243096.

[50] Wired.com. Fraudsters target Facebook with phishing

scam. News article (Jan. 3, 2008).
http://www.wired.com/politics/security/news/
2008/01/facebook_phish.

[51] Wired.com. Private Facebook pages are not so private.

News article (June 28, 2007).
http://www.wired.com/software/webservices/
news/2007/06/facebookprivacysearch.

496WWW 2008 / Refereed Track: Security and Privacy - MiscApril 21-25, 2008 · Beijing, China