Two Birds with One Stone: A Graph-based Framework for
Disambiguating and Tagging People Names in Web Search

Lili Jiang1, Jianyong Wang2, Ning An3, Shengyuan Wang2, Jian Zhan2, Lian Li1
1School of Information Science and Engineering, Lanzhou University, Lanzhou, Gansu, China

2Department of Computer Science and Technology, Tsinghua University, Beijing, China

3Oracle Corporation, Nashua, NH, USA

jianglili06@lzu.cn

{jianyong,wwssyy,zhanjian}@tsinghua.edu.cn;ning.an@oracle.com;lil@lzu.edu.cn

ABSTRACT
The ever growing volume of Web data makes it increasingly
challenging to accurately ﬁnd relevant information about a
speciﬁc person on the Web. To address the challenge caused
by name ambiguity in Web people search, this paper ex-
plores a novel graph-based framework to both disambiguate
and tag people entities in Web search results. Experimental
results demonstrate the eﬀectiveness of the proposed frame-
work in tag discovery and name disambiguation.

Categories and Subject Descriptors: H.3.0 [Informa-
tion Storing and Retrieval]: General

P(cid:13)r(cid:13)o(cid:13)f(cid:13)e(cid:13)s(cid:13)s(cid:13)o(cid:13)r(cid:13)

1(cid:13)

a(cid:13)h(cid:13)d(cid:13)u(cid:13)i(cid:13)n(cid:13)@(cid:13)
t(cid:13)c(cid:13).(cid:13)u(cid:13)m(cid:13)n(cid:13).(cid:13)e(cid:13)d(cid:13)u(cid:13)

3(cid:13)

P(cid:13)e(cid:13)t(cid:13)e(cid:13)r(cid:13) (cid:13)S(cid:13)m(cid:13)i(cid:13)t(cid:13)h(cid:13)
5(cid:13)0(cid:13)3(cid:13)-(cid:13)4(cid:13)9(cid:13)4(cid:13)-(cid:13)0(cid:13)7(cid:13)6(cid:13)3(cid:13)
L(cid:13)o(cid:13)n(cid:13)d(cid:13)o(cid:13)n(cid:13)

2(cid:13)

4(cid:13)

5(cid:13)

6(cid:13)

2(cid:13)1(cid:13) (cid:13)S(cid:13)e(cid:13)p(cid:13) (cid:13)1(cid:13)9(cid:13)8(cid:13)9(cid:13)
M(cid:13)e(cid:13)d(cid:13)i(cid:13)c(cid:13)a(cid:13)l(cid:13) (cid:13)O(cid:13)f(cid:13)f(cid:13)i(cid:13)c(cid:13)e(cid:13)r(cid:13)

8(cid:13)

9(cid:13)

7(cid:13)
A(cid:13)n(cid:13)n(cid:13) (cid:13)H(cid:13)i(cid:13)l(cid:13)l(cid:13)
D(cid:13)u(cid:13)i(cid:13)n(cid:13)

O(cid:13)r(cid:13)e(cid:13)g(cid:13)o(cid:13)n(cid:13) (cid:13)H(cid:13)e(cid:13)a(cid:13)l(cid:13)t(cid:13)h(cid:13)
S(cid:13)c(cid:13)i(cid:13)e(cid:13)n(cid:13)c(cid:13)e(cid:13)s(cid:13)
U(cid:13)n(cid:13)i(cid:13)v(cid:13)e(cid:13)r(cid:13)s(cid:13)i(cid:13)t(cid:13)y(cid:13)

E(cid:13)d(cid:13)w(cid:13)a(cid:13)r(cid:13)d(cid:13) (cid:13)R(cid:13)o(cid:13)n(cid:13)a(cid:13)l(cid:13)d(cid:13)
M(cid:13)o(cid:13)n(cid:13)d(cid:13)r(cid:13)a(cid:13)g(cid:13)o(cid:13)n(cid:13)

1(cid:13)1(cid:13)

1(cid:13)0(cid:13)

C(cid:13)h(cid:13)e(cid:13)r(cid:13)i(cid:13)e(cid:13) (cid:13)A(cid:13)n(cid:13)n(cid:13) (cid:13)H(cid:13)i(cid:13)l(cid:13)l(cid:13)

General Terms: Algorithms, Experiment, Measurement

Figure 1: An Example of Tag Graph

Keywords: Name Disambiguation, Tagging, Clustering

1.

INTRODUCTION

Submit a query “John Smith” to Google, and the top 100
returned Web pages may refer to at least 10 namesakes. One
major challenge is how to locate all the information about a
speciﬁc “John Smith” quickly. An ideal Web people search
engine would return a list of clustered pages, and each of
these clusters pertains to one speciﬁc “John Smith”. Then
the user might select the target “John Smith” and directly
access all his relevant information. However, most popular
search engines leave this diﬃcult task to users.

Various approaches have been proposed to address Web
people search and related challenges, including Vector Space
Model for entity coreferencing, and clustering techniques in
Web people name resolution [3]. There are also a few com-
mercial people search engines including Wink (www.wink.com)
and Spock (www.spock.com). Nevertheless, the increasing
growth of Internet makes people search a big challenge.

We have observed that people tag information, such as
locations and e-mail addresses, appears to be informative,
and a combination of such tags can almost identify a unique
target people. Based on this observation, we propose a novel
weighted-graph based framework which makes full use of the
extracted tag information and can be used to solve the prob-
lem of both disambiguating and tagging Web people names.
The contributions of this work include: a) A novel weighted
graph representation was proposed to model the relation-
ships between tags; b) An eﬀective graph clustering algo-

Copyright is held by the author/owner(s).
WWW 2009, April 20–24, 2009, Madrid, Spain.
ACM 978-1-60558-487-4/09/04.

rithm was devised to disambiguate and tag people names;
c) An extensive performance study was conducted, which
shows that the proposed framework achieves much better
performance than previous approaches.
In the rest of the
work, we outline our framework in Section 2, evaluate it in
Section 3, and conclude this paper in Section 4.
2. THE FRAMEWORK FOR WEB PEOPLE

NAME DISAMBIGUATION AND TAGGING

2.1 Graph Modeling

Given a people name as query, let document corpus D =
{d1, d2, . . . , dk} be the top k returned results from a search
engine. After preprocessing, we extract seven types of tags
T = {people name, organization, location, email address,
phone number, date, occupation} from chunk windows around
the query name in each cleaned document d ∈ D. A =
S7
i=1 Ti, is a union of seven tag sets where Ti contains the
non-repetitive tags with the type ti ∈ T .

Regarding a people name, the proposed framework views
the tag corpus A as an undirected labeled graph G=(V,E),
where the node set V = {v1, v2, . . .} is a set of unique tags,
and each edge (vi, vj ) ∈ E represents that the tags cor-
responding to vi and vj co-occur in a same document in
D. We deﬁne the tags occurring in multiple documents as
bridge-tags, and the maximal clique subgraph containing
all tags in a single document as a micro-cluster. Figure
1 shows an example of tag graph, where nodes 3, 4 and 5
each corresponds to a bridge-tag, and there are in total four
micro-clusters. Additionally, we also compute a weight for
each node and each edge as follows.
Node Weighting. The seven types of tags have diﬀer-
ent characteristics when surrounding the people name. For

WWW 2009 MADRID!Poster Sessions: Friday, April 24, 20091201example, there is a low probability that an email or tele-
phone number is shared by two namesakes, but two name-
sakes could be related to the same organization or location.
This observation leads us to assign diﬀerent type weights to
nodes with diﬀerent tag types. Intuitively, an ideal tag type
should have the following property that each of its tags is
uniquely associated with one namesake, while the more the
number of distinct tags of one type for each namesake w.r.t.
a query name, the less this tag type contributes in name
disambiguation.
In this work, we assign a type weight to
each node according to the following heuristic: the higher
the number of unique tags of a certain type, the smaller the
weight of each node with this tag type. Thus, the tag weight-
ing function is deﬁned as Formula (1). Each tag type weight
in the given corpus D is obtained by dividing the number
of all unique tags by the number of unique tags with the
corresponding type in T , and then taking the logarithm of
that quotient. Finally, each weight is normalized using the
sum of weights of all seven types.

typedweight(v) =

log2

|A|
|Ti|

P 7

j=1 log2

|A|
|Tj |

(1)

Where v denotes any tag with the type ti ∈ T . |A| is the
number of non-repetitive tags in D, and |Ti| is the number
of unique tags of the type “ti”.
Edge Weighting. Assuming the conditional independence
between any two unique tags, we have the joint probability
for two connected nodes v and w, p(vw) = p(v)p(w), then
the edge between v and w, is weighted as Formula (2).

edgeweight(v, w) =

n

X

i=1

pi(v)pi(w)

(2)

where n is the number of documents in which tags v and w
co-occur, pi(v) is the probability distribution obtained from
the frequency of tag v divided by the total number of all tag
occurrences in the ith document di.

2.2 Clustering Algorithm

We then develop a two-step clustering approach for the
problem of name disambiguation. The ﬁrst step is to simply
identify the complete set of micro-clusters (i.e., the max-
imal clique subgraphs). The second step is to use a single
link clustering method to further cluster the set of micro-
clusters generated from the previous step into a ﬁnal set
of macro-clusters. Following we propose a new method to
deﬁne the similarity between two intermediate clusters. In
our method, each micro-cluster M is stored as a vector of
−→
tags
M . The similarity between any two micro-clusters,
ConnectivityStrength, is estimated using cosine distance.
If the ConnectivityStrength is above a predeﬁned thresh-
old, the tags in these clusters are considered to mention the
same people entity and are merged into one cluster.

Diﬀerently from the TF/IDF formula, the weight of any

−→
M is deﬁned by the following Cohesion formula.

tag v in

Cohesion(v,

−→

M ) = typeweight(v)+

P m

j=1 typeweight(wj )

m

+

m

X

j=1

edgeweight(v, wj )

(3)

Formula (3) computes the importance of tag v to the micro-
cluster M . It consists of three parts, the typeweight of tag
v itself, the average typeweight of all the other tags in M ,
and the sum of edgeweights of all the edges starting from v
and ending at other nodes in M . Compared with TF/IDF,

which is a weight derived from term frequency and inverse
document frequency, the Cohesion formula considers the
connectivity of any bridge-tag with other tags in a micro-
cluster based on both type weight and tag frequency, which
is more eﬀective in people disambiguation.
2.3 Tagging a Namesake

The output of the above clustering algorithm is a set of
tag clusters, each of which represents a unique people en-
tity. Tags with higher Cohesion weight in a cluster are
selected to describe the corresponding namesake eﬀectively.
For demonstration purpose, Table 1 shows the tag clusters
generated by our approach for three namesakes regarding
the query name of “Marcy Jackson”.

Table 1: An Example of Tag Clusters

Marcy Jackson1

Marcy Jackson2

Marcy Jackson3

marcy.jackson@montgomerycollege.edu, Mary-
land Motor Vehicle Administration, Driver Ed-
ucation, Wheel Guidelines, 240-683-2589, . . .
Jackkeou@aol.com, Tallahassee, 850-894-0835
editor, Wilton High School, Middlebury Col-
lege, the World Languages Department, the
University of Michigan, Veronica Foster, . . .

3. EXPERIMENTAL EVALUATION

We evaluated our Cohesion weight based clustering algo-
rithm in comparison with the top 5 best systems in [2]. We
used the same dataset as the one in [2]. The measures used
in the experiments are FEB (the Extended B-cubed mea-
sure based on P recision and Recall) and FP I (the harmonic
mean of P urity and Inverse Purity) [1]. The threshold for
ConnectivityStrength used in clustering was empirically es-
timated based on the training data.

The experimental results show that our proposed approach
achieves much better overall performance (measured by FEB
and FP I ) in name disambiguation than the state-of-the-art
systems. In addition, as shown in Section 2.3, our approach
has another advantage, that is, it can output a set of selected
tags to describe each cluster (corresponding to a namesake).
4. CONCLUSION

This paper proposes a novel weighted-graph based frame-
work that utilizes extracted tags to both disambiguate and
tag Web people names. Specially, we consider type weights
for tags and propose a new way (i.e., Cohesion) to mea-
sure the importance of a tag in an unsupervised clustering
algorithm. Experimental results show that the proposed ap-
proach outperforms all the solutions in a recent Web people
search task [2]. In the future, we plan to apply the proposed
framework in a real Web people search system.
5. ACKNOWLEDGMENTS

This work was supported in part by National Natural Sci-
ence Foundation of China under grant No. 60833003, a re-
search award from Google, Inc., the Guangdong Provincial
Government, and State Education Ministry of China under
Grant No. 0712226-100097.
6. REFERENCES
[1] E. Amigo, J. Gonzalo, J. Artiles, and F. Verdejo. A comparison

of extrinsic clustering evaluation metrics based on formal
constraints. Information Retrieval Journal, 2008.

[2] J. Artiles, J. Gonzalo, and S. Sekine. The semeval-2007 weps
evaluation: Establishing a benchmark for web people search
task. In Proc. Semeval 2007.

[3] R. Bekkerman and A. McCallum. Disambiguating web

appearances of people in a social network. In Proc. WWW 2005.

WWW 2009 MADRID!Poster Sessions: Friday, April 24, 20091202