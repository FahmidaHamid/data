the semantic web community, until now, has used traditional database systems for the storage and querying of rdf data. the sparql query language also closely follows sql syntax. as a natural consequence, most of the sparql query processing techniques are based on database query processing and optimization techniques. for sparql join query optimization, previous works like rdf-3x and hexa-store have proposed to use 6-way indexes on the rdf data. although these indexes speed up merge-joins by orders of magnitude, for complex join queries generating large intermediate join results, the scalability of the query processor still remains a challenge. in this paper, we introduce (i) bitmat   a compressed bit-matrix structure for storing huge rdf graphs, and (ii) a novel, lightweight sparql join query processing method that employs an initial pruning technique, followed by a variable-binding-matching algorithm on bitmats to produce the  nal results. our query processing method does not build intermediate join tables and works directly on the compressed data. we have demonstrated our method against rdf graphs of upto 1.33 billion triples   the largest among results published until now (single-node, nonparallel systems), and have compared our method with the state-of-the-art rdf stores   rdf-3x and monetdb. our results show that the competing methods are most e ective with highly selective queries. on the other hand, bitmat can deliver 2-3 orders of magnitude better performance on complex, low-selectivity queries over massive data.
