cryptographic protocols are useful for trust engineering in web transactions. the cryptographic protocol programming language (cppl) provides a model wherein trust management annotations are attached to protocol actions, and are used to constrain the behavior of a protocol participant to be compatible with its own trust policy. the  rst implementation of cppl generated standalone, single-session servers, making it unsuitable for deploying protocols on the web. we describe a new compiler that uses a constraint-based analysis to produce multi-session server programs. the resulting programs run without persistent tcp connections for deployment on traditional web servers. most importantly, the compiler preserves existing proofs about the protocols. we present an enhanced version of the cppl language, discuss the generation and use of constraints, show their use in the compiler, formalize the preservation of properties, present subtleties, and outline implementation details.
