Discovering similar users with respect to their habits plays an important role in a wide range of applications such as collaborative  ltering for recommendation [7, 26, 25], user Copyright is held by the International World Wide Web Conference Committee (IW3C2).
Distribution of these papers is limited to classroom use, and personal use by others.
segmentation for market analysis [27, 21], etc.
Although the approach for capturing and comparing the similarity of different users  habits has been well studied in the  eld of social science [12], most of them are too expensive to be applied to crowd users in practice.
Compared with the poor scalability of traditional approaches, in the last decade, Web-based user habit mining and comparison attracted lots of attention due to the relatively low cost.
For example, Mobasher et al. [16] proposed and experimentally evaluated two technologies in order to mine user habits by discovering overlapping aggregate pro les.
Zhou et al. [27] proposed to analyze the online behaviors of Web users and segment them through a mixture of factor analyzers.
In recent years, the increasing popularity of smart mobile devices and their more and more powerful ability of sensing user contexts make it possible to capture rich contextual information and user interactions through context logs (e.g., Table 1 shows a toy context log) in devices.
Context logs can be used for mining the habits of mobile users and then discovering similar users with respect to their habits.
Compared with Web-based user habit mining approaches, the major advantage of mobile habit mining is that it can capture richer contextual information of users while capturing user activity information due to the more powerful sensors of smart mobile devices, which implies the possibility of characterizing user habits more precisely.
The following example intuitively illustrates the advantage of mobile habit mining in terms of capturing user habits.
Example 1 (A motivating example).
Suppose that Sam is a fan of the social game FarmVille and he usually plays the game through his PC at home in nights and through his smart phone in the bus leaving from his work place in evenings, a Web-based habit mining approach may discover Sam usually  plays games in nights .
In contrast, a mobile habit mining approach may discover Sam usually  plays games in the bus (sensing by 3D accelerometer) from his work place (sensing by GPS or cell ID sensor combined by social location mining technology) to home in evenings , which is more precise for characterizing the habit of Sam.
Cao et al. [3] proposed an e ective approach for mobile habit mining.
They mined associations between interactions and contexts, i.e., behavior patterns, from the context logs of mobile users for representing user habits and gave an effective algorithm for solving the problem.
By using di erent measurements of support and con dence, they successfully addressed the unbalanced occurrences of context data and interaction records which challenge the traditional approaches for association rule mining [1, 8].
t1 t2 t3 t38 t39 t58 t59 Table 1: A toy context log.
Context {(Is a holiday?
: No),(Time range: AM8:00-9:00),(Cell ID: 2341-42344)} {(Is a holiday?
: No),(Time range: AM8:00-9:00),(Cell ID: 2341-22347)} {(Is a holiday?
: No),(Time range: AM8:00-9:00),(Cell ID: 2341-79901)} {(Is a holiday?
: No),(Time range: AM8:00-9:00),(Cell ID: 2341-32044)} {(Is a holiday?
: No),(Time range: AM8:00-9:00),(Cell ID: 2341-2501)} {(Is a holiday?
: No),(Time range: AM8:00-9:00),(Cell ID: 2341-42344)} {(Is a holiday?
: No),(Time range: AM8:00-9:00),(Cell ID: 2341-42344)} ......
......
Interaction record Null Playing Music Player Null Null Null Playing Music Player Null number of following users = 1 Avg.
Num.
of Follow.
Users




 s n r e t t a
 r o i v a h e
 f o r e b m u





 Number of Following Users

 Figure 1: The distribution of mined behavior patterns with respect to the numbers of their following users in a real data set.
Intuitively, we can  rst map users into the behavior pattern space by their behavior patterns and the corresponding con dences and then  nd nearby data points in the space for discovering similar users with respect to their habits.
However, this naive approach does not work in practice because we observe that the behavior pattern space for crowd users is usually very sparse.
For example, Figure 1 illustrates the distribution of mined behavior patterns with respect to the numbers of their following users 1 in a real data set which includes 443 users  context logs.
From the  gure we can see that most behavior patterns are followed infrequently, which implies that the behavior pattern space is extremely sparse.
As is well known, there is no distance metric which can work well in an extremely high-dimensional and sparse space, which is referred to as the curse of dimensionality [2].
To this end, motivated by some observations from real data, we propose a two-stage approach for addressing the sparseness of behavior pattern space.
To be speci c,  rst of all, we normalize the raw context logs by transforming the location-based context data to social locations and transforming the raw interaction records into interaction categories which are more general and able to re ect the common points of di erent interactions.
Second, we further take advantage of the Matrix Factorization technology for extracting common habits of users denoted as hyper behavior patterns from the matrix of mined behavior patterns and users.
Finally, we map users into the space of hyper behavior patterns which has much less dimensions and is much more dense.
To incorporate some particular constraints in our problem, we use a constraint-based Bayesian Matrix Factorization model [17], which can naturally address the Matrix Factorization problems with some particular inequality or e-
following user of p.
quality constraints.
We also conduct extensive experiments on real data for evaluating the proposed approach.
The experimental results clearly show that the approach outperforms the baselines in terms of both the ability of reducing the sparseness of behavior pattern space and the e ective-ness of discovering similar users with respect to their habits.
The remainder of the paper is organized as follows.
In Section 2, we brie y introduce some preliminaries and outline the general framework of our approach.
Section 3 introduces how we normalize raw context logs by transforming location-based context data and raw interaction records.
Followed in Section 4, we present the details of how we take advantage of Matrix Factorization technology for extracting hyper behavior patterns.
Next, we report and analyze the experimental results in Section 5 and brie y discuss some related work in Section 6.
Finally, we conclude this paper in Section 7 and look forward the direction of future work.
The problem of behavior pattern mining was proposed by Cao et al. [3] for mining the habits of mobile users from their context logs which record their historical context data and interaction records.
Table 1 shows a toy context log which contains several context records.
Each context record consists of a timestamp, the most detailed available context at that time, and a corresponding user interaction record.
We mention  available  because a context record may miss some context data though the context data to be collected are usually prede ned.
For example, the GPS coordinate is not available when the user stays indoors.
Moreover, interaction records can be empty (denoted as  Null ) because user interactions do not always happen.
According to [3], the associations between user contexts and the user interactions with mobile devices are regarded as behavior patterns if both their supports and con dences are bigger than the prede ned thresholds.
Compared with the traditional association rule mining, behavior pattern mining can address the unbalanced occurrences of context data and user interaction records well due to its di erent way of calculating the supports of contexts.
To be speci c, in behavior pattern mining the support of a context is counted by taking into account how many times it continuously appears in several adjacent context records, which constitute a context range of the context.
For a context range which contains nonempty interaction records, the number of nonempty interaction records is regarded as the support of the corresponding context in this context range.
Otherwise, for a context range which only contains empty interaction records, the support of the corresponding context is regarded as one in this context range.
Finally, the support of the cor-in each of its context ranges.
Take the context log in Table 1 for example, let s consider the context  {(Is a holiday?
: No),(Time range: AM8:00-9:00 )} .
Though it appears in seven context records, its support is not seven but three because it has three context ranges, i.e., (t1, t2, t3), (t38, t39), and (t58, t59), respectively, and each context range has at most one nonempty interaction record.
For more details of behavior pattern mining, please refer to [3].
tern Space Intuitively, to  nd similar users by leveraging behavior patterns, we can  rst build behavior pattern vectors for users by considering their behavior patterns and the corresponding con dences.
Then we can calculate the similarity between any two users by calculating the distance between their behavior pattern vectors.
However, this naive approach does not work in practice because we observe that the behavior pattern space for crowd users is usually extremely sparse (e.g., Figure 1 in Section 1 illustrates the sparseness of the mined behavior patterns from a real data set), which makes it di cult to  nd similar users by leveraging behavior patterns.
We observe that this phenomenon is majorally caused by two problems as follows.
The  rst problem is that in raw context logs the location-based context data and user interaction records are too spe-ci c to re ect the common points among di erent users  behavior patterns.
For example, given two behavior patterns mined from two di erent users  context logs  {(Is a holiday?
: No),(Time range: PM8:00-9:00 ),(Cell ID: 2341-2344 )}  Playing Angry Birds and  {(Is a holiday?
: No),(Time range: PM8:00-9:00 ),(Cell ID: 25001-8344 )}  Playing Fruit Ninja , at the  rst glance they are di erent.
However, if we have known {(Cell ID: 2344-2341 )} and  {(Cell ID: 25001-8344 )}  indicate the homes of the  rst and second users, it may be not reasonable to regard the two behavior patterns totally di erent.
Moreover, if we further know that both  Fruit Ninja  and  Angry Birds  are popular action games with similar features (e.g., cartoon  gures and touch based operations), it is reasonable to assume that the two users have very similar habits.
The second problem is that there exist many behavior patterns which have di erent representations but indirect relationships.
For example, given two behavior patterns mined from two di erent users  context logs  {(Is a holiday?
: No),(Time range: PM8:00-9:00 ),(Cell ID: 2341-2344 )}  Playing Angry Birds and  {(Is a holiday?
: No),(Time range: PM7:00-8:00 ),(Cell ID: 2341-2344 )}  Playing Angry Birds , their contexts seem similar since both  (Time range: PM8:00-9:00 ) and  (Time range: PM7:00-8:00 ) imply evenings.
If we can capture the latent common points between such behavior patterns, this problem may be addressed.
Motivated by above observations, we propose a novel approach for addressing the sparseness of behavior pattern space which includes two stages as follows.
In the  rst stage, we normalize the raw context log of individual users.
To be speci c, we  rstly transform location-based raw context data to social locations such as  Home  and  Work Place .
Then we transform raw user interaction records to interaction categories such as  Email ,  Action Games  and  Social Network Services .
Thus, we e ectively address the  rst problem listed above.
In the second stage, we take advan-Normalize Context Logs Cell ID: 2341-2344 Context Logs App: Playing Angry Birds ...
Home ...
... Action games Mine Behavior Patterns {(Is a holiday?
: NO), (Time range: PM 8:00-9:00), (Location: Home)}  Action games (Confidence=0.8) ...
Extract Hyper Behavior Patterns +
 * =

 Noise User Distributions on Hyper Behavior Patterns Behavior Pattern Vector Hyper Behavior Pattern Figure 2: The framework of our approach.
tage of the Matrix Factorization technology for extracting the latent habits re ected by multiple unique behavior patterns, which are referred to as hyper behavior patterns, and represent each user as a mixture of hyper behavior patterns.
Since the space of hyper behavior patterns is much more dense than the original behavior pattern space, it is easier to calculate the similarity between di erent users with respect to their habits in the new space.
Figure 2 illustrates the overview of our approach.
More details of the two stages are presented in the following sections.
In raw context logs, the location-based context data include the cell IDs which indicate the IDs of serving sell-cites and the geo-coordinates captured by GPS sensors.
Among these data, geo-coordinates do not appear in each context record because the GPS signal is not available when the user stays indoors and the GPS positioning module may be disabled in order to save the battery life.
As mentioned before, the behavior patterns which contain these data are too particular to be used for comparing di erent users  habits because di erent location-based raw context data may have the same social meaning such as  Home  and  Work Place .
If we can transform the location-based context data in raw context logs to social locations, we may be able to improve the comparability of the mined behavior patterns for di er-ent users.
Along this line, we need to de ne a list of social locations to be transformed.
Ideally, it is desirable to de ne a social location list as comprehensively as possible to cover all social locations appearing in context logs.
However in reality, it is di cult to accurately recognize all social locations of mobile users from their location-based context data.
It is because the geo-coordinates are usually not available and we can only take advantage of cell IDs which are very imprecise for positioning.
Moreover, even geo-coordinates are not always precise enough to indicate a social location.
For instance, suppose that a geo-coordinate (longitude=x, lati-tude=y) indicates a position which is both near to a  Pub  and a  Hotel , it is di cult to decide which is the real social location of the user.
To this end, an alternative approach is by only cell IDs for most users and omitting others.
To be speci c, we can transform cell IDs into  Home ,  Work Place  and  Others  by taking advantage of the users  cell ID trajectories which consist of cell IDs ordered in timestamps and can be easily extracted from raw context logs.
Mining social locations from cell ID trajectories has been well studied by many researchers (e.g., [23, 13]).
In this paper, we use a commonly used approach proposed by Yang [23].
The basic idea of the approach is as follows.
First, it tries to discover the closure patterns whose the  rst and the last cell ID are duplicated while the number of unique cell IDs is less than a prede ned threshold.
Second, it iteratively merges discovered closure patterns which have common cell IDs.
Third, each  nal closure pattern is regarded as a meaningful social location under time pattern analysis.
Specially, for each closure pattern, we draw its normalized time histogram as illustrated by Figure 3.
For a closure pattern P , the time (cid:2) c P f reqc,ti ratio in time range ti is calculated as c P f reqc,t , where f reqc,t denotes the frequency of cell ID c appearing in the time range t. If the time ratio of P between AM8:00-PM6:00 is larger than a prede ned threshold  , it is regarded as a candidate for  Work Place .
Otherwise, if the time ratio of P in other time ranges is bigger than a prede ned threshold  , it is regarded as a candidate for  Home .
Finally, in all candidates for  Work Place  the closure pattern with the maximum total frequency is regarded as the  nal  Work Place .
The selection of  nal  Home  is performed in a similar way.
(cid:2) (cid:2) t



 o i t a
 e m
 i






 Time (Hours) Figure 3: The normalized time histogram of an exemplary cell ID closure pattern.
After normalizing the location-based contexts, we can further normalize user interaction records for extracting the common points of di erent users  activities.
To be specific, we de ne a set of interaction categories which are more general to re ect user activities and classify each unique interaction record into a interaction category.
Though we can manually label the interaction records for a small data set, it may be expensive for manually classifying interaction records for large scale data sets in practice.
Therefore, we take advantage of a Web knowledge based automatic approach for classifying interaction records which is introduced in [4].
Firstly, we manually select some typical interaction records for each interaction category as category seeds.
Then, we take advantage of search engines to obtain top 10 search results for each category seed and extract their snippets as textual descriptions of the corresponding category seeds.
Thirdly, we remove all stop words such as  of ,  the  from the extracted snippets and build a normal-f reqi,c   tc = dim[n] for each interaction category (cid:2) i f reqi,c (1   i   n) and f reqi,c indicates ized term vector c, where dim[i] = the frequency of the i-th term in the snippets of interaction category c. Finally, for each new interaction record I, we   take advantage of search engines for building its normalized   tI in a similar way and calculate the cosine dis-term vector tc , and then I will be transformed tances between   to c   tI and all = arg minc Distance( where c     tI ,   tc ).
Though we can reduce the sparseness of behavior patterns by normalizing raw context logs, the total number of behavior patterns for all users is still usually too big compared with the average number of behavior patterns for individual users.
For example, in our experimental results, the total number of behavior patterns for all users is 45,230 while the average number of behavior patterns for each user is 308.
As a result, the behavior pattern space is still too sparse to be used for comparing di erent users  habits.
As mentioned in Section 2.2, we may be able to extract some latent and common habits among users from behavior patterns and exploit them for further addressing the sparseness of behavior pattern space.
Along this line, we propose to extract mixtures of behavior patterns, which is referred to as hyper behavior patterns, for representing these common habits and then using vectors of hyper behavior patterns for representing users  habits.
In other words, we try to map users from the behavior pattern space into the hyper behavior pattern space which is much more dense.
If we use a P   N matrix X = {xij} to represent users in the behavior pattern space where xij indicates the con dence of behavior pattern pi for user uj, N and P indicate the total numbers of users and behavior patterns, respectively, the problem can be formally de ned as the following Matrix Factorization problem:
 where W = {wik} denotes a P   D matrix which represents D hyper behavior patterns by D mixtures of behavior patterns, H = {hkj} denotes a D   N matrix which represents N users  habits by N mixtures of hyper behavior patterns, and  denotes the residual noise.
The task is  nding proper W , H, and  given X.
Moreover, we still have three additional constraints for possible solutions as follows: Constraint 1: All elements in W should be in [0, 1].
It is because each column in W represents a hyper behavior pattern by a mixture of original behavior patterns and the element wik indicates the correlation index between the k-th hyper behavior pattern and the i-th behavior pattern.
Constraint 2: All elements in H should be in [0, 1].
It is because each column in H represents a user s habit by a mixture of hyper behavior patterns and the element hkj indicates the correlation index between the k-th hyper behavior pattern and the j-th user.
Constraint 3: Finally, we require  j [1,N ] k=1 hkj = 1 for obtaining normalized vectors of hyper behavior patterns for users, which eases the following similarity calculation.
(cid:2)D Bayesian Matrix Factorization model [17] which can perform matrix factorization with multiple inequality constraints and equality constraints.
In Bayesian Matrix Factorization models, the objective is not to  nd single solutions for W and H. Instead, we aim to use the model for inferring their posterior probabilistic distributions under a set of model assumptions.
These assumptions are speci ed by the likelihood function p(X|W, H, ), which expresses the probability of the observed data matrix X given the parameters of the model, i.e., the factorizing matrices W , H and the noise variance , and the prior p(W, H) and p(), which describe available knowledge of the model before observing the data matrix.
In order to keep the formulation general while allowing e cient inference based on Gibbs sampling, we choose an i.i.d.
zero mean Gaussian noise model as follows: p(ij) = N (ij|0,  ij) =
 2 ij exp(  2 ij 2 ij ), (1) where we assume that there is just one overall variance for each matrix element.
This noise model leads to the conditional probability of X given the parameters of the model as follows: N(cid:3) P(cid:3) N (xij| D(cid:4) exp(  (xij  (cid:2)D k=1 j=1 i=1 p(X|W, H,{ ij}) = P(cid:3) N(cid:3) = i=1 j=1
 2 ij wikhkj,  ij) k=1 wikhkj)2 2 ij ) (2) For the variance parameters, we choose conjugate inverse-gamma priors, p( ij) =IG ( ij| ,  ) =    ( )  ( +1) ij   exp(    ij ) (3) Before de ning the prior distributions for the factorizing matrices W and H, we specify the matrices by vectors w = vec(W T ) = [w11, w12, .
.
.
, wP D]T and h = vec(H) = [h11, h21, .
.
.
, hDN ]T , a Gaussian prior over w and h is chosen subject to inequality constraints Q and equality constraints R as follows: p(w, h)   (cid:10) (cid:11)     ,if Q(w, h)   0,R(w, h) = 0,     w h
 (cid:11) (cid:15) , (cid:10) (cid:12) (cid:11) (cid:15)  w  wh
 wh  h (cid:13)(cid:14)
 (cid:10) (cid:12) |  w  h (cid:13)(cid:14)      
 otherwise, (4)


 NR are bia ne maps, which de ne NQ inequality where the constraints Q : R

 constraints, i.e.,  i [1,P ],k [1,D]1   wik   0,  k [1,D],j [1,N ]hkj  
 Obviously, we have NQ = 2P D + DN and NR = N .
The m-th(1   m   NQ) inequality constraint can be
 hkj = 1.
D(cid:2) k=1 Along this line, the NQ inequality constraints can be de- ned in matrix form by rearranging terms as follows:

 (cid:12) [q(w) + Q(wh)
 w  
 h] (cid:15) h, .
.
.
,q (w)
 (cid:13)(cid:14)  Qw     (cid:12)  q1   hT q(h)
  qNQ .
.
.
  hT q(h) (cid:13)(cid:14)
  qw     (cid:15) (6) Therefore, the inequality constraints Q can be expressed T w   qw.
Similarly, the equality constraints R can as Qw be expressed as Rw T w = rw as well.
To get the factorizing matrices, W and H, we need to infer their posterior distributions.
After specifying the model and priors, we can write the posterior distribution of the parameters conditioned on the observed data and hyper-parameters as follows: P(cid:3) N(cid:3) p(w, h,{ ij}|X,  ,  ,  ,  , Q, R)   p(w, h)p(X|w, h,{ ij}) p( ij) (7) i=1 j=1 In practice, it is usually infeasible to obtain the exact solution of the above formula due to the big computation cost.
Thus, we use an e cient Markov chain Monte Carlo inference procedure based on Gibbs sampling [17] to approximate the posterior distributions in the following way.
Considering the noise variances  ij, the posterior density is an inverse-gamma distribution due to the choice of conjugate prior p( ij|X, w, h) = IG( ij| ,  ), (8) (9)   =   +

 ,   =   +

 wikhkj)
 , (xij   D(cid:4) k=1 from which samples can be generated using standard acceptance-rejection methods.
N (w| w,  w),if QT
 Since the sampling procedure for h is identical to that for w due to the symmetry of the model, we only give the expression for the posterior conditional density of w as follows: p(w|X, h,{ ij})   (cid:5) w (cid:6) w + (cid:6)HV w + (cid:6)HV  w = ((cid:6)   1(cid:6)H h (h h), (cid:6) w =  w wh  where(cid:6) w =  w+ wh  V = diag( 11,  12, .
.
.
,  P N ), (cid:6)H = diag(H, .
.
.
, H) is a di-,  w =  w((cid:6)  ww   qw, RT  1 h  T otherwise x), (11) (10)  1  1  1  1  1 )
 wh, ww = rw, agonal block matrix with P repetitions of H, and x = vec(X T ) = [x11, x12, .
.
.
, xP N ]T Finally, we can perform Gibbs sampling iteratively as follows: a. the noise variance is generated from the inverse-gamma density in Eq.
8; b. w is generated from the constrained Gaussian density expressed in the form as follows: in Eq.
10;
 (w) m + h m h   0, (5) Qm(w, h) = qm + w For example, the inequality constraint w11   0, can be expressed as Q1(w, h) = 0+wT [ 1, 0, .
.
.
,0] T P D 1+hT [0, 0, .
.
.
, DN 1 + wT [0, 0, .
.
.
,0] P D DN h   0

 (h) m + w (wh)
 q q

 c. h is generated from a constrained Gaussian analogous to Eq.
10.
Another important problem for extracting hyper behavior patterns is the selection of the hyper behavior pattern In the Bayesian framework, model selection can be performed by evaluating the marginal likelihood, p(X), which involves an intractable integral over the posterior and thus is usually estimated but not calculated exactly.
In this paper, we use Chib s method [6] for estimating p(X), which can be implemented directly using the described Gibbs sampler.
In this section, we conduct extensive experiments for evaluating the e ectiveness of our approach for reducing the sparseness of behavior pattern space and discovering similar mobile users with respect to their habits.
The experimental data set is collected from many volunteers by a major manufacturer of smart mobile devices.
The data set contains rich context data including time information, pro le information and cell ID trajectories, and interaction records of 443 mobile users.
The data set contains 8,852,187 context records where 1,097,189 of them contain nonempty interaction records.
Figures 4 illustrates the distribution of time lengths for each user s data.
s r e s
 f o r e b m u
















 Time Length Range (days) Figure 4: The time length distribution of the collected data for all volunteers.
In order to normalize the raw context log of each user, we  rst mine their homes and work places from their cell ID trajectories and remove the cell IDs which cannot be mapped to either  Home  or  Work Place .
The maximum number of unique cell IDs in each closure pattern is empirically set to 2 according to [23].
The time ratio thresholds of  Home  and  Work Place  are empirically set to be 0.3 and
 to interaction categories by de ning 13 interaction categories based on the taxonomy of Nokia Ovi Store (www.ovi.com) and then build term vectors for each interaction category.
For each interaction category, we manually select  ve typical interaction records from the collected data as category seeds and then leverage a search engine to enrich its textual description.
The 13 prede ned interaction categories and the corresponding category seeds as shown in Table 2.
We take advantage of the GCPM algorithm [3] to mine behavior patterns from the normalized context logs.
For each context log, the min sup is set according to the spanning time to ensure that each pattern is followed by the user at least averagely once a week.
For example, if a context log spans for three weeks, the min sup is set to be three.
The min conf is uniformly set to be 0.6.
Table 2: The interaction categories prede ned in our experiments.
Interaction Categories Category Seeds Message Call Mail Web Service Multimedia Utility Navigation System Reference
 Game Management Business Msg.
reader, AgileMessenger, ShakeSMS Animated SMS, Audio message FlipSilent, MobiGenie, TastePhone Telephone, TiViPhone Pro Mail, Z7EmailViewer, Email Google Mail, Gmail live!, Live TV, Symella SmartGuard, web DivX Player, SPODTRONIC, kyte mobbler, CorePlayer KAV Mobile, CarUIApp, Kalendarz Mobile Security Update, cClock CellPos, Mapas, GlastoNav Map24 Mobile, psdk lmsrvapp Theme DIY, Mass memory, SmartPro le MemoryUp, Device status ViewRanger, BibleReader, MyNokia Mobile Weather, ForecaWeather IM+, Lifeblog, SmsChat Online share, EQO Mobile Solytare, JewelQuest2, JbakTaskMan SuperMario, Guitar Hero III, File manager, PhoNetInfo, MessageList Handy Blacklist, Birthday Manager Truphone, SlideHelper, Team suite Spreadbet Marketmaker, Adobe Reader Table 3: A example of hyper behavior pattern.
{(Day period: Morning),(Time range: AM8:00-9:00)}   Multimedia {(Is a holiday?
: No),(Time range: AM8:00-9:00)}  Multimedia {(Day period: Morning),(Time range: AM8:00-9:00), (Pro le: General)}  Multimedia {(Pro le: General)}  Multimedia {(Is a holiday?
: No),(Day period: Morning), (Time range: AM8:00-9:00)}   Multimedia {(Day name: Thursday),(Is a holiday?
: No),(Pro le: General)}   Multimedia {(Day name: Friday),(Is a holiday?
: No),(Pro le: General)}   Multimedia {(Is a holiday?
: No),(Day period: Morning), (Time range: AM8:00-9:00),(Pro le: General)}  Multimedia {(Is a holiday?
: Yes),(Day period: Morning),(Pro le: General)}   Multimedia {(Is a holiday?
: No),(Time range: AM8:00-9:00), (Pro le: General)}  Multimedia Given the mined behavior patterns, we build the user-behavior pattern matrix and perform constraint-based Matrix Factorization on it.
The number of hyper behavior patterns is set to be 15 empirically according to the method mentioned in Section 4.
Table 3 shows an example of hyper behavior pattern mined from the normalized context logs which indicates a common habit that  users usually use multimedia applications between AM8:00-9:00 in work day mornings .
Limited by space, we just list the top 10 behavior patterns in the hyper behavior pattern.
Patterns To evaluate the e ectiveness of normalizing context logs for reducing the sparseness of behavior pattern space, we  rst compare the sparseness of behavior pattern spaces for raw context logs and normalized context logs.
Figure 5 shows the distributions of behavior patterns with respect to the number of their following users for raw context logs and normalized context logs, respectively.
To observe the di er-i=1 ni Np ence of the distributions more clearly, we mark the average number of users (Avg.
Num.
of Follow.
Users) who follow , where Np one same pattern, which is calculated by indicates the total number of unique behavior patterns, and ni indicates the number of users who follow the i-th pattern.
From these  gures, we can see that the space of the behavior patterns mined from normalized context logs is much more dense than that of the behavior patterns mined from raw context logs.
To be speci c, in the space of behavior patterns mined from raw context logs, the average number of users who follow one same pattern is 1.13 and at most 13 users follow one same pattern.
In contrast, after normalizing context logs, the average number of users who follow one same pattern becomes 3 and there are at most 47 users who follow one same pattern.
s n r e t t a
 r o i v a h e
 f o r e b m u



 Avg.
Num.
of Follow.
Users number of following users = 1




 s n r e t t a
 r o i v a h e
 f o r e b m u
 Avg.
Num.
of Follow.
Users number of following users = 1


 Number of Following Users




 Number of Following Users


 (a) (b) Figure 5: The distributions of behavior patterns with respect to the number of their following users for (a) raw context logs and (b) normalized context logs.
However, as mentioned in Section 2.2, the space of behavior patterns mined from normalized context logs is still too sparse to be directly used for discovering similar users with respect to their habits, we further take advantage of the Matrix Factorization technology for extracting hyper behavior patterns which are in an extremely low dimension space.
One may argue for an alternative approach which directly perform Matrix Factorization on the behavior patterns mined from raw context logs.
Although this approach can also signi cantly deal with the sparseness problem, some important information about the similarity of user habits will be missed due to the too speci c raw context data and therefore the performance for discovering similar users with respect to their habits may be a ected.
Actually, the experimental results in the following section demonstrate the concern.
Therefore, normalizing context logs is useful not only in terms of reducing the sparseness of behavior pattern space, but also in terms of capturing more information about the similarity with respect to user habits.
with Respect to Their Habits To evaluate the e ectiveness of our approach for discovering similar users with respect to their habits, we randomly select several groups of test users and each group contains several users.
For each test user, our approach and baselines  nd the top K similar users with respect to their habits.
The results are evaluated manually because there is no ground truth for the experimental data.
Due to the expensiveness of manual evaluation, the scale of the experiments is limited.
Specially, we randomly select two user groups where each group contains 10 users for our approach and three baselines while the maximum K is set to be 5, which means we label 400 pairs of users by considering their behavior patterns mined from their normalized context logs.
The details of the selected baselines, metrics and experimental results are presented in the following sections.
Since the problem of leveraging behavior patterns for discovering similar users with respect to their habits is under-explored, it is di cult to directly  nd existing works as baselines.
Alternatively, we extend Cao et al. [3] s work as one baseline.
Moreover, in this study, to address the sparseness of behavior pattern space, our approach includes two major stages, namely, normalizing context logs and extracting hyper behavior patterns.
To separately evaluate the contribution of each stage for discovering similar users with respect to their habits, we design two other baselines which only take advantage of one stage for improving the ability of discovering similar users with respect to their habits.
Finally, the baselines used in our experiments are as follows.
R-BP: Mine behavior patterns from raw context logs and then calculate the similarity with respect to user habits by the cosine distance between the behavior pattern vectors of users.
It is extended from [3].
N-BP: Mine behavior patterns from normalized context logs and then calculate the similarity of user habits by the cosine distance between the behavior pattern vectors of users.
R-BP+CMF: Mine behavior patterns from raw context logs and extract hyper behavior patterns through constraint-based Matrix Factorization, then calculate the similarity of user habits by the cosine distance between the hyper behavior pattern vectors of users.
For simplicity, we denote our approach as N-BP+CMF which stands for mining Behavior Patterns from Normalized context logs and extract hyper behavior patterns through Constraint based Matrix Factorization.
Since there is no ground truth for evaluation, for each test user, we invite 10 college volunteers to manually evaluate the experimental results of similar users with respect to their habits.
All of them are graduate students major in Computer Science.
The judges are provided the behavior patterns of both the given user and candidate similar users to regard the real similarity from their perspective.
These behavior patterns are mined from normalized context logs and organized by interaction categories for clarity.
For each interaction category, the top 20 behavior patterns with highest con dence are selected.
For each test result, the judgers can give a score from zero to two, where zero means completely dissimilar, one means some habits are similar and two indicates a high similarity for all habits.
To avoid bias, the test results from di erent approaches are mixed and each test result is judged by at least three judgers.
The problem of discovering similar users with respect to their habits can be regarded as ranking users in order of their habit similarity.
Therefore, we can borrow some classical metrics used in the  eld of information retrieval though the latter focuses on ranking relevant documents but not similar experiments.
K(cid:2) IDCG@K , where DCG@K = Precision at K(P@K) indicates the ratio of the returned users that are labeled as partly similar or very similar in the top K results of a ranked list.
Normalized Discounted Cumulative Gain(nDCG) is devised speci cally for web search evaluation[10].
For a given user, the ranked K candidate similar users are examined from the top to down.
nDCG@K is computed by (2r(j) 1)/log2 nDCG@K = DCG@K (1 + j), r(j) indicates a similarity score from zero to two, N(cid:2) and IDCG@K is the DCG@K value of ideal ranking list of the returned result.
Mean Average Precision (MAP) is computed by 1|N| (cid:2)K r=1(Pi(r) reli(r)) , where N indicates the number of test users and |Ri| indicates the number of found similar users for the test user Ui.
r denotes a given cut-o  rank, Pi(r) denotes the precision of Ui at a given cut-o  rank r where both partly similar users and totally similar users are regarded correct, and reli(r) is the binary function on the correctness of a given rank r.
|Ri| j=1 i=1
 The comparison results between our approach and the baselines for the two groups of test users in terms of Precision, nDCG and MAP are reported in Figure 6, Figure 7, and Figure 8, respectively.
From these  gures, we can see that N-BP+CMF consistently outperforms R-BP+CMF while N-BP consistently outperforms R-BP in terms of all metrics, which implies that normalizing raw context logs can improve the performance of behavior pattern based similar user discovery.
Moreover, we can also see that N-BP+CMF consistently outperforms N-BP in terms of all metrics, which implies that extracting hyper behavior patterns can improve the performance of behavior pattern based similar user discovery as well.
n o i s i c e r







 n o i s i c e r
















 (a)The  rst group of test users (b) The second group of test users Figure 6: Precision at varying K.
spect to Their Habits Except for directly evaluating the proposed approach for discovering similar users, we also study its e ectiveness of segmenting users with respect to their habits.
To be specific, we cluster the users according to their similarities which are calculated by the cosine distances between their hyper behavior pattern vectors and behavior patterns, respectively, and compare their performance.
Both the hyper behavior patterns and behavior patterns are extracted from












 n








 n















 (a)The  rst group of test users (b) The second group of test users Figure 7: nDCG at varying K.
(a)The  rst group of test users (b) The second group of test users Figure 8: MAP at varying K.
normalized context logs.
We utilize a clustering algorithm proposed in [5] which does not require a parameter to indicate the number of clusters but only needs a parameter to indicate the minimum average mutual similarity Smin for the data points in each cluster.
The average mutual similarity for a user cluster C is calculated as SC = 2 (cid:2)
 Sim(ui,uj )
 , where NC indicates the number of users in C and Sim(ui, uj) denotes the similarity between the i-th user and the j-th user in C.
For the clusters based hyper behavior pattern vectors, Smin is empirically set to be 0.9.
However, for the clusters based on behavior patterns, it is di cult to select a proper Smin because there exist rare pairs of users whose similarities are relatively big when the similarity is calculated based on the sparse behavior pattern space.
Through several trials, we determine Smin = 0.3 for those clusters because in this case the results look relatively good.
In order to intuitively compare the segmentation results, we exploit Principal Component Analysis (PCA) to map the 443 users represented by high dimensional behavior pattern vectors to the space of top two principal components.
Figure 9(a) and (b) show the segmentation results of 443 mobile users by utilizing hyper behavior patterns and behavior patterns, respectively.
In these  gures each color denotes a cluster of users with respect to their habits and the outliers are removed for the clarity.
From the two  gures we can see that the segmentation results based on hyper behavior patterns look better because the clusters are more balanced in size.
Moreover, the segmentation results based on hyper behavior patterns only have 14 outliers while the other results have 84 outliers, which further implies that hyper behavior patterns are more e ective for measuring the similarity between users with respect to their habits.
We also study each cluster of users based on hyper behavior patterns and  nd all of them have obvious relevance to particular hyper behavior patterns.
For example, Figure 10 (a) and (b) show the values of each hyper behavior pattern dimension for the users in two randomly selected clusters n e n o p m o c l a p i c n i r p d n



  5  30


  5 t n e n o p m o c l a p i c n i r p d n
  10  30  25  25  5
  5
  20 1st principal component  15  10 (a) N-BP+CMF  20 1st principal component  15  10 (b) N-BP Figure 9: The segmentation results of mobile users by utilizing (a) hyper behavior patterns (N-BP+CMF) and (b) behavior patterns (N-BP).
Ca and Cb with box plots.
From these  gures we can clearly see that the users in the two clusters dramatically have high values in particular hyper behavior pattern dimensions, which imply they follow the corresponding hyper behavior patterns.
To be speci c, the users in Ca seem to follow the 14-th hyper behavior pattern which indicates a common habit that  the users usually call others in afternoons while the pro le is set to be General , and the users in Cb seem to follow the 11-th hyper behavior pattern which indicates a common habit that  the users usually send emails on work days while the pro le is set to be Meeting .
s e u l a






 s e u l a



 Hyper Behavior Pattern ID
 Hyper Behavior Pattern ID (a) (b) Figure 10: The values of each hyper behavior pattern dimension for the users in (a) Ca and (b) Cb with box plots

 The main idea of habit based user similarity measurement is to calculate the user similarity by mining and comparing user habits.
Along this line, many previous studies take into account user pro les or online user behaviors in Web communities for understanding user habits.
For example, Hopfgartner et al.[9] exploited implicit user interaction to capture long-term user habits in a pro le that was used to retrieve and recommend news stories to the users.
Mobash-er et al. [16] presented two techniques, based on clustering of user transactions and clustering of page views, to discover overlapping aggregate pro les for describing user habits.
Zhou et al. [27] and Wu et al. [21] modeled user habits as latent variables and extracted them from online behaviors through the probability mixture model.
However, as pointed out by [24], the interests in the virtual world may be not capable of capturing the  real  characteristics of user behaviors.
With the increasing popularity of smart mobile devices and their more and more powerful ability of sensing user contexts, richer contextual information and activity information of users can be logged for mining user habits, which provides a more e ective way of capturing the  real  characteristics of user behaviors.
Previous studies on mining mobile user habits can be roughly classi ed into two categories as follows.
The  rst category only leverages location-based context In some of these works, user simi-and time information.
larity is de ned based on the geographic features of mobile users  trajectories.
For example, in [14] and [26], both the sequence property of people s movement behaviors and the hierarchy property of geography spaces were taken into account for consistently modeling each individual s location and e ectively measuring the similarity among users.
Lu et al. [15] proposed a LBS-Alignment method to calculate the similarity of two mobile users by using the longest common sequence within their mobile sequential patterns.
In other works, the semantic information of locations is considered in measuring the similarity between di erent users.
The common point of these works is modeling users  trajectories with semantic location histories, e.g., shopping malls   restaurants   cinemas.
However, they are di erent in de n-ing the similarity measurement of semantic trajectories.
For example, Xiao et al.[22] presented a maximal travel math (MTM) algorithm for measuring the similarity of semantic location history.
Ying et al.[24] proposed Maximal Semantic Trajectory Pattern Similarity(MSTP-Similarity) to measure the semantic similarity between trajectories.
The second category includes some recent works which consider rich contextual information including user interactions.
For example, Tseng et al. [18, 19, 20] studied the problem of discovering user habits by considering both location information and service requests in mobile web environments.
However, these works do not take into account other context information such as transportation status and phone pro le, which are useful for mining user habits as well.
Karatzoglou et al.[11] proposed multiverse recommendation based on the Tucker tensor factorization model that allows for a  exible and generic integration of contextual information.
However, this model is not scalable well since its complexity is exponential for the number of context variables and polynomial for the size of factorizations.
Additionally, it only works for categorical context variables and is sensitive to noisy data.
To e ectively exploit the rich contextual information and user interactions, Cao et al.[3] proposed to mine associations between interactions and contexts, i.e., behavior patterns, from context logs of mobile users for representing user habits.
However, leveraging mined behavior patterns for discovering similar users remains under-exploited due motivates our work represented in this paper.
In this paper, we proposed a two-stage approach for addressing the sparseness of behavior pattern space and thus made possible to leverage behavior patterns for discover similar mobile users with respect to their habits.
Speci cally, we  rst normalized the raw context logs by transforming location-based context data to social locations and transforming raw interaction records to interaction categories.
Secondly, we took advantage of a constraint-based Matrix Factorization model for extracting hyper behavior patterns from the behavior patterns mined from normalized context logs and represented user habits by vectors of hyper behavior patterns.
The experiments conducted on real data sets show that our approach outperforms three baselines in terms of the e ectiveness of discovering similar mobile users with respect to their habits.
As mentioned above, discovering similar users with respect to their habits plays an important role in a wide range of real applications.
In this paper, we preliminarily investigate the performance of the proposed approach for user segmentation.
As for future work, we plan to study how well the novel approach will improve more relevant applications such as collaborative  ltering for recommendation.
The work described in this paper was supported by grants from Natural Science Foundation of China (Grant No.
60775037), the Key Program of National Natural Science Foundation of China (Grant No.
60933013), the National Major Special Science & Technology Projects (Grant No.
2011ZX04016-
er Education of China (20093402110017, 20113402110024), Hong Kong RGC project 621010, and Nokia Research Center GEL.
