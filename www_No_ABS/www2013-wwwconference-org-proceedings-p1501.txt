As electronic commerce becomes increasingly popular, large amounts of available information for products are  ooding the Web.
To avoid customers inundated with choices, nowadays recommender systems take a central role by selecting the potential enjoyed products and  ltering out uninterested ones.
Through taking personalized recommendations for   corresponding author Copyright is held by the International World Wide Web Conference Committee (IW3C2).
IW3C2 reserves the right to provide a hyperlink to the author s site if the Material is used in electronic media.
products, some famous online shopping websites such as Amazon and Net ix have expanded their marketing successfully [7, 15].
Most of these commercial systems are based on Collaborative Filtering(CF), which is an e ective recommendation approach with fundamental assumption that two users have similar tastes on one item if they have rated other items similarly [29, 24].
Due to the collaboration e ects, CF only relies on users  history behaviors without collecting content information for all users and items.
Another bene t of CF is that unexpected products could be recommended to users by mining user-product interactions.
Those products are di cult to be discovered by merely analyzing the contents.
Although CF approaches have superior characteristics and have been applied to many real-world systems, there still exist drawbacks which limit their performance.
On the one hand, traditional CF considers collaboration e ects among users but ignores the variety across di erent domains. Generally, customers have similar tastes in one domain could not infer that they have similar tastes in other domains.
An impressive example is involving Epinions1, which is one of the largest product review websites with several less-correlated domains such as  Movies ,  Music ,  Home & Garden , and so on.
On the site, two users who love movies of the same type are probably to have totally di er-ent preference in  Home & Garden  domain.
In this sense, users show heterogenous features across multiple domains.
As a consequence, training domain-speci c recommendation model is more reasonable than training a model on the entire user-item matrix.
On the other hand, recommender systems in practice have to face a main challenge of data sparsity.
Typically, there are usually thousands of products on e-commerce websites but most of them are long-tailed.
In this case, recommendation based on CF methods is inclined to suggest well-known products rather than those cold ones [19].
Hence, it is quite di cult to predict user preference accurately from the whole item set.
To alleviate this problem, an intuitive scheme is to take users  interested topic into account.
Considering a scenario that if a user s attitude toward domains is captured  rst, one who expresses great interest in  Music  would probably receive a recommendation list with more music-related products than popular products in other domains.
Compared to prediction in the whole item set, a user s preferred long-tailed items are more likely to be dug out via prediction in the interested domains.
1http://www.epinions.com
 is absent in most existing consumer review sites.
One straightforward solution is to count how many times a user purchased or clicked products in one domain, then whether the user is interested in a domain or not would be inferred by her statistical history reviews.
However, users without interest interactions but with social relations in the domain might probably be ignored.
Also, since the distribution of review number over users is quite imbalanced, it is unclear how to de ne a uni ed criterion to partition users into di er-ent domains.
Instead, we change our perspective to mining interpretable topics for communities.
The process is equivalent to  nding user clusters meanwhile align them into the prede ned domains, and therefore can be viewed as community topic mining.
With all the concerns aforementioned, we develop a novel recommendation framework integrating community topic mining with domain-speci c recommendation, which is called TopRec for short.
As we known, social community detection itself is a very important research task with great challenges in data mining [4, 30].
The crucial di erence is, in our TopRec framework, we not only focus on community detection algorithm, but also investigate:(1) how to align these extracted user communities without explicit topic to the known domains, and (2) how to take advantage of the natural social network structure to assist user clustering.
To the best of our knowledge, these issues have not been studied in recommender systems before.
To address above two issues, we propose a uni ed probabilistic topic model in the context of social network in this paper, by combining semi-supervised methods of user-guided and structure-constrained clustering.
Then the accuracy of the top-n recommendation task can be improved by domain-speci c CF algorithm.
The main contributions of this work are summarized below:   Proposing a novel recommendation framework, TopRec, for multi-category datasets with trust connections to deal with the limitations of conventional CF methods.
  Introducing user guidance as a sort of prior knowledge in the probabilistic topic model to detect communities and align them with existing domains at the same time.
  Embedding social links as complementary data resource in the probabilistic topic model to satisfy connectivity coherency.
  Employing domain-speci c CF approach to formulate heterogenous latent features corresponding to the interested domains for user.
The rest of the paper is organized as follows.
A new recommendation framework, TopRec, is introduced in Section
 ing is described in Section 3 and a domain-speci c CF model for recommendation is presented in Section 4.
Then we analyze experimental results on benchmark datasets in Section
 conclude this work in Section 7.
Domain1 Domain2 Domain3 (cid:24)(cid:19)(cid:8) (cid:24)(cid:24)(cid:19)(cid:19)(cid:19)(cid:8)(cid:8) (cid:24)(cid:19)(cid:8) (cid:24)(cid:24)(cid:24)(cid:19)(cid:19)(cid:8)(cid:8) (cid:24)(cid:19)(cid:8) (cid:24)(cid:24)(cid:19)(cid:19)(cid:19)(cid:8)(cid:8) (cid:24)(cid:19)(cid:8) (cid:24)(cid:24)(cid:24)(cid:19)(cid:19)(cid:8)(cid:8) (cid:24)(cid:19)(cid:8) (cid:24)(cid:24)(cid:19)(cid:19)(cid:19)(cid:8)(cid:8) (cid:24)(cid:19)(cid:8) (cid:24)(cid:24)(cid:24)(cid:24)(cid:19)(cid:19)(cid:8)(cid:8) (cid:24)(cid:19)(cid:8) (cid:24)(cid:24)(cid:24)(cid:19)(cid:19)(cid:19)(cid:19)(cid:8)(cid:8)(cid:8) (cid:24)(cid:19)(cid:8) (cid:24)(cid:24)(cid:24)(cid:19)(cid:19)(cid:8)(cid:8) (cid:24)(cid:19)(cid:8) (cid:24)(cid:24)(cid:24)(cid:19)(cid:19)(cid:19)(cid:19)(cid:8)(cid:8) (cid:24)(cid:19)(cid:8) (cid:24)(cid:24)(cid:24)(cid:24)(cid:19)(cid:19)(cid:8)(cid:8) item user social link interest Figure 1: A simple illustration of interest interactions and social network within domains.
The larger nodes represent experts in domains.
There are three types of data in our framework: the review records and the social network for all users, as well as the category information for all items.
Without loss of generality, Figure 1 depicts a typical topology of a heterogeneous graph containing both interest interactions and social network.
The essential of our goal is to construct domains by the given data and community topic mining, then conduct domain-speci c recommendation, which consists of following two stages: Stage 1: Community Topic Mining.
In this study, we tackle this step with probabilistic topic model for three main considerations.
First, individuals in real life are usually multifaceted.
As their interests cannot be captured by one topic, discrete mixed membership models like Probabilistic Latent Semantic Analysis(PLSA) [10] and Latent Dirichlet Allocation(LDA) [1], which can represent objects as distribution over topics, are suitable in our scenario.
Second, in consumer review sites such as Epinions, we can always  nd active users in each domain(the larger node in Figure 1), who can supply prior knowledge of the probabilistic model for topic alignment.
Third, probabilistic topic model allows to connect similar users in social relations to enhance community meanwhile indicates why we connect them.
Stage 2: Domain-Speci c Collaborative Filtering.
After extracting topical communities, users are divided into domains according to their interested topics.
To predict user preference, we exploit normal CF in each domain and then return a rank list according to the predicted rating scores.
In our case, the particular algorithm utilized is Probabilistic Matrix Factorization(PMF) [21], a state-of-the-art CF approach with promising recommendation results.
As a matter of fact, the TopRec is a general framework and has potential to combine other CF methods in practice.
One similar problem has been formulated in Multiclass Co-Clustering(MCoC) model recently [27], which groups users and items into topical subsets to achieve better recommendation results.
However, TopRec boosts performance by exploring interpretable domains while the topics in MCoC are implicit.
In this section, we introduce an overview of our recommendation framework, TopRec, and give the problem de nition formally.
Here we present the notations and de nitions to be used in this paper.
Suppose there are N users and M items in the given dataset, U = {u1,  , uN} denote the us-
R = (r1,  , rN )T   R N M represent rating matrix, where ri is column vector including ratings from user ui towards item set V. Note that rating vector ri can be viewed as feature representation for user ui.
Then a user ui in collection U can be denoted by a series of items {vj}M j=1.
Let T = (t1,  , tN )T   R N N denote a binary trust matrix, where ti is column vector indicating whether user ui trust others in user set U.
We also model this user-user relationship as a graph G with adjacency matrix W to encode this trust relations into community mining model.
De nition 1.
Domain.
Suppose the number of domains is K, a domain Dk is composed of item subset Vk and user subset Uk, where k = 1,  , K, then we have Nk users and Mk items in each domain.
Thus, a set of domain can be represented as D = {D1,  ,DK}.
De nition 2.
Problem De nition.
Given review matrix R, social context T and item-domain information Vk = {v1,  , vMk}, our goal is: In stage 1, discover domains Dk = {Uk,Vk} by mining Uk = {u1,  , uNk}, where k = 1,  , K.
In stage 2, for each domain Dk, we train PMF model using the observed ratings of user-item pairs (ui, vj ), where ui   Uk and vj   Vk.
Finally, by utilizing the learnt domain-speci c latent features in prediction, the personalized rank lists for users in set U towards the whole item set V are returned.
In this section, we propose a semi-supervised probabilistic topic model with expert guidance and network structure.
By modeling the generative process of user set, the model could explicitly mine their interest topics from both historical ratings and social relationships.
Probabilistic generative models such as PLSA have been widely used in many text mining tasks [10, 3, 16], and also play a signi cant role in recommendation tasks due to their ability in dealing with dyadic data [11, 26].
Following the previous works on probabilistic models, we treat user as a mixture of topics, where each topic is a multi-nomial distribution over all the items.
For instance, a distribution that assigns high probabilities to items such as  iPhone , iPad , Kindle  would suggest that the user loves  Electronics  topic.
In order to identify multiple interest topics for user, we model users in a mixture model with K topics and estimate the model parameters so that the likelihood of user collection U is maximized.
In this way, the statistical topic model could capture the co-occurences of items and encourage to group users into communities.
Intuitively, user communities grouped by basic PLSA model can represent interest topics towards item categories.
However, these extracted topics are latent variables without explicit meaning and cannot be regarded as the given categories.
Thus, simply using PLSA cannot ensure the obtained topic is well-aligned to the speci c domains.
To overcome this limitation, we introduce user guidance as a priori into the generative clustering process.
In reality, most users in consumer review sites are extremely cold.
That is, there is little useful information could guide community mining.
Fortunately, there exit a few representative and trustable users in each domain, who review and comment frequently meanwhile own a large number of trustors.
In this study, we regard these users as experts of each community and their rating distribution over items as prior knowledge for clustering.
Another problem is that the social network structure might be neglected.
Generally, people not only make interactions with online products but also have trusts relation with other users.
Thus only using rating data cannot guarantee that well-connected users are clustered in the same topical community.
Besides, more information about cold users can be analyzed from the perspective of their local trusting neighbors.
For example, one might do not have enough reviews, while has more trust relations such that mining her interest topic from social view is possible.
Accordingly, these linked structures are quite useful in community topic mining.
To model the user clustering procedure with experts guidance, we introduce a topic variable zk   {z1,  , zK} with each observation of a item vj   {v1,  , vM} is rated by a particular user ui   {u1,  , uN}.
Each topic zk is corresponding to the k-th domain.
Let c(ui, vj ) = Rij denote the rating of user ui giving item vj to express how much the user like the item.
Given a user collection U, experts-guided topic modeling is to discover topical communities meanwhile label them the known domains, and then users and items with a similar topic could be mapped into the same subgroup.
To this end, we take the rating vectors of experts as prior knowledge for each user cluster.
To make sure the e ect of the guidance, the experts are manually chosen by two criteria:   Informative.
The experts should be the persons who contribute a large quantity of reviews in one particular item category, so that their attitude can cover items in the category as more as possible.
  Reliable.
The experts would better have a great number of followers, which implies their reviews and comments are trustable to some certain extent.
Once the experts are selected, we model such prior as a Dirichlet distribution to enforce the topics to be as close as possible to the prede ned domains.
Speci cally, for each given topic zk, its probabilistic distribution over items p(vj|zk) is assumed to be a multinomial distribution, which is generated from some Dirichlet distribution.
We de ne this Dirichlet prior as zk : Dir({ kp(vj| uk) + 1}vj V ), where  k is con dence parameter of the prior distribution for topic k, and  uk   U denote expert corresponding to the topic k.
Similar to PLSA, parameters in our model are {p(vj|zk), p(zk|ui)}.
We set all the parameters as   for succinct in the following paragraph.
In general, the prior on the parameters can be presented as p(vj|zk)  kp(vj|  uk) (1) where the prior p(vj| uk) involves the rating distribution of experts over the item set V, and can be obtained by k=1 j=1 P ( )   K(cid:2) M(cid:2) p(vj| uk) = (cid:3)M c( uk, vj ) j(cid:2)=1 c( uk, vj(cid:2) ) (2) A large  k equals to high con dence on prior of topic k.
When  k = 0, the prior of p(vj|zk) boils down to a uniform
 distribution, which means that no guidance is introduced in the clustering process.
collection U is L(U) = log p(U| ) = p(vj|zk)p(zk|ui) c(ui, vj ) log N(cid:4) M(cid:4) K(cid:4) i=1 j=1 k=1 (3) We may use Bayesian estimation, so the parameter   can be estimated by maximizing Eq.
(3), which is   = arg max
 log p(U| ) (4) With the prior incorporated, Maximum A Posterior (MAP) estimator is used instead of Maximum Likelihood estimator.
That is, L(U) = log(p(U| )p( )).
Therefore,   is obtained by   = arg max
 log(p(U| )p( )) M(cid:4) { N(cid:4) i=1 j=1 c(ui, vj ) log K(cid:4) k=1 p(vj|zk)p(zk|ui) = arg max K(cid:4)
 M(cid:4) + k=1 j=1  kp(vj| uk) log p(vj|zk)}
 Furthermore, we propose to regularize the user-speci c feature space by social network during clustering process.
Given a binary trust matrix T = (t1,  , tN )T   R
 a social graph G = (U,E , T) could be constructed, where U is a set of N vertices representing users, E   U   U is a set of edges representing trust similarity between users in neighborhood, and T can be regarded as a matrix in which each row corresponds to a vector of feature values of a user.
In particular, user relationships are embodied by de ning adjacency matrix W on user graph as W (ui, ui(cid:2) ) = sim(ui, ui(cid:2) ),
 if ui(cid:2)   N (ui) or ui   N (ui(cid:2) ) otherwise.
(cid:5) (6) where N (ui) is the k-nearest neighbor of ui, and sim(ui, ui(cid:2) ) represents the trust similarity measurement.
For simplicity, we use cosine distance between vectors {ti}N i=1 here.
Though above equation, we transform the original directed trust graph T to an undirected trust similarity graph W, which is able to formulate into topic model as regularization term directly.
The essential idea of network-constrained user clustering is on the basis of one simple assumption: users who have a strong connection with each other in social network should have similar preference on topics.
Inspired by this fact, we adopt the following formulation as a constraint for topic model
 (p(zk|ui)   p(zk|ui(cid:2) )) W (ui, ui(cid:2) ) (cid:4) K(cid:4)


 (cid:3)ui,ui(cid:2)(cid:4) E k=1 (7) Therefore, our aim is to minimize Eq.(7).
Then we utilize this constraint into log-likelihood function generated by PLSA, which means to maximize J (U,G) = L(U)    R(U,G) (8) (5)
 where   is a regularization parameter which controls the in uence of smoothness on topic distribution over network.
Combining above two parts of topic modeling, we have a joint objective function with concerning both topical consistency and connectivity coherency at the same time.
By substituting the posterior probability formula in Eq.
(5) and the regularizer in Eq.
(7) into Eq.
(8), the  nal objective function can be written as
 p(vj|zk)p(zk|ui) K(cid:4) N(cid:4) K(cid:4) i=1 j=1 c(ui, vj ) log M(cid:4) M(cid:4)  kp(vj| uk) log p(vj|zk) (cid:4) K(cid:4) k=1 j=1 + k=1    
 (cid:3)ui,ui(cid:2)(cid:4) E W (ui, ui(cid:2) ) (p(zk|ui)   p(zk|ui(cid:2) ))
 k=1 (9) For Maximum Likelihood Estimation (MLE) procedure, the Expectation Maximization (EM) algorithms is commonly used.
However, in our MAP case with the combination of regularizer, parameter estimation becomes di cult to handle by the standard EM.
Hence, we apply the Generalized Expectation Maximization algorithm (GEM) to estimate the parameter  . Parameter in nth iteration are denoted as  n.
Formally, we conduct a two-step iterative algorithm.
In E-step, given all the users  reviews data and parameter  n, the distribution of the topics can be computed simply by the same formula as PLSA p(zk|ui, vj ,  n) = (cid:3)K pn(vj|zk)pn(zk|ui) k(cid:2)=1 pn(vj|zk(cid:2) )pn(zk(cid:2)|ui) (10) In M-step, the algorithm searches better parameters through optimizing Q-function:  n+1 = arg max  Q( ;  n), which is present by N(cid:4) Q( ;  n) = J ( n) + M(cid:4) K(cid:4) i=1 K(cid:4) k=1  i( p(zk|ui)   1) (11) + j=1 k=1  k( p(vj|zk)   1) (cid:3) (cid:3) where  i and  k are Lagrange multipliers of the constraints k p(zk|ui) = 1 for all users and j p(vj|zk) = 1 for all topics, respectively.
Computation of pn(vj|zk) To optimize Eq.
(11) with respect to pn(vj|zk), we need to consider the original PLSA likelihood function and the user guidance term.
By taking partial derivative of pn(vj|zk) to Eq.
(11), its updating can be got as pn+1(vj|zk) = (cid:3)N (cid:3)M (cid:3)N i=1 c(ui, vj )p(zk|ui, vj ,  n) +  kp(vj| uk) i(cid:2)=1 c(ui(cid:2) , vj(cid:2) )p(zk|ui(cid:2) , vj(cid:2) ,  n) +  k j(cid:2)=1 (12) This formulation can be understood easily.
In addition to the data of user collection, the opinions of experts on item distribution over topics are also imposed.
Then parameter updating are decided by collaboration of the both factors, which is also consistent with our intuition.
spect to pn(zk|ui) directly is more complicated even though it is only related with the terms of data likelihood and network regularization.
Similar to [3], we take the strategy in GEM to satisfy Q( n+1)   Q( n) in each step, which  nds a better   rather than  nds a globally optimal solution.
We apply the normal updating method in standard PLSA to maximize L(U) in Eq.
(8) which can  nd a start value  1 n+1.
Then R(U,G) is increased by n+1(zk|ui) =   pt pt+1 n+1(zk|ui) + (1     ) (cid:2)N i(cid:2)=1 W (ui, ui(cid:2) )pt (cid:2)N i(cid:2)=1 W (ui, ui(cid:2) ) n+1(zk|ui(cid:2) ) M(cid:4) (13) where   is Newton step parameter to limit the e ect of smoothness by R(U,G).
We repeat this iteration until the Q-function is beginning to drop.
Also, we judge the out-n+1)   Q( n), we adopt the proposal of put  t  t n+1, otherwise, reject it.
The E-step and M-step equations are alternated until achieving some termination conditions.
In this way, we obtain the estimated parameters {p(vj|zk), p(zk|ui)}.
n+1.
If Q( t Now, to group each user into more than one topical communities, we set a natural clustering criterion as: a user ui is interested in a meaningful topic zk, if and only if function f (zk, ui) is satis ed by f (zk, ui) >  .
Thus, given a user, the function f ( ) measures attractiveness of a domain on her, which is de ned as f (zk, ui) = c(ui, vj )p(vj|zk) (14) j=1 Clearly, Eq.
(14) could be viewed as a kind of similarity measurement between users and topics.
In this section, we illustrate domain-speci c collaborative  ltering in detail.
The overall procedure consists of two steps, which are model training and top-n recommendation.
After community topic mining, the observed user-item pairs are allocated into di erent domains.
Let Rk   R Nk Mk denote the rating matrix for the k-th domain, where k =
 in each domain respectively.
Let Pk   R d Nk and Qk   d Mk denote the latent feature matrices in k-th domain,
 with column pk j represent the latent feature vectors of users and items respectively, where d denotes the dimension of latent feature.
Adopting PMF model in di erent domains, the model is trained on rating data by minimizing the square error i and qk I k ij(Rk ij   (p k i )

 k j ) q +  
 ( (cid:7)p k i (cid:7)2 + (cid:7)q k j (cid:7)2 ) i=1 j=1 (15) where I k ij indicates the training data of user-item pairs belonged to domain k, (cid:7)   (cid:7)2 denotes the Frobenius norm to make the solution more robust, and   is the regularization coe cient.
One important di erence between the PMF and our model is that we consider the training process across each domain.
Therefore, we have K objective functions in Nk(cid:4) Mk(cid:4) Nk(cid:4) Mk(cid:4) i=1 j=1

 Mk(cid:4) Nk(cid:4) i=1 Mk(cid:4) Nk(cid:4) i=1 total.
The parameters pk j in Eq.
(15) can be minimized by Alternating Least Square(ALS) method, which performs the following two updates alternatively.
i and qk First, optimizing Eq.
(15) with respect to pk i for i = 1, 2, .
.
.
, Nk in domain k and  xing all qk j leads to k p i = ( I k ijq k j (q k j )
 +  Id)  1 ( I k ijRk ij q k j ) (16) j=1 j=1 Then, optimizing with respect to qk domain k and  xing all pk i leads to j for j = 1, 2, .
.
.
, Mk in k j = ( q k k I k ijp i (p i )
 +  Id)  1 ( I k ijRk k ij p i ) (17) (cid:3)Mk (cid:3)Nk (cid:7)qk j=1 mk vj j(cid:7)2 and In order to avoid over tting on test data, we use the i (cid:7)2 weighted-regularization instead of the original regularization terms in Eq.
(15) in experiment, where mk ui denote the number of ratings of item vj and user ui in Dk, respectively.
vj and nk i=1 nk ui (cid:7)pk Since top-n recommendation is to produce a ranking list of items with high to low preference, it is necessary to predict ratings for users towards items in each domain  rst.
Corresponding to training process, we consider a two-step  ltering to recommend items in the framework of TopRec.
Given a user-item pair (ui, vj ), the  rst step is to judge whether the user ui is interested in the speci c domain Dk If she is interested in Dk, where the item vj belongs to.
the following rating prediction step is implemented using the learnt domain-speci c user and item latent feature parameters pk j .
Otherwise, we do not predict rating for the user-item pair.
In detail, the whole process can be summarized in a uni ed form i and qk  Rij = i )T qk j + rk (pk
 if ui   Dk   vj   Dk otherwise (18) (cid:5) where rk   R denotes the global o set of Dk by averaging observed ratings in the domain.
For each node, we sort the predicted rating  Rij of all the K domains with a decreasing order and then the top-n item list is eventually generated.
Basically, TopRec can  lter out lots of items for users according to their uninterested domains and then recommend items with high predicted rating score in their interested domains.
In this section, we investigate the performance of TopRec in top-n recommendation task compared to other state-of-the-art algorithms on two real-world datasets.
Also, we report the results for di erent settings of model parameters.
We examine how the TopRec behaves on two multi-domain product review datasets with trust networks: Epinions and Ciao2.
Both of them are well-known consumer opinion websites where users not only provide reviews to their familiar products but also maintain trust lists of their trusting users.
2http://www.ciao.co.uk
 Epinions Ciao



















 # of Users # of Items # of Ratings # of Trust Links # of Domains Ave Ratings per User Ave Ratings per Item Ave Trusts per User Rating Sparsity Trust Network Sparsity


 ) s r e s u # ( y t i s n e d



 degree(#interests) (a) Epinions

 ) s r e s u # ( y t i s n e d


 degree(#interests) (b) Ciao
 Figure 2: Degree distribution of Epinions and Ciao.
The version of the two datasets3 used in this study are published by the authors of [25] including data records until May 2011.
To evaluate the e ects of social network, we  rst remove users without trust relations.
For the purpose of taking each user s top-n recommendation performance into account, we also prune users with fewer than ten reviews to ensure su cient test data for each user.
Then we use eight and ten top popular categories to de ne the domains for Epinions and Ciao respectively.
The detailed statistics of the two datasets are showed in Table 1.
Compared to Ciao, Epinions owns more users and products in their most representative categories, which results in more review data and trust links.
While the scale of Epinions and Ciao are di er-ent, the sparsity of both datasets are comparable.
Based on the presented statistics, the high sparsity is fairly noticeable in user-item interaction as well as trust relation.
Especially, as we do not sift cold products from the original published datasets, the averaging rating per item is extremely small.
Figure 2 shows the degree distribution of the two dataset-s. As we can see, the datasets are very sparse and suggest power law distribution.
In experiments, we randomly pick 80% of the review data to form the training set and the rest for the test set, and run ten times in each con guration.
Because recommender systems in reality normally concerns about personalized ranking of entities but not rating prediction to all products, we analyze performance of each model by comparing the top suggestions in our experiments.
For a consistent evaluation with the top-n recommendation literature, three classical measures commonly used are employed: MAP(Mean Average Precision), F-measure, and nDCG(normalized Discounted Cumulative Gain).
For each user, given a ranked list with n items, we denote prec(j) as the precision at ranked position j, pref(j) as a binary preference indicator at position j. AP is de ned as AP(u) = (cid:2)n j=1 prec(j)   pref(j) # of preferred items (cid:2) u U AP(u)

 To compute F-measure, let precision and recall denote the user-oriented averaging precision and recall with top-n list.
2   precision   recall
 precision + recall 3http://www.public.asu.edu/ jtang20/ (19) (20) (21) To obtain nDCG, the preference indicator pref(j) is also used.
nDCG =

   n(cid:3) j=1 2pref(j) 1 log2(j + 1) (22) where IDCG is produced by a perfect ranking algorithm.
By this de nition, nDCG gives larger credit to top-ranked entities.
Higher MAP, F1 and nDCG implies better recommendation result.
Here we compare three variant methods on the basis of TopRec framework with four baseline methods to demonstrate the e ectiveness of each part of our model.
  TopRec with Single Class (TopRec-S) In this single class model, we change user clustering criteria as: a user ui is interested in topic zk if and only if  zk(cid:2) , s.t.f (zk, ui) > f (zk(cid:2) , ui).
Thus user membership hypothesis becomes that a user only interested in one topical domain.
We set the model as a comparison of users  multifaceted features assumption.
f (zk, ui) is still computed by Eq.
(14) here.
  TopRec with Multiple Class (TopRec-M) The multi-class model based on TopRec framework believes that users are interested in multiple topical domain.
Note that both of TopRec-S and TopRec-M are not added social networks.
  TopRec with Network (TopRec-Net) As to evaluate the contribution of social network, we embed network-constrained term on the basis of TopRec-M.
This model is the uni ed model described in section 3.4.
  Probabilistic Matrix Factorization (PMF) [21].
PM-F virtually is a low rank matrix factorization model and assumes that a user generates a rating for an item by adding Gaussian noise to the inner product d and qj   R Rij = (pi)T qj, where pi   R d associate with latent factor vector of user and item.
  PMF with Domains (PMF-D).
This model takes multiple domains information of items into consideration, so the PMF-D treats di erent domains independently but has N users in all domains.
  Multiclass Co-Clustering (MCoC) [27].
This method proposes a framework to extend traditional CF by dividing users and items into multiple subgroups.
Di erent with our framework, it views this allocation procedure as a Multiclass Co-Clustering problem.
Methods n=5

 n=10 n=15 n=20 nDCG MAP
 nDCG MAP
 nDCG MAP
 nDCG













 MCoC



































 TopRec-S











 TopRec-M











 TopRec-Net 0.4236 0.2386 0.2710 0.4111 0.2400 0.2235 0.3991 0.2200 0.1927 0.3896 0.2001 0.1709   Random Group Model (RANDOM) TopRec divides users into groups with sizes of {N1, .
.
.
, NK}, so we randomly sample users into K groups with the same sizes of TopRec.
The random group model is to create comparison with the process of community topic mining.
To make a fair comparison, we use PMF as the basic CF method either training on user-item domains or entire user-item matrix in all the experiments.
For PMF, the latent dimensionality of low rank features is set to be d = 10, and the regularization coe cient is set as   = 0.1.
To all the comparisons, we utilize the following experimental protocol.
We  rst notice that both of Epinions and Ciao are employed 5-star rating systems, which refers to user-item interaction are explicit.
However, we also  nd that more than 70% ratings are 4 or 5, which means the rating distribution are fairly imbalanced.
This positive ratings phenomenon also appears in many other online consumer rating datasets so that it is inevitably to train overly optimistic estimators by using the observed ratings directly.
To address this phenomenon, we adopt a bias correction procedure mentioned in [28].
That is to draw uniformly from the set of the unobserved user-item pairs for each user as pseudo-negatives to balance the original training set.
The assumption under bias correction is that the unobserved samples are less interested by users compared with observed rating data.
For the evaluation protocol, we follow the evaluation mechanism described in [28, 6].
For each user, as the total number of items is huge in the datasets, while the number of true preferred items is much smaller, it is prohibitive to take all the items as candidates and generate a total ordering of the whole item set.
Our test methodology for top-n measure is: for each user, we randomly select S additional items that are not reviewed and mix them with the test data to construct a probe set.
Thus we compute the predicted ratings over probe sets to  nd top-n products.
The size of random probes per user is set as S = 500 in experiments.
Performance on Epinions.
Table 2 shows the experimental results on the Epinions dataset with three di erent evaluation metrics: MAP, F-measure, nDCG, when we vary the number of returned items n = 5, 10, 15, 20.
For the three variants of TopRec methods, we pick con dence parameter TopRec Net TopRec M TopRec S





 @








   k Figure 3: Impact of expert guidance con dence parameter  k on MAP@5 performance of Epinions.
 k = 10000, the number of experts 3 for each domain, and the value of regularization parameter   = 100.
Then we empirically set the number of nearest neighbors as 5, the value of Newton step parameter   as 0.01.
From Table 2, TopRec-Net yields the best performance under all of the evaluation conditions.
By looking at the trend along with the number of returned list n, we can see that all of the performance drops when the returned list n is increasing.
This is mainly because that more than half of users only have less than  ve true interested items in test set.
When n becomes large, recall improves while precision declines severely.
Compare models concerned about domain-speci c CF (i.e.
TopRec variants and PMF-D)with the original PMF, it is clear to conclude that the multiple domains do bene ts on recommendation task.
TopRec, which allocates users into their interested domains by user clustering and topic mining, outperforms PMF-D, which simply assumes that users are belonged to all the domains.
By comparing the three variants of TopRec, we show that TopRec-M and TopRec-Net perform better than TopRec-S, which demonstrates the multifaceted assumption for online users.
Another phenomenon is that TopRec-Net outperforms TopRec-M consistently, which infers that network-constrained topic modeling can bring about performance improvement.
To illustrate the e ectiveness of our community topic mining stage, we compare our methods with the state-of-the-art approach MCoC.
Both of TopRec and MCoC aim to map users and items into subgroups, but we take advantage of the
 Methods n=5

 n=10 n=15 n=20 nDCG MAP
 nDCG MAP
 nDCG MAP
 nDCG













 MCoC

































 TopRec-S











 TopRec-M











 TopRec-Net 0.4025 0.1843 0.2501 0.3963 0.1766 0.1946 0.3878 0.1613 0.1641 0.3878 0.1479 0.1431 TopRec Net TopRec M TopRec S





 @







 Figure 4: Impact of expert guidance con dence parameter  k on MAP@5 performance of Ciao.
  k category relations and employ semi-supervised topic model for user clustering instead of user-item Co-Clustering.
The experimental results illustrate that our model works better than MCoC.
The reason is as follows.
MCoC conducts Co-Clustering only by ratings.
However, the user-item rating matrix we faced with is highly sparse, few observed interactions are available for MCoC model.
To compensate this, our model combines rating matrix with complementary knowledge of item categories and social networks.
At last, we show that user clustering and topic alignment are pivotal for overall recommendation performance by the comparison of TopRec and RANDOM.
Performance on Ciao.
Ciao is a smaller dataset with few ratings.
We select expert con dence parameter  k =
 parameters mentioned above are set the same as Epinions.
Experimental results on Ciao are reported in Table 3.
It is evident that TopRec-Net outperforms the other methods in almost all cases on this dataset.
Di erent from Epinion-s data, TopRec-S behaves better than MCoC and PMF-D this time.
This is because more users are interested in one domain in the dataset.
Similar to Epinions, the number of interested products for majorities is still less than  ve in test set, which leads to the performance getting worse as the recommended lists expending.
Parameter Study.
The TopRec model mainly has two important parameters.
We  rstly study the e ect of con dence parameter  k for expert guidance on Epinions and Ciao.
The con dence weight of each domain is set from 1000 to 50000.
The larger  k means the model has more con -
@









 @









 TopRec Net TopRec M TopRec S MCoC




  

 (b) Ciao TopRec Net TopRec M TopRec S MCoC




  

 (a) Epinions Figure 5: Impact of regularization parameter   on MAP@5 performance dence on experts.
In Figure 3 and 4, MAP of the top 5 list are plotted as a function of  k for Epinions and Ciao respectively.
As we increase  k, the performance in both Figure  rst increases and thereafter declines slightly.
This observation coincides with the interpretation of experts-guided topic modeling: besides user collection U, we adding a pseudo counts  kp(vj| uk) for item vj , therefore it would be better that  k is equivalent to sample size.
Yet, if we give a much higher con dence weight to experts, experimental results show that the performance would not raise any more.
From the  gures, we can see that the trends are quite similar on both of the datasets.
According to their sample size, the optimal con dence weight is  k = 10000 for Epinions, and around  k = 5000 for Ciao.
Now, we discuss the second essential parameter of TopRec,  .
Figure 5 shows how the social regularization parameter   impacts the performance of TopRec-Net.
We vary     {10, 100, 1000, 1000} where larger   enhance penalty of the disagreement of interest distribution between social neighbors.
When   is small, the uni ed model TopRec-Net behaves like TopRec-M which does not consider social link.
When   increase, the social regularization term becomes more in uential on the model and brings the network information into the community mining.
For Epinions and Ciao, the performance reaches the peaks at   = 100.
Nevertheless, if   becomes increasingly large, the social smoothness term would overwhelm the rating information which is responsible for community mining, as well as prior knowledge which is in charge of topic alignment.
As a result, the performance drops dramatically on the two datasets.
Further Probing on Topic Mining.
A key reason for the performance improvement of TopRec is to utilize semi-supervised topic model to mine meaningful topics and align 1508e r u s a e m -
e r u s a e m -
number of expert in each domain (a) Epinions number of expert in each domain (b) Ciao Figure 6: Topic mining results of TopRec-Net under expert guidance.
them with communities.
Here we would like to probe further how the topic mining works.
In our framework, community topic mining is posed as an intermediate step and resulting topical communities are used in domain-speci c recommendation.
The ultimate goal of topic mining for communities is to discover interpretable topics for each user.
Yet, it is rather di cult to get a good topical summary for community by a pure unsupervised topic model.
Hence, we resort to semi-supervised topic modeling, in which expert guidance is the critical component deciding whether the model can derive desired user clustering results.
To analyze the performance of topic mining, the greatest challenge is we do not know the true topics interested by users.
However, the topics in our model could be interpreted by item categories.
That is to say, for us ers, the categories of preferred items in test set are capable to represent their true labels.
After topic mining, a series of predicted topics are obtained for users.
Then we could evaluate mining results by combining precision and recall with respect to topics.
In Figure 6, F-measure on Epinions and Ciao of TopRec-Net is presented as a function of the number of expert.
Particularly, the number of experts for each domain is chosen from the range {1, 2, 3, 5, 10}.
In implementation, when there is more than one expert in each domain, their rating distributions over items are added into the vector c( uk, vj ) of Eq.(2).
By viewing the tendency of clustering accuracy along with the number of experts in each domain, we can see that, more expert guidance leads to better clustering results.
In this section, we review related works for recommender systems with collaborative  ltering, especially for model-based CF approaches.
CF can be classi ed into two di erent approaches: memory-based algorithms and model-based algorithms.
Memory-based CF algorithm usually search for the similar users or items to produce a prediction or top-n recommendation [22, 9].
Although memory-based approaches are easy implemented and commonly used in reality, they are normally limited by highly sparse data [24], since the similarity cannot be estimated accurately in this case.
In model-based approaches, a compact model employed machine learning and statistical techniques is trained from the known ratings.
There are many model-based algorithms proposed, such as latent factor models [11, 23], graphical models [13], clustering models [5, 8], and Bayesian model [2].One popular latent factor model is low-rank matrix factorization whose premise is that users  preferences are only in uenced by a small number of factors, so it uses low-rank latent factors to approximate rating data [21, 14, 20].
From the view of matrix completion, the low-rank factorization models are competent in tasks with a large amount of missing entries.
Many evidence have shown that matrix factorization models outperform other CF approaches.
Recently, several approaches resort to trust-aware collaborative  ltering [25, 17, 12] where users are no longer treated as independent and identically distributed.
All these methods based on common rationale that users are likely to have similar tastes with their trusted friends in social networks.
Previous studies manifest that social relations as another form of user information could alleviate sparsity problem and improve recommendation accuracy.
Most of the existing social recommendation methods focus on encoding social network in user pro le learning.
However, many other web mining tasks show that when it comes to mining topics and relationships among objects, network structure are helpful [18, 3].
Our work employ the network-regularized topic modeling into a novel use for user clustering in recommender systems.
Apart from social relations, other relations such as item-category could also been incorporated into recommender systems to make up the lack of rating information.
In [32], an extension of the probabilistic matrix factorization to multi-domain case is proposed.
Through learning a covariance matrix, rating knowledge is transferred across domains adap-tively.
Yang et al. [31] model category-speci c trust circle from ratings and trust links and formulate multifaceted trust network into social matrix factorization.
Di erent with [32], they evaluate the model in each domain without given the overall performance.
Clearly, we could take advantage of external information such as user s trust network and item s category to compensate the sparse data.
On the other hand, there are more dense patterns or groups in the original rating matrix which can be uncovered though clustering methods.
Traditional clustering CF models cluster users based on the items they rated or cluster items based on the users that rated them [5,
 ty during clustering procedure.
To avoid the shortcomings, co-clustering models are proposed to map user and item into clusters simultaneously, and thus each cluster becomes more dense than the entire rating matrix [8, 27].
In this study, the proposed TopRec model leverages the power of clustering method and external relations to obtain domains with explicit topics.
In experiments, we have shown that this combination works well on highly sparse datasets.
E ectively modeling interest topics for users and accordingly recommending their preferred items are fundamental issues to all recommender systems.
In this paper, we propose a novel framework, TopRec, jointly exploiting community topic mining and domain-speci c collaborative  ltering for top-n recommendation task.
To construct domains, we integrate expert guidance with social network to establish a uni ed probabilistic topic model for community topic mining.
Then we utilize the observed user-item ratings across di er-
on two datasets from real-world consumer review websites have demonstrated that the proposed method produces more accurate recommendation than other competitors.
