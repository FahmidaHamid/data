In sociology, there are a few well-established ideas on how positions in social networks bene t those people who occupy them [7].
  This work was done when the  rst author was studying in Ts-inghua University.
Copyright is held by the International World Wide Web Conference Committee (IW3C2).
IW3C2 reserves the right to provide a hyperlink to the author s site if the Material is used in electronic media.
One idea is that positions which act as an intermediary or a bridge between individuals of different groups tend to have access to a richer supply of information and have more control over their network relations.
The notion forms the basis for the theory of structural holes [4], which suggests that advantages accrue to people who occupy such bridging positions.
For example, if a researcher spans a structural hole, he/she could apply ideas and techniques from one group to problems faced by the other, or innovate by synthesizing ideas from different groups.
A series of empirical studies have demonstrated how structural holes positively relate to a wide range of indicators of social success [1, 5, 6, 28].
A few other papers use game theory to model the formation of structural holes in social networks.
Goyal and Vega-Redondo [12] propose a model in which a node A potentially bene ts from serving as an intermediary between nodes B and C even when it resides on an arbitrarily long BC path.
According to the presented model, the strategic link formation leads to a star network.
However, in real world, many networks are not necessarily of the star topology.
[7] explicitly models the notion of structural holes using a network formation game.
It is based on the idea that A can only bene t from being an intermediary when A is on a length-two path between B and C. Kleinberg et al. [18] study the strategic and dynamic aspect to the theory of structural holes.
They extend Burt s work [5] by modeling how social networks change over time if everyone is vying for those bridging positions.
However, while much research has focused on studying the correlation between structural hole spanners and their success within an organization (as indicated by salary, reviews, promotion, and other measures), few work systematically investigates the problem in large online social networks.
We address the problem of identifying structural holes spanners: given a social network, who are the top-k users spanning structural holes in the social network, and what are the underlying patterns of these structural hole spanners?
The problem could be considered as the reverse process of the study on strategic network formation with structural holes [7, 12, 18].
The latter problem is to design a game-theoretic model to study the evolution of network structure, while our problem is to detect who are likely to span structural holes in social networks based on the network structure.
The Model.
We assume a setting in which a set V of n distinct users form l groups C = {C1,  , Cl} (called communities).
A utility function Q(v, C) is de ned for each node to measure its degree to span structural holes.
Formally, we have the following de nition, De nition 1.
Top-k Structural Hole Spanners.
Let G = (V, E) denote a social network, where V = {v1, v2,  , vn} is a set of n users, and E   V   V is a set of undirected social 837v1 v4 v2 v3 v5 v6 v12 v8 v11 v7 v9 v10 Figure 1: Illustration of structural holes.
Nodes in the two ellipses form two communities.
v6 and v12 can be considered to span the structural hole between the two communities.
relationships between users.
Further assume that the nodes of the social network can be grouped into l (overlapping) communities C = {C1,   , Cl}, with V = C1   Cl.
Then, the top-k structural hole spanners are de ned as a subset of k nodes, denoted as VSH in the network, which maximizes the following utility (quality) function: Q(VSH, C), with |VSH| = k max
 (1) In the formulation, links can be directed or undirected.
The utility function Q(VSH, C) is a general de nition, which can be instantiated in different ways.
Note that in the de nition, we only consider the network information but not the content information.
Our goal is to give a theoretical analysis for this problem.
Combining the network information and the content information in practical mining algorithms is left as one of our future works.
We develop two instantiation models based on the above objective function.
The general idea behind is to measure how a node bridges different communities.
In the  rst model, we consider the importance of those connected nodes for mining the structural hole spanners.
That is, if a node connects multiple important nodes (authoritative users), then the node is more likely to be a structural hole spanner.
In the second model, we directly measure each node according to the theory of minimal cut on network.
The problem is cast as  nding k nodes such that after removing these nodes, the decrease of minimal cut for communities C in network G can be maximized.
For both models, we provide theoretical analysis and develop ef cient algorithms to solve with provable approximation guarantees.
As far as we know, it is the  rst attempt to prove the NP-hardness of maximizing the decrease of minimal cut in an unweighted graph.
The problem poses a set of challenges.
Figure 1 shows an example of structural holes with two communities.
It is easy to see that v6 and v12 can be viewed as structural hole spanners between the two communities.
However, there are still several challenging questions: (1) Which node (v6 or v12) has a higher degree to span structural holes?
How to quantify the degree of each node to span structural holes?
(2) How to ef ciently select top k nodes to maximize the utility function (Eq.
1)?
(3) How the detected structural hole nodes can help other social networking applications?
Results.
In this work, we focus on studying the problem of mining top-k structural hole spanners in large-scale networks from both theoretical and empirical aspects.
We test the proposed models on three different networks: Coauthor, Twitter, and Inventor.
In Coauthor, we try to understand who act as bridges between different research communities; in Twitter, we attempt to detect who act as intermediaries for information diffusion; in Inventor, we study how Table 1: Statistics of the three networks.
#Articles respectively indicates the number of publications, tweets, and patents in the three networks.
Dataset Coauthor [31] Twitter [15] Inventor [30] #Users


 #Relationships


 #Articles


 technologies diffuse across different companies via inventors who span structural holes.
Our study presents the following results:   1% of Twitter users who span structural holes control 25% of the information diffusion (retweeting).
This provides a strong evidence for the theory of structural hole [4, 5].
  We compare the proposed models with several alternative methods for detecting structural hole spanners and the results show that our models clearly outperform (+20-40% for maximizing the information diffusion) the comparison methods.
  We apply the detected structural hole spanners to help communities detection [32] and link prediction [29], two important applications in social networks.
Results demonstrate that the structural hole information can signi cantly improve the quality (+10% in terms of F1-score) of communities detection and improve the performance (+3-4% by F1-score) of predicting the type of relationships in two different networks.
Organization.
Section 2 introduces the data sets used in our study and our observations over different networks.
Section 3 presents the proposed model and describes the algorithm for solving the model; Section 4 describes potential applications of mining structural hole spanners.
Section 5 and Section 6 present the results.
Finally, Section 7 discusses related work and Section 8 concludes.
Before proceeding, we  rst engage in some high-level investigation of structural holes in several different social networks.
Data collections.
We consider three different types of networks for studying the structural hole problem: Coauthor, Twitter and Inventor.
Table 1 gives basic statistics of the three networks.
Coauthor is a network of authors, collected by ArnetMiner1.
The data set is obtained from [31].
The network consists of 815,946 authors and 2,792,833 coauthorships.
For the evaluation purpose, we create a sub-network, which contains coauthorships extracted from papers published at 28 major computer science conferences.
These conferences cover six research areas: Arti cial Intelligence (AI), Databases (DB), Data Mining (DM), Distributed Parallel Computing (DP), Graphics, Vision and HCI (GV), as well as Networks, Communications and Performance (NC)2.
Each conference has a group of program committee (PC) members.
We extracted the PC member information from respective conference websites from
 conferences of different areas are considered as spanning structural 1http://arnetminer.org, an academic search system.
DB: VLDB, SIGMOD, PODS, ICDE, ICDT, and EDBT; DM: SIGKDD and ICDM; DP: PPoPP, PACT, IPDPS, ICPP, and Euro-Par; GV: SIGGRAPH, CVPR, and ICCV; NC: SIGCOMM, PERFORMANCE, SIGMETRICS, INFOCOM, and MOBICOM.
x ( s e m
 i




 Random Opinion leader Structural hole Coauthor Twitter Inventor Figure 2: Structural hole spanners are more likely to connect important nodes than opinion leaders.
Random is the average number of publications/tweets/patents authored by neighborhood nodes of a random user in the respective network.
The average number is taken as a unit of measurement and the y-axis indicates the average score of different categories of users under this measurement.
holes across those areas.
In total, we extracted 1,718 PC members, among whom 107 PC members span structural holes.
Our goal is to identify those PC members who span structural holes from the coauthor network.
Twitter is crawled from Twitter.com, a widely used microblog-ging system.
The data set is obtained from [15, 22].
The sub-network is comprised of 112,044 users, 468,238 following links among them, and all tweets (2,409,768 tweets) posted by these users.
Here, we examine the role of structural hole spanners in the information diffusion process on Twitter.
Inventor is a network of inventors, extracted from a large patent data set from USPTO3.
The data set is obtain from [30].
The inventor network contains 2,445,351 inventors and 5,841,940 co-inventing relationships.
Each company is considered as a community.
We study how technologies spread across different companies via inventors who span structural holes.
Observable analysis.
We study the different behavior patterns between structural hold spanners and opinion leaders, and the interplay between structural hold spanners and information diffusion.
Intuitively, we have the following questions:   How likely would structural hole spanners connect with  opinion leaders ?
  How likely would structural hole spanners in uence the information diffusion?
Structural hole spanner and Opinion leaders.
We study the connectivity between opinion leaders and different categories of users (Opinion leaders, Structural holes, and Random).
In Coauthor, we take all PC members as opinion leaders and PC members who serve at conferences of different areas as structural holes.
In Inventor, we perform PageRank [27] and select the top 1% users with the highest PageRank scores as opinion leaders, and those top users who worked in different companies as structural hole spanners.
In Twitter, we also perform PageRank on the following network and select the top 1% users as opinion leaders.
We use the (     ) community detection algorithm [14, 24] to  nd overlapping communities.
Then those top users who exist in different communities are treated as structural hole spanners.
Figure 2 shows that structural hole spanners are more likely In (+15-50%) to connect important nodes than opinion leaders.
s n o i t a t i c #


 Opinion leader Structural hole
 Avg (a) Cross domain
 s n o i t a t i c #


 Opinion leader Structural hole
 Avg (b) Outer domain Figure 3: Information diffusion on the Coauthor network.
(a) Average number of cross-domain citations received by structural hole spanners and opinion leaders, e.g., in the AI-DM case, for opinion leaders in AI, only citations from DM are considered.
(b) Average number of outer-domain (those domains other than AI and DM) citations received by structural hole spanners and opinion leaders.
y t i l i b a b o r
 Opinion leader Structural hole
 y t i l i b a b o r

 Opinion leader Structural hole




 Top k






 Top k

 (a) Inner domain (b) Cross domain Figure 4: Information diffusion on the Twitter network.
x-axis indicates top k opinion leaders/structural hole spanners; and y-axis indicates the probability of opinion leaders (or structural hole spanners) appearing on a tweet-forwarding path spread within a domain or across different domains.
Figure 2, Random stands for the average number of publica-tions/tweets/patents authored by neighborhood nodes of a random user in the respective network.
The average number is taken as a unit of measurement and the y-axis indicates the average score of different categories of users under this measurement.
The analysis provides evidence in support of the  rst proposed model (Cf.
 3).
Structural hole spanner and information diffusion.
We perform another analysis of information diffusion in the Coauthor and the Twitter networks.
In Coauthor, we consider the citation as a type of information diffusion.
We count the average numbers of cross-domain citations received by opinion leaders and structural hole spanners.
(Within the same domain, opinion leaders receive higher citations than others.)
We  nd a striking phenomenon (Figure 3): contrast to the inner-domain citation, the average number of cross-domain citations received by the structural hole spanners almost doubles the number of opinion leaders.
It seems that people from a research community C1, if they want to follow the work related to community C2, are more likely to refer (cite) the work of a researcher who spans the structural hole between C1 and C2, rather than an opinion leader in community C2.
For the analysis of information diffusion in Twitter, we estimate the probability of opinion leaders (or structural hole spanners) appearing on a tweet-forwarding path.
Figure 4 shows some interesting patterns on Twitter: opinion leaders play a key role in spreading information within a community (Figure 4(a)), while structural hole spanners are more important for spreading information between communities (Figure 4(b)).
Another striking phenomenon is that the top 1% (k = 1, 000) of structural hole spanners control almost 80% of the information diffusion between different communities, and 25% of all the information diffusion on Twitter.
The above observations constitute the intuition behind the following proposed models.
We develop two instantiation models for the utility function (Eq.
1).
The  rst model considers the connectivity between opinion leaders and structural hole spanners (Cf.
Figure 2).
The user s importance (authority) and the degree of spanning structural hole are de ned in terms of one another in a mutual recursion.
The intuition of the second model is from Figures 3 and 4.
The model is de ned based on the theory of information  ow.
We provide theoretical analysis for the two models and prove the NP-hardness for the second model, and develop ef cient algorithms to achieve provable approximation guarantees.
The intuition of the  rst model can be also explained using the two-step information  ow theory [16, 20], which suggests that ideas (innovations) usually  ow  rst to opinion leaders, and then from the opinions leaders to a wider population.
In this sense, if a user is connected with many  opinion leaders  in different communities, then the user is more likely to span structural holes.
For example, in Figure 1, nodes v3 and v7 act as opinion leaders respectively in the two communities, thus they have more power to spread information than other nodes (such as v5 and v11).
v6 and v12 can be considered as the bridge to connect the two communities.
By comparing v6 with v12, we see v6 connects the two opinion leaders of the two communities, while v12 only connects two ordinary users.
According to the information  ow theory, v6 would have a higher informational advantage (i.e., higher degree to span structural holes) than v12.
On the other hand, it would be natural to enhance the power of information spread through the connection to structural hole spanners.
Thus, a node is more likely to act as an opinion leader, if it connects with structural hole spanners.
Based on this intuition, we develop the  rst model, referred to as HIS.
To begin with, we  rst give the following de nition: De nition 2.
Given a network G, let C = {C1,    , Cl} denote l communities in the network G; let I(v, Ci)   [0, 1] be the importance of v in community Ci.
Then for each subset of communities S such that S   C and |S|   2, we de ne H(v, S)   [0, 1] as the structural hole score of v in S, i.e., the likelihood of v spanning structural holes across all communities in S.
Here, each node has an importance score in each community and a structural hole score in every possible S   C (|S|   2).
The two types of scores are de ned in terms of each other in a mutual recursion as follows: I(v, Ci) = max euv E, S C Ci S {I(v, Ci),  iI(u, Ci) +  SH(u, S)} (2) H(v, S) = min Ci S {I(v, Ci)} (3) thority score r(v) of each node v. Then we initialize the importance score I(v, Ci) in the following ways: I(v, Ci) = r(v), v   Ci v (cid:6)  Ci I(v, Ci) = 0, (4) The two update rules Eqs.
2 and 3 run in an alternating fashion until desired equilibrium values for the two scores are reached.
Practically, the two scores I(v, Ci) and H(v, S) could be in nitely large without any constraints.
We give the following theorem for the condition of the existence of a convergent solution.
Theorem 1.
Given  i and  S, the two scores I(v, Ci) and H(v, S) always exists for any graph G = (V, E), if and only if, max Ci C, Ci S { i +  S}   1 (5) PROOF.
For the only if direction, suppose there exists Ci   C and Ci   S such that  i +  S > 1.
We consider two connected nodes v1 and v2, with r(v1) = r(v2) = 1, v1    Cj SCj and v2   Ci.
Thus, we have I(v1, Ci) = 1.
By Eq.
3, we get H(v1, S) = minCj S I(v1, Cj) = 1.
By Eq.
2, we get I(v2, i)    iI(v1, Ci) +  SH(v1, S) =  i +  S > 1, which is impossible.
Now we prove the if direction, if for each Ci and Ci   S, we have  i +  S   1.
We can use induction to prove that, after in nite number of iterations, it satis es I(v, Ci)   1.
In the  rst iteration, we have I (0)(v, Ci)   r(v)   1.
After the k-th iteration, we have I (k)(v, Ci)   r(v)   1.
Hence, in the (k + 1)-th iteration, for each Ci   S, we have I (k+1)(v, Ci)    iI (k)(u, Ci) +  SH (k)(u, S)   ( i +  S)I (k)(u, Ci)   I (k)(u, Ci)   1.
Algorithm 1 gives the implementation to update Eqs.
2 and 3, which results in a complexity of O(K2l|E|), where K is the number of iterations.
Let us  rst prove the -convergence of the algorithm and then discuss its ef ciency.
Theorem 2.
Algorithm 1 satis es -convergence.
Denote   = max { i +  S}, we have Ci C, Ci S |I (k+1) (v, Ci)   I (k) (v, Ci)|    k (6) max v V, Ci C parameters  i PROOF.
Firstly, max { i +  S}   1.
and  S satisfy   = In addition, during the itera-Ci C, Ci S tions, for any v   V , Ci   C and S   C, the value of I (k)(v, Ci) and H (k)(v, S) are non-decreasing wrt the parameter k.
Now, we use induction to prove where  i and  S are two tunable parameters.
The importance score of user v is computed as the maximal value of the linear combination of v s friend s importance score and the structural hole score.
The structural hole score is then de ned as the minimal value of user v s importance scores in different communities in S. Essentially, in Eq.
2, the importance score can be explained as the maximal information  ow a user can receive from one of her/his friends.
Eq.
3 suggests that a structural hole spanner in S should be active in all the communities in S. The two update rules, Eqs.
2 and 3 are the basic approaches by which structural holes and importance (authority) reinforce each other.
For initialization, we can use an algorithm such as PageRank [27] or HITS [17] to calculate the au-|I (k+1) (v, Ci)   I (k) (v, Ci)|    k max v V,Ci C and |H (k+1) (v, S)   H (k) (v, S)|    k.
max v V,S C When k = 0, for each v   V and Ci   C, we have I (1)(v, Ci)   1, thus |I (1)(v, Ci)   I (0)(v, Ci)|   1.
And for each v   V and S   C, H (1)(v, S)   1, thus we also have |H (1)(v, S)   H (0)(v, S)|   1.
Output: Importance I and structural hole score H Initialize I(v, Ci) according to Eq.
4 ; repeat P (v, Ci) = maxS C Ci S{ iI(v, Ci) +  SH(v, S)} ; (v, Ci) = max{I(v, Ci), maxeuv E P (u, Ci)} ; foreach v   V do foreach Ci   C do end end foreach v   V do I(cid:6) foreach Ci   C do end foreach S   C do end H(cid:6) (v, S) = minCi S I(cid:6) (v, Ci) ; end Check the -convergence condition by |I(cid:6) (v, Ci)   I(v, Ci)|    max v V,Ci C Update I = I(cid:6) and H = H(cid:6) ; until Convergence; Algorithm 1: HIS-algorithm.
Suppose after k iterations, for each v   V and Ci   C, we have |I (k+1)(v, Ci)   I (k)(v, Ci)|    k, and for each v   V and S   C, |H (k+1)(v, S) H (k)(v, S)|    k.
Hence, in the (k +1)-th iteration, for each v   V and Ci   C, if I (k+2)(v, Ci) = I (k+1)(v, Ci), then |I (k+2)(v, Ci)   I (k+1)(v, Ci)| = 0, otherwise, there exists u, s.t.
euv   E and S   C, such that Ci   S and I (k+2) (v, Ci) =  iI (k+1)    i(I (k)    iI (k)   I (k+1) (u, Ci) +  SH (k+1) (u, Ci) +  k (u, Ci) +  SH (k) (v, Ci) +  k+1 ) +  S(H (k) (u, S) +  k ) (u, S) +  k+1 (u, S) Thus, we have |I (k+2)(v, Ci)   I (k+1)(v, Ci)|    k+1.
For each v   V and S   C, there exists Ci   S, such that H (k+1) (v, S) = I (k+1)   I (k+2)   H (k+2) (v, Ci) (v, Ci)    k+1 (v, S)    k+1 Hence |H (k+2)(v, S)   H (k+1)(v, S)|    k+1.
Therefore, when   = max { i +  S} < 1   , where   is a small constant, the algorithm is guaranteed to be convergent after a  nite number of iterations.
Ci C, Ci S We now discuss the ef ciency of the algorithm.
The time complexity of the algorithm is O(2l|E|/ log  ), which is insuf cient for large networks.
We here introduce an improved algorithm.
Notice that in the (k + 1)-th iteration of Algorithm 1, we only need to recompute the values of I(v, ), when one of v s neighbors changes its value in the k-th iteration.
We can record the change status of each node in the k-th iteration, and broadcast its change to all neighbors in the next iteration.
In this way, we can update Eqs.
2-3 in linear-time on the degree of v and 2l.
In each iteration, we select the node v with the largest updated I(v, ), then broadcast the value to its neighbors.
The selection of the node v with the largest updated I(v, ) can be done in time O(log |E|) = O(log |V |), by using a priority queue.
In   5, we will give the ef ciency performance of the improved algorithm.
After running the algorithm, { S H(v, S)} as the top-k we select k nodes with the highest max
 structural hole spanners.
The second model is based on the idea that users who span structural holes play an important role in information diffusion between different communities (con rmed in the observable analysis in   2).
Following this, we formalize the problem of structural hole spanner detection by minimal cut.
De nition 3.
Minimal Cut.
Given a network G = (V, E) and l communities C = {C1,   , Cl}, we call D   E as the minimal cut (denoted as MC(G, C)) of communities C in G, if D is the minimal number of edges to separate those nodes in each community Ci from the others {Cj|j (cid:6)= i}.
Given this, the structural hole spanner detection problem can be cast as  nding top-k nodes such that after removing these nodes, the minimal cut of C in G will be signi cantly reduced, i.e., the decrease of the minimal cut after removing will be maximized.
The idea is natural, as structural hole spanners play bridging roles between communities.
Without these structural hole nodes, the connections between different communities would be minimized.
To make the idea precise, we propose the following problem de ni-tion: De nition 4.
Detecting top-k structural hole spanners by minimal cut.
Given a graph G = (V, E), and l communities C = {C1,  , Cl}, the task of detecting top-k structural hole spanners by minimal cut is to  nd |VSH| = k nodes such that after removing these k nodes, the decrease of minimal cut of C in G should be maximized, i.e.,
 |VSH| = k (7) The following theorem shows the hardness of this de nition.
Theorem 3.
The problem of detecting top-k structural hole spanners by minimal cut is NP-hard, even in the case of l = 2.
Given an instance   = {G  PROOF.
In the case of l = 2, the problem can be reduced from the k-DENSEST SUBGRAPH problem, which tries to  nd a k-node subgraph with the maximum number of edges from a given graph.
For the decision version of the problem, it asks whether there exists a k-node subgraph containing at least d edges.
= (V, E), k, d} of the k-DENSEST SUBGRAPH problem, we denote n = |V | and m = |E|.
We build a graph G consisting of (n + (n2 + 1)m + 2) nodes, denoted as {s, t, x1,   , xn, yi,1,  , yi,m}, 1   i   n2 + 1, where C = {C1, C2}, C1 = {s} and C2 = {t}.
In the following, we use graphs with polynomially bounded weight (weighted graph for short), and it is straightforward to construct an equivalent unweighted graph of polynomial size.
Graph G contains (n + (n2 + 1)(n   1)m) edges.
For each 1   j   n, we add one edge between s and xj with capacity (n2 + 1)m. For each 1   j   n, 1   i   n2 + 1 and 1   k   m, if node xj does not appear on the k-th edge (each edge could be regarded as a set of two nodes), we add one edge between xj and yi,k with capacity
 between yi,k and t with capacity 1.
According to the max ow and min-cut theory, it is easy to see that, MC(G, C) = (n2 + 1)m. Now we want to prove that, the k-DENSEST SUBGRAPH instance   is satis able, if and only if, there exists a subset |VSH| = n k, such that MC(G \ VSH, C)   (n2 + 1)(m   d).
For the only if direction, suppose the k-DENSEST SUBGRAPH instance   is satis able, then we have the subgraph consists of nodes {xsj} and at least d edges.
Thus, we can choose VSH = {xj} \ {xsj}.
For the k-th edge ek in graph G, if ek exists in the subgraph, for all 1   i   n2 + 1, node yi,k cannot be reached.
Hence, we have MC(G \ VSH, C)   (n2 + 1)(m   d).
For the if direction, if there exists a subset |VSH| = n   k such that MC(G \ VSH, C)   (n2 + 1)(m   d).
Denote V   (cid:2){xj}, we have |V  


 (n2 +1)(m d).
Thus, let the subgraph be the set of corresponding nodes in {xj} \ V   SH, there are at least d edges in the graph whose both endpoints are contained in the subgraph.
Therefore, the k-DENSEST SUBGRAPH instance   is satis able.
Based on the above, we establish the theorem.
SH|   n   k, and MC(G \ V   The k-DENSEST SUBGRAPH is hard to approximate, the best known approximation algorithm is O(n1/4+) [3].
The results in literature [2] indicated the hardness of approximating k-DENSEST SUBGRAPH within n (1) factors.
Theorem 4.
Suppose the k-DENSEST SUBGRAPH is hard to approximate within n (1), then the problem of detecting top-k structural hole spanners by minimal cut is hard to approximate within n (1) as well.
PROOF.
Suppose there is an approximation algorithm A for the problem of detecting top-k structural holes by minimal cut with an approximation ratio of O(f (|G|)).
Given an instance   = {G  = (V, E), k, d} of the k-DENSEST SUBGRAPH problem, again we denote n = |V | and m = |E|.
We continue using the construction in the proof of Theorem 3.
Suppose the optimal solution {x  } of }   contains d  such that |V SH, C)   (n2 + 1)(m   (cid:2) ).
We call algorithm A to compute a subset |VSH| = n  k such d  that MC(G\VSH , C)   m(n2 = (n2 edges, then there exists a subset V SH| = n   k and MC(G\V SH = {xj}\{v  + 1)/O(f (nC0 )) + 1)   d  + 1)(m   d /O(f (nC0 )))
 SH|   n   k, and MC(G\V   (cid:2){xj}, we where C0 is a constant.
Then denote V   have |V   SH, C)   (n2 + 1)(cid:10)m   d /O(f (nC0 ))(cid:11).
Thus, let the subgraph be the set of corresponding nodes in {xj}\V   SH, which contains at least (cid:12)d/O(f (nC0 ))(cid:13) edges.
Therefore, the problem of detecting top-k structural holes by minimal cut is also hard to approximate within n (1).
(n2 (8) xj (cid:2) (cid:2) sj Approximate algorithms.
Now, we present a polynomial-time algorithm to approximate the problem of structural hole spanners detection by minimal cut.
(cid:3) For any pair of communities, we select k/ nodes between them as structural hole spanners using a greedy strategy (referred as MaxD-AL1).
In each round, we choose the node which will result in a maximal decrease of the minimal cut when removed it from the network.
(cid:4) l
 Theorem 5.
The greedy algorithm can achieve an approximation ratio of nO(1).
Input: G = (V, E), k, l, C = {Ci}) Output: Top-k structural hole nodes VSH Initialize VSH =   ; while |VSH| < k do Initialize f (v) = 0, for each v   V ; foreach non empty S   {1,     , l} do ES =  i SCi and ET =  i(cid:8) S Ci ; Compute the maximal  ow with source ES and sink ET on the induced graph G \ VSH ; foreach v   V do end Add f (v) by the  ow though node v ; end Choose O(k) nodes with the largest f as candidates D; Compute p  Update VSH = VSH = arg maxp DM C(G \ (VSH (cid:2){p } (cid:2){p}), C); end return I and H ; Algorithm 2: MaxD-AL2 Algorithm.
PROOF.
Based on the fact that the minimal cut of the graph is bounded by nO(1), the theorem is proved.
Suppose the time to compute the minimal cut of all communities C = {C1,    , Cl} in G is O(Tl(n)).
Thus, the time-complexity of the greedy algorithm is O(nkTl(n)).
To scale up the algorithm to large networks, we consider two strategies to improve the ef- ciency of the algorithm.
One idea is to restrict the number of candidates in the greedy algorithm.
The  rst algorithm (MaxD-AL1) only considers O(k) high-degree nodes as candidates, which improves the time-complexity to O(k2Tl(n)).
In the second algorithm (called MaxD-AL2), for each partition ES and ET , we call the network ow algorithm [8, 11] to compute the minimal cut of ES and ET .
We consider top O(k) nodes with maximal sum of  ows through them as candidates.
Details can be found in Algorithm 2.
In Algorithm 2, one challenge is to estimate MC(G, C).
As introduced in [10], by a reduction from the 3-DIMENSIONAL MATCHING problem, it is NP-hard to compute the minimal cut between multiple-sets(when l > 2).
We develop the following algorithm to estimate the minimal cut of communities C = {Ci} in G. The approximation ratio of the algorithm is O(log l).
The idea of the approximation algorithm is as follows.
To  nd the minimal cut of all communities C = {Ci}, we try all possible partitions of C = C1   C2 and  nd the minimal cut (denoted as D) between (cid:5) Ci.
Then we remove D from the graph G Ci C1 and call sub-tasks on C1 and C2 recursively.
The time-complexity of the algorithm for computing MC(G, C) is O(22lT2(n)).
Ci C2 Ci and (cid:5) Theorem 6.
The above algorithm for computing MC(G, C) provides an O(log l) approximation.
PROOF.
The approximation ratio is bounded by the depth of the partition process.
There is always a partition whose depth is at most O(log l).
Thus, the approximation ratio is O(log l).
Now, we turn to discuss how structural holes can help real social applications.
Speci cally, we consider detecting community kernels [32] and inferring social ties [29].
The former aims to detect the community structure among in uential (kernel) users and the latter is to predict the types of social relationships (can be generally considered as a link prediction task).
 w (v) = The community kernel detection problem is de ned as: [32] Given a graph G = (V, E), a weight vector {w1(v),  , wl(v)} is de ned for each node v, with each wi(v) representing the relative importance of the node wrt the i-th community.
Denote s as the size of community kernels.
One goal of community kernel detection is to obtain the importance of each node wrt a community.
Then those nodes with the highest importance scores are selected as the kernel members.
The algorithm proposed in [32] is called WEBA.
Now, we study how to leverage structural hole to help community kernel detection.
Our idea is based on the intuition that structural hole spanners may be connected with kernel members in different communities.
Following this, we incorporate the output of structural hole analysis into the objective function of WEBA.
For HIS, we de ne p(v) = max S {1,  ,l} { SH(v, S)} (9) For MaxD, we  rst calculate the top-k structural hole spanners VSH.
Then we de ne p(v) = 1 if v   VSH, and p(v) = 0 otherwise.
Given this, we extend the objective function of WEBA, and de ne the following optimization problem: L( (cid:8)w) = (cid:6) max subject to (cid:6) (u,v) E (cid:8)w(u)   (cid:8)w(v) + s (cid:6) (cid:6) v V 1 i l p(v)wi(v) v V (cid:6) wi(v) = s,  i   {1,   , (cid:9)}; wi(v) (cid:2) 1,  v   V ; 1(cid:2)i(cid:2)(cid:4) wi(v) (cid:3) 0,  v   V,  i   {1,   , (cid:9)}.
(10) We use a similar algorithm as that in [32] to solve the optimization problem in Eq.
10.
We still use coauthor data set in [32] to evaluate the performance of community kernel detection in terms of precision, recall, and F1-score.
We also apply the results of structural hole analysis to help predict the types of social relationships, an important link prediction task.
Speci cally, we consider the following data sets used in [29].
Slashdot is a network of friends.
Slashdot is a site for sharing technology related news.
In Slashdot, users can tag each other as  friends  (like) or  foes  (dislike).
The data set is comprised of
 relationships between users.
Mobile is a network of mobile users.
The data set is from [9].
It consists of the logs of calls, blue-tooth scanning data and cell tower IDs of 107 users during about ten months.
If two users communicated (by making a call and sending a text message) with each other or co-occurred in the same place, we create an edge between them.
In total, the data contains 5,436 edges.
Our goal is to predict whether two users have a friend relationship.
For evaluation, all users are required to complete an online survey, in which 157 pairs of users are labeled as friends.
For predicting the types of social relationships on the above data sets, [29] presents a number of algorithms, among which the graphical model PFG (Partially Labeled Factor Graph) achieves the best performance in one single network.
We  rst perform the proposed models to mine structural hole spanners on the two data sets.
As for the communities, we use the Newman s algorithm [26].
Then we use the identi ed structural hole spanners to de ne correlation features in the PFG algorithm.
Speci cally, given a structural hole spanner, for any two users who have relationships with the spanner, we create a binary correlation feature.
For example, if both users vi and vj have a friend relationship with a spanner vk, then a correlation feature h(yik = 1, yjk = 1) is de ned.
For more details about the feature de nition, please refer to [29].
In this section, we evaluate the effectiveness and ef ciency of our algorithms proposed in Section 3.
All data sets and codes used in this work are publicly available.4
 To quantitatively evaluate the proposed models, we consider the following performance metrics:   Accuracy.
In the Coauthor network, we evaluate the proposed models in terms of Precision, Recall, and F1-Measure.
In both Twitter and Coauthor networks, we use the maximization of information diffusion to evaluate the proposed models.
  Case study.
We use several case studies as the anecdotal evidence to further demonstrate the effectiveness of the proposed models.
  Application improvement.
We apply the detected structural hole nodes to help community kernel detection and link prediction.
This will demonstrate how the quantitative measurement of structural holes can bene t other social networking applications.
Comparison Methods We compare the following methods for detecting top-k structural hole spanners.
Pathcount [12]: for each node, the algorithm counts the average number of shortest paths (between each pair of nodes) it lies on, and then selects those nodes with the highest numbers as structural hole spanners.
of pairs of neighbors who are not directly connected.
And then those nodes with the highest numbers are viewed as structural hole spanners.
PageRank: it uses PageRank [27] to estimate the importance of each node and then selects those nodes with the highest PageRank scores as structural hole spanners.
PageRank+: it selects those nodes who have the highest Pager-ank scores and appear in more than one communities as structural hole spanners.
 S = 0.5   0.5 HIS: the  rst proposed model.
We empirically set  i = 0.3 and MaxD: the second proposed model.
By default, we use the MaxD-AL2 algorithm to approximate the model.
In Coauthor, we consider each subject area as a community; in Twitter, we use the ( ) algorithm [24] to  nd overlapping communities; and in Inventor, we take each company as a community.
All codes are implemented in C++, and all experiments are performed on a PC running Windows 7 with Intel (R) Core (TM) 2 CPU 6600 (2.4GHz) and 4GB memory.
Table 2 lists the running time of the comparison algorithms.
In general, HIS has a very good ef ciency performance and can perform the detection on large network (Inventor) with millions of nodes in 26 seconds.
MaxD results in a bit lower ef ciency, but is comparable with Pathcount.
4http://arnetminer.org/structural-hole/
 .
843i i n o s c e r





 Pathcount
 Pagerank Pagerank+
 MaxD




 Pathcount
 Pagerank Pagerank+
 MaxD i i n o s c e r





 Pathcount
 Pagerank Pagerank+
 MaxD i i n o s c e r





 Top k (a) AI-DM






 Top k (b) DB-DM








 Top k (c) DP-NC Figure 5: Accuracy performance of different algorithms for detecting top-k structural hole nodes on Coauthor.
Pathcount
 Pagerank Pagerank+
 MaxD



 y t i l i b a b o r





 Top k (a) Twitter Pathcount
 Pagerank Pagerank+
 MaxD



 y t i l i b a b o r







 Top k (b) Coauthor

 Figure 6: Results of maximization of information diffusion by different algorithms.
(a) probability of the detected structural hole nodes appearing on a tweet-forwarding path across different communities; (b) probability of the detected structural hole nodes receiving cross-domain citations.
Table 2: Running time of different algorithms.
Data Set Coauthor Twitter Inventor Pathcount 350.66s 32.03m 494.3 hr
 4.71s 12.09s 98.96s PageRank 0.20s 0.67s 3.61s
 0.60s 3.87s 26.11s MaxD 189.78m 602.37m 370.8hr



 y t i l i b a b o r
 Coauthor Twitter


 y t i l i b a b o r
 Coauthor Twitter



 (a)  






 (b)  
 Accuracy.
We  rst use Coauthor as the benchmark data set to evaluate the proposed models.
Figure 5 shows the performance of different algorithms.
Both of the proposed models clearly outperform the comparison algorithms by +20-40% at top 20.
As expected, choosing important nodes (by PageRank) only is not a good strategy.
2-Step Connectivity and Pathcount achieve a better performance than PageRank.
This is because that the objective of PageRank, to  nd authority nodes, is different from that of  nding structural hole spanners.
In our  rst model, HIS, structural hole nodes are determined not only by the bridging positions, but also by the status (e.g., opinion leaders or not) of people connected by the bridging positions.
We also note that the two proposed models present different behaviors.
Roughly, MaxD performs a bit better at top 20, while HIS outperforms when the number increases to
 Maximization of information diffusion.
Employing Twitter and Coauthor as the basis, we study how the detected structural hole spanners govern the diffusion of information.
Speci cally, we apply the different algorithms to the Twitter (or the Coauthor) network to detect top-k structural hole spanners.
Then we use the tweet-forwarding (or the citation) information to verify the detected Figure 8: Performance of information spread by HIS with the two parameters   and   varied (k = 200).
results.
Figure 6 shows the performance of different algorithms on the two networks.
We can see in Twitter the proposed models sig-ni cantly outperform the comparison algorithms.
In Coauthor, the improvements of our models over the comparison algorithms is still clear.
We produce sign tests for each result, which con rms that all the improvements of our proposed models over the four methods are statistically signi cant (p (cid:16) 0.01).
We can also see that top
  uence almost 10% of the forwarding behaviors between different communities.
Notice the striking patterns between the two models on the Twitter network.
Although MaxD directly models the information diffusion process, HIS clearly outperforms MaxD when the number of k increases up to 200, and by over 20% when k = 500.
This suggests that there is big a difference between the information network structure and the social network structure.
How to combine the two network structures for mining structural hole spanners would be an interesting future work.
Model analysis.
We now analyze several properties of the two models.
For HIS, we compare the two algorithms described in  3.1


 )
 , (



 Random Pagerank
 MaxD AL1 MaxD AL2

 Top k (a) Coauthor 2x 104 Random Pagerank
 MaxD AL1 MaxD AL2 )
 , (












 )
 , (

 Random Pagerank
 MaxD AL1 MaxD AL2

 Top k (b) Twitter








 Top k (c) Inventor Figure 7: Model analysis for MaxD on the three networks.
on the three data-sets.
The two algorithms produce the same result, but the improved algorithm achieves an 25  speedup, comparing with the basic algorithm (as shown in Table 2).
We further examine how the tunable parameters   and   in uence the performance of information spread on the Coauthor and Twitter networks.
Figure
 two parameters varied (by  xing k = 200).
The performance is insensitive to the different parameter settings.
For the MaxD model, we compare different algorithms by the minimal cut described in   3.2.
Figure 7 shows the performance of the different algorithms in Model 2.
The MaxD-AL2 algorithm outperforms the other algorithms in terms of Q(VSH, C).
This is consistent with the theoretical analysis in  3.2.
MaxD-AL1 is close to MaxD-AL2 for a small k (k < 10), but the difference quickly becomes wider when increasing the value of k.
Now we present a case study on the Inventor network to qualitatively demonstrate the effectiveness of the proposed models.
Table 3 lists top-5 structural hole spanners detected by our proposed algorithms from the Inventor network.
We  nd that most of the detected structural hole spanners have been working in more than one job.
The exception is T. Kondo and S. Yamazaki.
The former is the senior vice president of Sony and holds patents on semiconductor, image processing, and mobile devices.
On each topic, he collaborated with people from different companies/universities.
S.
Yamazaki is the president of SEL (Semiconductor Energy Laboratory).
He is a Japanese inventor in the  eld of computer science and solid-state physics.
He holds over 2,680 U.S. utility patents.
Part of his patents are in relation to SEL and many others are named individually.
Another phenomenon worth mentioning is that HIS seems to select people with the highest PageRank scores, while MaxD tends to select people who have been working on more jobs.
This result is consistent with the intuitions behind the two models.
We now turn to evaluate the performance improvement when applying the output of mining structural hole spanners to the two social applications: community kernel detection and link prediction.
Community kernel detection.
For fair comparison, we still use the benchmark coauthor network used in [32] to evaluate the performance of community kernel detection in terms of precision, recall, and F1-score.
The benchmark network is comprised of authors who have published papers on top conferences in  ve research ar-eas:5 Arti cial Intelligence (AI), Databases (DB), Distributed and
 duced in  2.
Table 3: Top-5 structural hole nodes discovered by our algorithms on the Inventor network.
Names with   are inventors with the highest (top-5) PageRank scores.
Inventor E. Boyden HIS MaxD   A. Czarnik T. Kondo* A. Nishio E. Nowak* A. Rofougaran M. Rofougaran S. Yamazaki*                   Title Professor (MIT Media Lab) Associate Professor (MIT McGovern Inst.)
Group Leader (Synthetic Neurobiology) Founder and Manager (Protia, LLC) Visiting Professor (University of Nevada) Co-Founder (Chief Scienti c Of cer) Senior vice president (Sony Corporation) Director of Operations (WBI) Director of Department Responsible (IDA) Senior vice President (Walt Disney) Secretary of Trustees (The New York Eye) Consultant (various wireless companies) Co-founder (Innovent System Corp.) Leader (RF-CMOS).
Engineering Director (Broadcom Corp.) Co-founder(Iran Today Publications) President and majority shareholder (SEL) Parallel Computing (DP), Graphics, Vision and HCI (GV), and Networks, Communications and Performance (NC).
For example, for DB, the conferences include VLDB, SIGMOD, PODS, ICDE, ICDT, and EDBT.
The community of program committee (PC) members of those conferences in each area is viewed as the ground truth for quantitatively evaluating the performance of community kernel detection.
We empirically set the value of k as 100.
By solving Eq.
10 with the similar algorithms as that in [32], we compare the community detection performance of WEBA with and without the help of structural hole.
The performance is shown in Figure 9.
Clear improvements on the coauthor data set can be obtained.
In terms of F1-score, the average improvement is about
 Link prediction.
We also apply the discovered structural holes spanners to help link prediction in the two networks: Slashdot and Mobile.
Speci cally, we  rst use the Newman s algorithm [26] to discover communities in each network and then use the proposed models to mine top-k structural holes spanners.
Then we de ne correlation features based on the discovered structural hole spanners and add those de ned features into the prediction algorithm PFG [29].
We use half of the data for training the PFG algorithm and the rest for testing its prediction performance.
Table 4 lists the prediction performance of PFG before and after adding the structural holes-based features.
It can be seen that by incorporating the structural holes-based features, the performance of predicting the

 e r o c s  





 WeBA WeBA(HIS) WeBA(MaxD) Precision Recall F1 score Figure 9: Performance of WEBA for detecting kernel communities with and without the help of structural holes mining.
Table 4: Performance of the PFG algorithm for predicting the type of social relationships before and after combining the structural hole-based features.
Dataset Algorithm Mobile Slashdot



 PFG(MaxD) PFG(MaxD) PFG(MaxD)



 PFG(MaxD) PFG(MaxD) PFG(MaxD)
 -





-





Precision Recall



























 F1-score













 type of social relationships by PFG is clearly improved (+1.4-5.8% by F1-score; t-test, p < 0.01).
We also evaluate how the performance is affected by the number of k. On the Mobile data, as the network is relatively small, we set k as 5, 15, 25.
On the Slashdot data, we set k as 100, 150, 200.
The results show that the performance is indeed in uenced by different settings of the value for k, but with all the different settings, the performance of link prediction by PFG can be improved.
This con rms the effectiveness of the proposed structural hole mining models.
Structural holes.
The concept of structural hole is  rst introduced in [4] and further elaborated in literature [1, 5, 6].
There have been a few works on mining structural holes from social networks.
Goyal and Vega-Redondo [12] propose a model of network formation to study how structural holes are formed in social network.
They consider a model in which a node u potentially bene ts from serving as an intermediary between nodes v and w even when it resides on an arbitrarily long v-w path.
Based on the model, they obtain a star network.
However, in real world, many networks are not necessarily of the star topology.
Buskens and van de Rijt [7] uses the game theory to model the network formation with structural holes.
Kleinberg et al. [18] study the strategic and dynamic aspect to the theory of structural hole.
They extend Burt s work [5] by modeling how social networks change over time if everyone is vying for those bridging positions.
In this work, we study a novel problem of mining structural hole spanners in social networks, which can be considered as the reverse process of the study of strategic network formation with structural holes [7, 12, 18].
Information diffusion.
Our work is also related to a growing body of research on information diffusion.
For example, Gruhl et al. [13] study the dynamics of information propagation in environments of low-overhead personal publishing on a web blog data.
They apply the theory of infectious diseases to model the  topic   ow on web blogs.
Kumar et al. [19] explore the formation of the structure of conversations in social networks and propose a mathematical model to generate the basic structure underlying conversation behaviors.
Liben-Nowell and Kleinberg [21] investigate the information spreading processes at a person-to-person level using methods to reconstruct the propagation of massively circulated Internet chain letters.
They  nd the progress of the chain letters proceeds in a narrow but very deep treelike pattern and propose a probabilistic model based on network clustering and asynchronous response times to produce the tree.
Yang et al. [33] analyze how information spread on Twitter via the retweeting behavior and propose a semi-supervised framework to predict users  retweet behaviors.
Myers et al. [25] study how the process of information diffusion is in u-enced by external sources.
Matsubara et al. [23] propose a model called SPIKEM to model the rise and fall patterns of in uence propagation.
However, all these works do not consider how structural holes in uence the procedure of information diffusion.
To the best of our knowledge, this is the  rst work to systematically study the problem of mining structural hole spanners in social networks.
In this paper, we study the novel problem of mining structural hole spanners in large networks.
We precisely de ne the problem of top-k structural hole detection and provide an objective (quality) function to formalize the problem.
We develop two instantiation models for the objective function based on the principles of information  ow.
For both models, we provide theoretical analysis and proofs for their hardness, and develop ef cient algorithms to solve with provable approximation guarantees.
We validate the effectiveness and ef ciency of the proposed models on three different types of networks.
We also apply the detected structural hole spanners by the proposed models to help several social networking applications, which further demonstrate its effectiveness.
Structural hole is an important concept in social theory and it relates to a wide range of indicators of social success.
As for the future work, it would be intriguing to combine the content information with the user network information and design a uni ed model for mining structural hole spanners.
It is also interesting to further improve the proposed algorithms.
For example the MaxD-AL2 algorithm still suffers from the high computational cost (as shown in Table 2) and this HIS model is still lack of a theoretical guarantee.
In addition, though the MaxD model uses the information diffusion in the evaluation, but not really uses the process to identify the structural hole spanners.
How to elegantly incorporate the information diffusion process into the MaxD model would be a very interesting research topic.
Another potential issue is to systematically study how structural holes can help the other social networking applications (e.g., recommendation).
cussions.
The work is supported by the Natural Science Foundation of China (No.
61222212, 61073073).
