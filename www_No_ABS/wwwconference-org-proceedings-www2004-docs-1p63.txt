Effective user access to Web sites is a serious concern for website designers and developers of Web client applications such as Web browsers.
From the user s perspective, the needs for site access fall into two broad categories: a) finding a site that the user has never visited before (search), and b) returning to a site that the user has visited in the past (revisitation).
The search problem is mainly addressed is important but we do not address it any further in this paper.
The revisitation problem is specific to each user as it depends on the user s history of web usage.
Furthermore, browsing generally through search engine technology.
It involves multiple sites as the Web is a highly hyperlinked environment.
Thus revisitation support is naturally best provided, not by individual websites, but through features of the browser, including History, Bookmarks, URL auto-completion, address bar menu, and the ubiquitous Back and Forward buttons.
None of the existing approaches is completely successful   to the extent that some web users, even when returning to a site that they have visited before, find it faster to repeat the online search than to find the URL locally.
What are the design and implementation issues that make the current revisitation approaches suboptimal?
This is the question that we set out to address in our research programme.
A number of empirical studies, with varying focus and scope, have been performed to learn how users browse the Web.
Work by Catledge & Pitkow [2] and Cockburn & McKenzie [6], for example, was aimed at understanding navigation strategies, and discovering navigation patterns in the use of the Web.
Tauscher & Greenberg [14] and McKenzie & Cockburn [9] have focused more specifically on page revisitation, as a particularly prevalent user activity.
This research has provided insight into the underlying issues [4] and investigated alternative designs for the Back behaviour [5],[7] as well as proposing more radical changes to the navigation support features, such as a tighter integration of History, Bookmarks, and Back/Forward (as demonstrated by WebView) [4],[3],[8].
In our own research, we have reexamined Web usage issues through contextual studies.
As a result of these studies, we identified an opportunity to enhance support for page revisitation with a SmartBack feature which enables users to jump directly to key pages in the navigation trail.
At the same time we modified the Back button to provide access to the complete set of pages seen in the navigation session.
These two features together provide a novel approach to a number of usability aspects that have been raised by the previous research on alternative Back navigation models [5],[7].
In the following sections we first provide a detailed overview of earlier framework for further discussion.
We describe the exploratory user research that we undertook to study Web usage patterns and the effectiveness of the existing navigation support.
We describe in detail the research and establish the Copyright is held by the author/owner(s).
project with Microsoft Research Ltd, Cambridge, UK.
button.
In Section 5 we present the results of a user study aimed at assessing the usability of the SmartBack feature and the quality of the user experience.
We conclude by discussing alternative implementations of SmartBack, informed by the usability study.
The Back button is a standard browser feature that allows users to revisit recently seen pages sequentially, in what is essentially a reverse order of page visits.
The Back button is typically enhanced by a drop-down menu showing the pages that are accessible by Back navigation and, as such, it provides a direct, non-sequential access to those pages (Figure 1).
However, navigation through a hyperlinked environment, with possible revisitations of pages, conceptually maps onto a tree structure.
For example, alternate use of links and the Back button creates  hubs , the branching points, and  spokes , the navigation tree branches.
Thus, some type of linearization or reduction of the navigation structure is required in order to provide a simple, list based representation of the navigation history.
Standard browsers use a stack as the history model.
As the user accesses new pages they are added on top of a stack.
When the user revisits the history through Back, pages are popped off the stack.
Consequently, only the most recent tree branch is accessible for revisitation through Back   other branches cannot be accessed (see Figure 2 and Table 1).
As pointed out by Greenberg & Cockburn [7]:  The [stack] model is poorly communicated to users through the interface.
Consequently, people are surprised when pages  disappear .  On the positive side, the removal of previous branches may in fact be a way of pruning irrelevant parts of the navigation and thus enable efficient access to the hub pages.
Alternative history models, described in [7] as recency-based models, aim at providing access to all the pages in the history.
However, while maintaining and exposing the history list in a menu interface is relatively easy, designing an effective button interface for such a list is a challenge.
To illustrate this, we give examples of two alternative models for organizing the history list: Temporal without duplicates (Temporal)   Newly visited pages are added to the top of the list.
Pressing the Back button, i.e., revisiting the pages in the history, does not eliminate pages from the list but simply moves a pointer down the list.
If the user follows a hyperlink from a revisited page, that page becomes a  hub .
It is moved up to the top of the list (i.e., removed from the previous location) and the newly accessed page is added above it.
Temporal with duplicates   This history model is the same as the temporal model described above except that the newly formed hubs are not removed from their original place in the list but rather duplicated at the top of the list, before adding the new page.
Table 1.
Order in which the pages from the navigation path in Figure 2 are accessible through the Back button for each of the three models: stack, temporal without duplicates (keeping the latest occurrence of hubs) and temporal with duplicate pages.
Grayed out are pages that are not accessible through Back.
Temporal Sequence (reverse) Stack Model Temporal without duplicates Temporal with duplicates



























































 Figure 1.
MS Internet Explorer with standard Back and Forward buttons and Back drop down menu showing the pages available through the stack model.
Figure 2.
Web navigation path, with indication of pages that are accessible through Back with the standard stack model.
Pages 1 and 6 are  hubs .
The tree branches that start with page 7 and 9 are  spokes  for the hub at page 6.
with hub-and-spoke enhancement  model defined by Greenberg & Cockburn [7].
As such it is very different from the temporal model explored in [5], which maintains the order in which the pages are viewed (even during history navigation), rather than the order in which they were first accessed.
While the temporal model with duplicates provides the accurate order in which the pages were viewed it has a disadvantage of requiring longer traversal to reach hubs, or support distant parent page revisitation.
This has been empirically verified in the study reported in [7] that compares it with the use of stack history.
Despite the disadvantages of the stack model, user studies have repeatedly shown that the use of the Back button dominates navigation activities.
Catledge & Pitkow [2] showed that page visitation by Back accounts for 41% of all navigation acts.
That makes it the second most frequent way of accessing pages after link navigation (52%).
In a study by Tauscher & Greenberg [14] it was confirmed that link navigation is the most frequent activity, comprising 50% of navigation acts, and that Back is the second most frequent, accounting for 30% of navigations.
The use of other page revisitation features, such as Bookmarks (hotlists or favourites) or the history list was infrequent in both studies: bookmarks 2.7% and 2.3% and history only 0.7% and 0.1% of all navigation acts, respectively.
From the under-use of history and menu lists, it is clear that the preferred interface for back navigation is the Back button, although it has been shown in [7] that using history menus can improve the efficiency of browsing.
From studies so far it is not clear how much of the reported Back navigation is simply  transient  viewing of pages due to the to underlying hyperlink structure as opposed intentional revisitation for other reasons, e.g., reading and information consumption.
While serious consideration has been given to changing the behaviour of Back in order to support revisitation of all recently viewed pages by the user and not just those retained by the stack model, Greenberg and Cockburn [7] point out that certain types of navigation patterns, like  hub and spoke  navigation, may not be well supported by the altered Back.
Indeed, temporal models that include more or less strict order of page visits would require that the user traverses a long sequence of pages before reaching the hub.
This suggests that some pages are particularly important for their key role in the user s navigation pattern.
Thus, understanding users  browsing activities and the structure of the resulting navigation graphs is essential for making effective design decisions.
Research by Ayers & Stasko [1] and Cockburn et al.
[3], focuses on two-dimensional visualizations of browser sessions and provides good insight into the structure of user s navigation paths.
For example, the work on the WebView system [3] recognizes the importance of hubs and spokes and uses them as the basis for displaying user s navigation history.
Similarly, the visual displays in MosaicG [1] present a tree navigation structure, clearly indicating the branching points in the user s navigation.
With each use of a Bookmark this system associates a new navigation tree, thus indicating the onset of a new browsing activity.
In order to understand users  Web activities in further detail, we conducted an exploratory user study in which we monitored Web usage through extensive logging and learned about user s tasks through interviews.
Based on the findings we set on designing an enhancement to the existing Back navigation feature.
Table 2.
List of logged navigation events with statistics for individual participants


















































 (22.7%)
 (6.6%)








 (42.5%)












































 (2.9%)

 (0.2%) (1.1%)



 (11.2%)







 (0.5%) (1.6%)



 (10.7%)





























 Percentage of All Navigation Actions





 Figure 3.
Distribution of navigation events recorded by the logger.
FORM SUBMISSION refers to executing a form on a Web page, such as a search query or login.
SESSION START includes all starts of browser applications and windows (intentional by the users or automatic pop-up windows).
TYPED refers to typing a URL into the address bar, including use of Internet Explorer s AutoComplete feature.
Our user study involved 9 participants from the Cambridgeshire County Council, for a period of 3 weeks.
In pre-screening interviews most of the participants were characterized as knowledge workers.
For observing the participants, we applied an innovative approach that combined a quantitative method, comprising automated client-side logging of web usage, with a qualitative approach, involving followup interviews with each participant twice a week, to verify the quantitative data captured in log files.
The interviews were video taped and used to support data analysis and interpretation.
This approach enabled us to capture details of every web activity, while also gaining an understanding of the contexts in which they were carried out.
We further supplemented it with an observation of the participants  work environments, to understand factors such as their interactions with colleagues.
All the participants were using the standard MS Internet Explorer (IE) browser.
We logging program on each participant s PC which recorded selected events from IE, and captured an image of every page visited (although the latter was subject to privacy constraints).
The images proved to be an extremely useful supplement to the text logs, helping us to form an initial understanding of the participant s web activities, prior to an to draw reliable conclusions about the participants  Web activities.
interview.
This approach enabled us installed a
 Similarly to the earlier logging studies [2],[6],[14], we found a high level of page revisitation.
Much of that can be accounted for by usage of the Back button, especially because of the presence of  hub and spoke  navigation.
Figure 4.
Examples of linear navigation trails.
Each page visit is annotated by a URL Id (number in the blue box), assigned relative to the session.
Thus, thumbnails annotated by different numbers correspond to distinct URLs.
In the presented linear trails no revisitation of pages has occurred (there are not repeated URL Ids in the sequence).
Figure 5.
Example of the navigation session that includes two WebTrails, both indicating hub and spoke navigation as the branching points in the navigation tree.
Quantitative aspects of the users  navigation are summarized in Table 2, Figure 3, and Table 3.
We note that, besides the standard hyperlink and Back navigations, which together account for 65.2% of navigation actions, other means of navigation are taking a more prominent role than observed in the early studies discussed in Section 2 [2],[14].
While the page loading associated with the start of a new IE window is not always under the user s control (e.g., pop-ups) we can, for the purpose of this discussion, count such events towards LINK NAVIGATION.
Thus another 11.2% are added to the above figure, leaving the remaining events to other ways of initiating page visitations: executing Home link, accessing bookmarks, typing the URL into the address box and similar.
the user exploratory study Navigation properties Nodes in the navigation trails Number of trails

 Hub nodes (% of all nodes)
 (8.4%) Page visit properties Total visits page (all navigations ) Link Navigation (% of all navigations) Back button clicks (% of all navigations)

 (42.5%)
 (22.7%)

 (64%) Back button to hubs (% of all back clicks) Number of spokes In particular, the OTHER category includes events associated with dynamic loading of a new page due to embedded scripts and URL selections that could not be tracked by the logger, such as the use of the address box drop down menu that provides access to recently typed page URLs.
The statistics in Table 3 reveal properties of the user s navigation sequences.
We based the analysis on the notion of a navigation trail, i.e., the Web Trails introduced in [10],[11].
We consider the user s navigation history as a set of navigation trails, represented as trees, where each trail commences with the user typing in a URL, or using a bookmark or any other list of links to access a
 Since we recorded detailed information about browser windows, we can identify windows that are automatically spawned off following a user s click on a hyperlink.
Navigation paths in such windows are merged with the main navigation tree.
Web Trails are thus not limited to individual browser windows but rather represent a coherent navigation activity independent from the window management.
We observe that most of the navigation trails are linear, involving only forward link navigation (Table 3, Figure 4).
However, they do assume a tree structure as the user revisits a page and follows a new link, at which point that page is annotated as a hub (Figure
 users logs, about 8.4% (339 out of 4038) of all graph nodes are, in fact, hubs.
Furthermore, 1133 (28.1%) out of 5235 page visits in total are visits to hub pages (comprising link navigation and back button navigation to the hub node).
Focusing on revisits only, our analysis shows that hubs (339 of them) are revisited 626 is on average 1.8 revisitations per hub.
Thus, the resulting navigation trails are most likely to have up to three branches from the hub (note, the first branch is created on the first visit; on the next visit, which counts for a revisit, a new branch is created).
Out of total 1,211 Back navigations in the log, 775 (64%) are direct revisitations of the hub, leaving the remaining 436 (36%) as back navigation for traversing the branches in the graphs (Table 2).
In terms of other mechanisms used to return to pages, the participants were comfortable with typing-in URLs, especially with the assistance of AutoComplete, as noted before.
They were also able to edit them appropriately in order to navigate (from an individual page to the site home page, for example).
Only three of times, which Figure 6: Navigation trails, indicating the pages that are accessible through the SmartBack (wider red border) and through the Back button based on the stack model (dashed purple border).
Note, SmartBack targets are also accessible through Back.
nine participants made regular use of Favourites (IE bookmarks) for returning to pages, and many participants seemed to feel guilty about not using Favourites more.
Based on the above observations and our awareness of the issues with the enhanced temporal Back model, we embarked on the design of SmartBack, a feature that provides direct access to key pages in the navigation session.
Evidence that hub and spoke navigation accounts for common user activities suggests that quick and reliable access to automatically detected hubs would be beneficial.
Furthermore, pages associated with a particular user s task, such as search or exploration of a site, also present themselves as good candidates for quick access.
This idea has been explored in the Safari browser s SnapBack feature [13] which marks a) typed-in URL pages and b) the result list of a search engine (Google) as always accessible, no matter which page the user is currently viewing.
The Rewind feature in the Opera browser [12] also supports revisitation to selected pages from the navigation session but the algorithm has not been described in the literature.
We are not aware of any usability studies related to these features.
An ideal system would reliably predict which pages might be revisited by the user in the general browsing scenario and during specialized tasks.
However, our analysis of the logs shows no regularity among hubs and the way they are generated.
A generalization across users and unrelated navigation sessions is most likely not achievable.
On the other hand, we noticed that individual users revisit pages and use them as hubs in multiple sessions.
Thus, persisting  hub-ness  as a URL property could be beneficial.
Figure 7.
SmartBack user Interface.
Top: SmartBack button.
Middle: Back drop-down menu with list of pages seen in the window.
Hubs are marked with a green SmartBack icon, Search result pages with a magnifying glass icon, and typed-in URLs with an  ABC  icon.
Bottom: Link bar with SmartBack targets.
A thumbnail image is shown when the mouse hovers over a link.
Table 4.
Potential for reducing Back clicks if SmartBack is used to access hubs.
We show cumulative  savings  if SmartBack targets are hubs in the current trail, results of form submissions, and hubs persisted from previous trails.
This is compared with the maximum reduction achieved by a perfect predictor of hubs   where there is no need to revisit a page to make it a hub.
hubs +forms +persist perfect



 Participants








 Total






























 trails; such as


 The SmartBack feature is designed to identify and automatically mark the following pages for quick access: (1) hubs, (2) results of including search result pages, and (3) form submissions, beginnings of navigation typed-in URLs, bookmarks or links from similar features that help the user access pages on the Web.
We expect that using SmartBack will reduce the need for multiple Back clicks to reach key pages and thus simplify the navigation.
In Figure 6 we illustrate the difference between SmartBack and Back navigation.
It is obvious that SmartBack provides  savings  in Back traversal of pages for all the branches in the navigation tree between the first (earliest) and the last (latest) branch.
If hubs could be determined in advance without a need to revisit a page in order to create a hub, the savings would be even greater.
Our analysis of the navigation trails shows a potential for achieving a reduction of 134 (11%) of all SmartBack button clicks by a perfect predictor of hubs.
If we attempt to approximate hub prediction by designating search results as hubs and by persisting the status of a hub across navigation trails, SmartBack can achieve up to 40% of the savings realized by an ideal hub predictor (Table
 However, while one may indeed want to justify the deployment of the SmartBack feature in terms of the quantitative effects on the user s navigation, we expect that its true value will be in convenience to the user, i.e., the quality of the experience, assuming that the user can easily understand how to use it.
SmartBack promotes the concept of page importance in the browsing context and we expect that it will be used to access hubs in general (regardless of how many clicks away the page is), replacing the use of the Back button in some instances.
Implemented to access trails and hubs across windows, it also opens possibilities for new strategies in the management of navigation tasks.
We exposed the SmartBack feature in two alternative forms of the user interfaces (see Figure 7): -SmartBack button.
By pressing the button the user can sequentially revisit all key pages within the window, or across windows.
SmartBack Link Bar.
Exposes SmartBack targets as links in a link bar, showing the titles of the latest 4-5 target pages and providing a thumbnail image of the page on mouse hover.
The user can access a desired page directly by clicking on the link.
-
SmartBack can be implemented in combination with various history models of Back navigation.
In our implementation the two features, Back and SmartBack, work using the same underlying history model, which has been described in Section 2 as temporal without duplicates.
As the user accesses new pages, they are added on top of the history list and can be revisited sequentially using Back.
Revisiting pages in the list using Back does not change the history list   we only maintain a pointer to the location in the list.
The Back and Forward buttons thus allow the user to visit pages up and down the list.
Once the user selects a page and navigates to a 68new page, the page from the list is turned into a hub and moved to the top of the list as well as the newly visited page.
If the user accesses a page in the history list via SmartBack, that page is temporarily added to the history list.
This way, the user can use Back to undo the last SmartBack jump.
An alternative implementation was considered in which all the SmartBack history visits are placed temporarily on top of the history list.
When the user finds the page and navigates away, the temporarily held SmartBack visits are erased from the history list before adding new pages at the top.
In the following section we describe a user study that we conducted in order to validate our design decisions, and to assess the usefulness of the feature to users.
In order to assess the usability of SmartBack we designed a field study that involved deployment of the prototype in the workplace and at home.
The workplace chosen was a Chartered Accountancy Firm, an SME with 7 employees, including the owner.
The family chosen for the home study comprised 4 members: Mum, Dad, Boy of 16 and Girl of 11.
We obtained sufficient data for the study from five participants in the accounting firm, in the following sections referred to as participants L, M, N, O, and P, and from Mum, Dad and the Boy of the family, referred to as participants Q, R, and S.
As in the study described in Section 3, we logged participants  activities and interviewed them about SmartBack.
In fact, SmartBack was deployed with a couple of additional browser features, but we have extracted the information that is relevant to the SmartBack evaluation and interpreted it in view of the entire set up.
All participants were using Internet Explorer 6.1 running on Windows XP.
The set of browser events captured in this study was very similar to the events observed in the first field study.
This enabled us to perform a comparison of Web usage across two sets of users, 12 months apart.
For the study the SmartBack prototype was set with the following parameters: - User interface: SmartBack button -- User interface: SmartBack button without drop down menu Back history model: temporal without duplicates Cross-window persistence of SmartBack activated only for the last week of the study.
targets was
 The qualitative experience of the users is summarized in the following three findings: (i) SmartBack is useful in hub and spoke navigation, specifically for navigating search and portal results.
Our interview data found that users were generally pleased with the value of SmartBack.
In particular, user M in the workplace study articulated his satisfaction referring to his initial experience and the subsequent uses:  The first time I used it, I clicked on it and it took me back about
 very impressed.
[ ] I ve used the SmartBack quite a few times and it is useful because it saves going back, back, back, back, back and so even if it doesn t take you back to where you want, it takes you back nearer to where you want.
It very rarely takes you too far back to then go forward again, and if it does, it takes you to say Google search, which is where you started, and then you just click on the thing again.
So you might have to go back, and then one forward.
So that is better than going [back, back, back].
A worthwhile feature I would say.  (ii) Users who are adept at using SmartBack have problems understanding how a hub is created Some aspects of the SmartBack behaviour confused participants.
Those who knew that it facilitates hub and spoke navigation were still confused that one has to  create  a hub before one can jump back to it, and want it to work first time.
Participant S reiterated the benefit of using SmartBack to get him near to the location he wants to be at.
From that point he can retrace the path to the desired page:  SmartBack I use quite a lot.
It tends to get used and then sometimes you have to go forward or back to get to the right page you are looking for.
It works 80% of the time, I d say.
There [are] only a few instances when it doesn t.  However, he is also confused that SmartBack doesn t create a hub as soon as he visits a page with a list of links, for example.
(iii) Users for whom SmartBack does not demonstrate its usefulness within a couple of tries, give up using it.
The prototype did not fully support navigation through sites with frames and login procedures.
For participants N and O it did not behave as expected and they stopped using it.
Participant N says:  I haven t used [SmartBack] as much.
I think perhaps one time I tried to use it and it didn t do what I expected it to so that put me off. 
 Statistical analysis of the user logs indicates that SmartBack has been adopted by the users as the means for accessing hubs.
Tables 5-7 present the supporting statistics for the following findings:
 styles.
Interestingly, in contrast to the participants of the exploratory study (Tables 2 and 4), we observe that participants of the SmartBack study performed hub and spoke and back navigation much less frequently.
Indeed, only 191 (2.4%) of all the nodes in the navigation structure are hubs; thus only 191 or fewer navigation trails involve hub and spoke navigation (Table 5).
There is a total of 455 branches, some of which provide opportunities for using SmartBack.
From the data we estimated that the average number of nodes in the branches where SmartBack could offer some reduction of back navigation (all the branches except the last one) is 1.68.
We used this to estimate the number of Back click reductions achieved by the participants.
with Back.
The logs show that the participants performed back
 SmartBack 81 times (Table 6).
The use of SmartBack is approximately equivalent to 136 clicks (81 uses with 1.68 clicks saved per each instance).
Considering that Back was used only 226 times, this figure represents a significant contribution to the back navigation an equivalent of 60% of navigations realized by 226 Back clicks.
Furthermore, this also represents a significant portion of the back click reduction that can be achieved if participants used the SmartBack optimally.
As Table 7 shows, the savings of SmartBack with access to hubs and search results amount to
 clicks (lower bound, if all branches had only 1 node) and expected 136 clicks (1.68 nodes per branch on average) is close to the possible maximum.
navigation.
Most interestingly, although the navigation styles of the participants in two studies are rather different, as reflected in the number of nodes, trails, and hubs, Table 6 shows that the average number of visits to a hub is very similar: 4.4 visits per hub in the SmartBack user study, compared with 4.6 visits in the previous exploratory user study.
While Back navigation there accounted for 68.4% of hub visits, in the SmartBack study both Back and SmartBack visits comprise 60% of all hub visits, 44.1% by Back and
 taken its share of visits to the hubs and furthermore, looking at the backward navigation activities in particular, it accounts for 26.4% (81 of total 307 back navigation activities) of them.
The usability study indicated that there is space for improving both the design and the implementation of the SmartBack feature.
We expect that addressing frame navigations and secure site visitations will already improve the usability and reduce the risk that users will stop using the feature before experiencing its benefits.
Assuming that in practice there is no opportunity for in-depth introduction of users to the feature, we need to improve the learnability of SmartBack by enhancing its user interface.
We expect that a more explicit exposure of SmartBack targets, as it has been achieved through the link bar, will improve the user s understanding of the feature.
This has been already confirmed in the pilot user study that we have recently conducted.
Finally, we should explore the opportunities for engaging users in the process of defining SmartBack targets.
It may be desirable to have an option for an explicit  keep  function that will allow the user to nominate SmartBack targets for future use.
In this paper we presented SmartBack, a novel feature for supporting the users in revisiting pages while browsing the Web.
From the literature and our own research efforts we became aware of the deficiencies and benefits of the current Back navigation features in browsers.
The general concern is that users do not have a reliable access to pages they have seen within the navigation session.
On the other hand, if these pages are to be accessed through a simple interface, like a Back button, we need to identify the history model that will Table 5: Statistics about navigation trails and page visits for the SmartBack user study Navigation properties Nodes in the navigation trails
 Page visit properties Total page visits (all navigations )
 Number of trails Hub nodes (% of all nodes) Number of spokes

 (2.4%)
 Link Navigation (% of all navigations)
 (65.4%) Back button clicks (% of all navigations) SmartBack button (% of all navigations)
 (4.9%)
 (1.5%) Table 6: Usage of Back and SmartBack to access hubs



 Total Hubs Total Hub Visits (Link Navigation and Back Navigation SmartBack (% of all visits)

 (4.4 /hub)

 (4.6 /hub)
 (15.8%)  

 Back (% of all hub visits) (68.4%) (44.1%) Table 7: Reduction of Back clicks that is achievable by the use of SmartBack if the targets include hubs within the navigation trail, forms, and hubs persisted from previous navigation trails.
Participants


































 hubs +forms +persist perfect Total
 (20.3%)
 (43.1%)
 (49.5%)
 be effective in (1) providing access to the complete history and (2) supporting standard navigation patterns, like hub and spoke.
We conducted an exploratory study which confirmed that users engage in hub and spoke navigation and have a need for efficient access to hubs and task-related pages.
We designed SmartBack, the feature that addresses both concerns and can be implemented as a single button or multiple links on a Link bar (essentially multiple buttons).
We conducted a usability study that confirmed the usefulness of the feature and provided information for future redesign.
considers the issue of site and page revisitation from a wider perspective.
In future publications we will present alternative approaches to achieving both the comprehensive coverage of the user s navigation and the efficient access to the pages needed by the user.
