The data-intensive and dynamic structure of modern WIS call for a rigorous development process, that takes into account the fact that information from various heterogeneous sources needs to be delivered to a variety of users using a variety of platforms and network connections.
Several frameworks for this already exist, e.g.
WebML [2] and Hera [3].
This paper demonstrates the software application called the Hera Presentation Generator (HPG) and its role in the (semiautomatic) generation of hypermedia presentations according to this framework.
The Hera methodology distinguishes generation of a WIS:
 collected from different sources and converted to a uniform representation (beyond the scope of this paper).
two phases
 is transformed into a hypermedia presentation in a format suited to a user.
This phase has two modeling aspects: in the a.
The Application Layer defines the abstract hypermedia (navigation) view over the data in terms of an Application Model (AM).
b.
The Presentation Layer defines the presentation layout that together with the definitions from the Application Layer is needed for the generation of a presentation for a concrete platform.
Copyright is held by the author/owner(s).
The presentation generation phase of the Hera methodology has been implemented as a Java application with connections to Microsoft Visio, called the Hera Presentation Generator (HPG).
This section gives an overview of this application.
The first step of creating a presentation is the definition of a Conceptual Model (CM, a definition of the data domain) and an Application Model (AM).
The CM consists of concepts and concept properties that can be used to link concepts to media items, or to define relations between concepts.
Figure 1 shows an example CM, based on the database of the Topia project1, containing data about art from the Rijksmuseum2, created with HPG's CM Builder using a specially designed Microsoft Visio template.
Concepts are represented by ovals, the media items by rectangles, and the concept properties by arrows.
Figure 1: Example Conceptual Model The designer can create an AM based on the CM to define the structure of a presentation.
For this, the AM Builder has been developed on the basis of another Visio template.
An AM defines the navigational structure of the presentation (at schema level).
It consists of slices (a slice is a meaningful representation of some media items) and slice properties that together define the navigation vocabulary.
There are two types of slice properties: slice composition (a slice encloses another slice) and slice navigation (a slice is the anchor of a hyperlink to another slice).
To support user adaptation, slices can have appearance conditions.
These conditions enable two kinds of adaptation: link hiding and conditional inclusion of fragments [1] (slices, in this context).
Both the AMs and the CMs created using the Builders can be exported to RDFS format, for use with the HPG core application.
Figure 2 shows an example AM, with two top-level slices (the large rounded rectangles with the circle segments) that each have a number of nested slices (the small ovals), and examples of slice navigation (represented by arrows).
2 http://www.rijksmuseum.nl



 Figure 2: Example Application Model
 In Application Model Adaptation the first part of adaptation is carried out by adapting the AM to a user/platform profile.
The appearance conditions in the AM are compared to the values in this profile, and slices and links that do not have their conditions fulfilled are removed from the presentation.
In Application Model Instance Transformation Generation an XSLT stylesheet is created that is used by the next step.
In Application Model Instance Generation the stylesheet from the previous step is used to instantiate (fill) the AM with data from a CMI (input data) chosen by the user.
The result of this step is the Application Model Instance (AMI).
In Presentation Data Generation the AMI is converted into a presentation in the format selected by the user (currently HTML and WML are supported).
Optionally, a Presentation Model (PM) can be used to adapt the layout of the presentation, e.g.
to user preferences.
the user can view the presentation in HTML or WML.
Figure 4: Screenshots of generated presentations

 HPG, the Hera Presentation Generator, allows users to quickly generate hypermedia presentations, and to customize them by adaptation to user/platform profiles, and by supporting various output formats.
In the future, we plan to create presentations dynamically (i.e. we only create a part when requested by the user instead of creating the entire presentation beforehand).
This will facilitate the presentation based on the user s actions) and the support for more advanced (compared to hyperlink navigation) user interaction, e.g.
allowing the user to submit forms.
The new dynamic version of HPG will be implemented in Java, using the Jena and Sesame APIs.
