The WWW is an important, widely used information technology.
The use of a standard Web-based infrastructure, that is a Web server and browser, to publish material on the Web renders the published information read-only [1].
There have been a lot of work to develop a framework for  exible WWW use.
In this paper, we present a mechanism that enables  exi-ble HTML text modi cation for a writable web, called Web browser-based Direct Editing (Wedit), and implement its application in Web-based information sharing.
Wedit is an inexpensive, easily installed mechanism since it was developed using conventional technologies, i.e., JavaScript, Perl, and HTML.
Wedit enables users to edit text using a Web browser.
We developed an information sharing system called Copyright is held by the author/owner(s).
Proxy Agent-based Information Sharing (PAIS) using Wedit based on proxy agents.
PAIS is implemented using our original agent framework MiLog [2].
This paper focuses on additional information sharing using PAIS.
The additional information in this paper means annotations and comments for texts on Web page.
Our work enables dynamic information sharing on the Web.
Wedit enables users to replace, cut, and add plain text and HTML tags.
By applying Wedit, when a user wants to edit a Web page immediately, they select a text using a mouse-selecting, and then edit the text in a dialogue window (Editor Window).
All Wedit processes can be carried out using an existing Web browser.
Accordingly, users do not need to install expensive authoring tools on their Web browser.
Wedit is written using JavaScript, Perl CGI scripts, and HTML.
JavaScript is used to deal with several types of events (e.g., clicking the mouse).
CGI based on Perl is used to modify the text and generate a new HTML text.
In order to incorporate Wedit, we do not need to add extra tags and scripts to a HTML text which might be edited.
Alternatively, we separate a HTML text and script using a FRAME tag.
To put it concretely, a user opens two HTML texts in one window containing two frames.
One text is a normal HTML text, which does not include extra tags and scripts, and another is a text for event handling which includes JavaScript (event handling text).
The frame size for the event handling text is set to 0% and the size of the other frame is set to 100%.
Accordingly, since the frame for the event handling text is invisible, a user can browse and edit Web pages without recognizing event handling text.
A part of event handling text is as follows: function receiveRequest(){ var selectedText = (Window Name).document.getSelection(); var  lePath = ( lepath of current Web page); var cgiPath =  ( lepath of CGI  le).cgi?fn=  +  lePath+  &sw=  + selectedText; window.open(cgiPath, editor window ); } This script is used to receive a request from a user for editing the selected text on a Web page.
In the above script, the selected text and the Web page URL is sent to CGI scripts for text processing.
The CGI scripts identify the location of selected text in HTML text based on pattern matching.
Because Perl can reliably perform pattern matching based on
 Insert additional information and click "Submit Query"button Wedit generates a new Web page (Window 1) (Window 2) (Window 3) Figure 1: The process of text edit by Wedit Normal Web Browsing HTML on Web User of Outside-Community Load HTML Proxy Agent Edit DataBase Generation HTML inserted Additional Info.
Insert Additional Info.
Sharing Additional Info.
User of Community Figure 2: The Outline of PAIS regular expression, it is good for implementing CGI scripts based on Perl.
The selected text with its neighboring texts is displayed in the Editor Window, and a user can edit it.
Figure 1 shows an example of text editing based on Wedit.
In window 1 in Figure 1, a user selects text for editing by using the mouse-dragging on Web browser.
Then, the Editor Window that is used to edit the selected text is opened in Window 2 in Figure 1.
The user edits the text and submits the edited text (in this example, the text  Attention!
!  and the FONT tag is inserted).
Finally, as shown in window 3 in Figure 1, the new Web page, which re ects the edited text, is presented.
PAIS enables members of the same community to share information  exibly via the WWW.
All users in the same community can browse the same Web pages including some additional information which is added by one of the community members.
For example, in a certain research group, if a member adds the string  Attention!
!  a submission deadline in a conference CFP page like Figure 1, other members can browse the cautionary statement about the submission deadline.
For dynamic information sharing based on the Wedit mechanism, we allocate a private proxy server to each user and construct it as a proxy agent.
The proxy agent has the following two main functions.
Function 1.
The proxy agent maintains each user s modi cation data and uses it to generate a modi ed Web page.
In the right side of Figure 2, the outline of this function is shown.
The proxy agent runs on each user s computer.
A user can use the proxy agent as a generic proxy server and browse Web pages using it.
When a user wants to add additional information to a Web page, they can add the information using the Wedit mechanism.
The additional information added to the Web page is stored in the Edit Database which is maintained by the proxy agent.
Therefore, in PAIS, the original HTML text is not modi ed by Wedit.
In the Edit Database, a primary key value is URL of the modi ed Web page.
Entities in the database are the editor s name, location of additional information, and content.
When a user access to URL which is included in the Edit Database, the proxy agent merges the original HTML text and additional information which is stored in the database.
Then, a user can browse the modi ed Web page without any specialized operations.
Function 2.
The proxy agent autonomously sends its user s modi cation data to other agents whose users belong to the same community.
In the left side of Figure 2, the outline of this function is shown.
When a user modi es a Web page, his/her proxy agent sends the data to all other agents at the same time it stores it to the Edit Database.
The proxy agents which receive the data store it in each Edit Database.
If other community members access the Web page whose modi cation data is stored in the Edit database, the user can browse the modi ed Web page generated by their proxy agent.
As mentioned above, the original HTML text is not modi ed.
Thus, even if the Web page is modi ed within a community, nonmembers of the community cannot browse the modi ed Web page.
In this paper, we present an additional information sharing system PAIS that incorporates a newly developed mechanism called Wedit and the proxy agent.
Wedit enables the direct editing of HTML texts using an existing Web browsers.
The proxy agent can share the stored information within a community that operates as a distributed network.
Accordingly, PAIS enables users to do  exible information sharing via the Web.
