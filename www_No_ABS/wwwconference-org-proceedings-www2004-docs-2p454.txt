The Web is a huge, diverse and dynamic information source, and knowledge can be discovered in the texts available on it.
Knowledge is de ned here as important facts that support a person in making a decision.
Knowledge discovery usually requires complex analysis steps that consist of a heterogeneous combination of text handling operations such as searching, clustering, summarizing, and comparing[3].
As for structured data, Relational Data Model(RDM) enables several data handling operations to be combined, because it represents data in a formal manner, i.e. relations, and provides data handling operations whose inputs and outputs are identical in form, i.e. a set of relations[1].
By analogy with RDM, we propose a graph-based text representation model that represents texts in a formal manner, i.e. Subject Graphs[6] and provides text handling operations whose inputs and outputs are identical in form, i.e.
Copyright is held by the author/owner(s).
Figure 1: Graph-based text database and interactive knowledge discovery system a set of subject graphs.
Subject Graphs are an extension of term vectors and are made automatically by calculating the signi cance of term-term associations in addition to that of terms.
Each node and link has a weight corresponding to the signi cance of term or term-term association, respectively.
The model can separate text data from the application programs, and enables various text handling operations to be  exibly combined.
We have developed a graph-based text database (GTB) based on the model and an interactive knowledge discovery system that uses GTB.
Trials of the system show our model can be e ective for knowledge discovery.
Figure 1 overviews the GTB and an associated interactive knowledge discovery system.
The text translator translates each text into a subject graph by 1)extracting terms from the text, 2) calculating the signi cance of each term from its occurrence frequency using a variant of the BM25 method[4], and 3)calculating the signi cance of each term-term association from the co-occurrence frequency of two terms in a unit such as sentence, clause, or a word window.
The operation executor executes graph handling operations whose inputs and outputs are a set of subject graphs.
To achieve a full set of analysis steps, we de ne 6 operations: (a)searching for similar graphs, (b) clustering graphs, (c) extracting partial graphs, (d) adding graphs (merging 454each merged graph, and (c) using  relational database  as the condition.
The system merges graphs in each category, subtracts go from each merged graph, and extracts the partial graph that has nodes neighboring to  relational database  from each subtracted graph.
These operations compare the contents of each category by focusing on  relational database .
Figure 3 shows two graphs from Cluster 1 and Cluster 2.
From Figure 3, Cluster 1 seems to be relevant to InterO ce, while Cluster 2 seems to compare Oracle with Infomix or DB22.
In brief, from these interactive steps, the user can discover knowledge such as (A)The relational database vendor that is attracting attention is Oracle.
(B)The name of Oracle s product is InterO ce.
The rating and speci cation of the product may be found in the pages in Cluster 1.
(C) Its competitors are Informix and DB2.
Comparisons may be found in the pages of Cluster 2.
In this way, the interactive steps o ered by the system reduce the user s e ort in discovering knowledge in Web pages.
Term vectors are widely used for formal text representation.
Compared to term vectors, Subject Graphs allow the similarity between texts to be calculated more precisely and provide better visualization results by incorporating term-term associations.
Furthermore, Subject Graphs support complex operations such as extracting partial graphs, which is not possible if only term vectors are used.
Conceptual Graphs[5] can be used to represent texts.
Although they may represent the content of a text in a sophisticated way, applying them to Web pages is di cult.
This is because they are based on deep analysis, and so require well maintained dictionaries and an excessive amount of time to operate.
We proposed a text representation model that allows a wide variety of text handling operations to be combined for realizing the complex analysis steps needed to discover knowledge.
We implemented the model by using Subject Graphs as the formal text representation.
A graph-based text database based on the model and an interactive knowledge discovery system were implemented.
Trials con rmed that the proposed model reduces the user s e ort and is effective for discovering knowledge in texts on the Web.
