In recent years the research community has devoted a large e ort to the understanding and characterization of the World-Wide Web, in the attempt to provide a theoretical and practical understanding of what has been termed the ecology of information [11].
A fundamental step in this direction is represented by experiments aimed at studying the graph structure of the Web, in which vertices and directed edges identify Web pages and hyperlinks, respectively.
These studies are based on crawlers that explore the connectivity of the Web by following the links on each discovered page, thus reconstructing the topological properties of the visited graph.
In particular, data gathered in large-scale crawls [3, 7, 14, 1, 15] have indicated the presence of a rich and complex architecture underlying the structure of the Web graph.
Foremost among these properties have been the in-degree and out-degree distributions of the network, where in-degree represents the number of Web pages that link to a particular page, and out-degree represents the number of links that a page contains to other pages.
These distributions turn out to have heavy tails, showing close  ts to power-law distributions over several orders of magnitude.
This last feature is the signature of complex topological properties with statistical  uctuations that extend over many length scales; they are not exclusive to the Web and can be found in a wide range of network structures spanning various domains such as ecology, biology, and social and technological systems [2,
 While there is much to be learned from the link structure of the Web it forms the basis of Brin and Page s PageRank algorithm [6] it does not tell us about what people actually do when browsing the Web.
Indeed, it has been recognized that the complexity of the Web encompasses not only its topology but also the dynamics of information.
Examples of this complexity are navigation patterns, community structures, congestion, and other social phenomena resulting from users  behavior [12, 13, 1, 17].
In order to gain this kind of insight, a variety of usage data must be studied, such as server logs, hit counts, and router statistics.
These sources of information tell us about the behavioral network of the World-Wide Web, in which the nodes correspond to individual hosts on the Internet and the edges correspond to actual HTTP transfers among these hosts.
Network managers and capacity planners are accustomed to this view of the Web; numerous tools exist for analyzing server logs, determining trends in the quantity of HTTP tra c on a network, and so forth.
These tools o er high-level insight into such aspects of user behavior as what pages are most popular, what referring sites are most common, what percentage of tra c in a local network is devoted to Web tra c, etc.
The aforementioned studies, however, do not consider the statistical properties of the Web from the perspective of an international transit network that serves as a conduit rather than an endpoint for Web tra c.
Such a study amounts to a global large-scale investigation of the behavioral network itself and represents the focus of the present work.
In particular, we discuss the properties of a very large sample of Web-related network  ow data taken from the Internet2 (Abilene) network.
The data collected allow us to construct a client-server interaction network whose weighted connections characterize the tra c  ows.
To our knowledge, this is the  rst large-scale weighted graph representation of the Web interaction network and its tra c.
A valued bipartite graph is used to represent the network mathematically, and a thorough analysis is performed to uncover the statistical laws characterizing the patterns of tra c.
We  nd that client-server interaction patterns show marked scale-free properties, with statistical distributions of tra c properties varying over a wide range of length scales.
In some cases, scaling over eight orders of magnitude is observed in conjunction with a surprisingly slow decay of the distribution tails, indicating the presence of unbounded  uctuations in all measures characterizing the behavior of Web tra c.
These  uctuations in tra c and connectivity patterns suggest several questions related to the planning and modeling of Web tra c.
Finally, we provide evidence that large-scale analysis of tra c might result in a useful tool for the statistical detection of anomalous patterns related to malicious and exploratory use of the Web.
In order to gather data on the global Web tra c we performed a set of passive measurements on the Abilene (In-ternet2) network.
The Abilene network is an TCP/IP data network that provides high-speed Internet connectivity to research laboratories, colleges, and universities throughout the United States.1 The backbone of the network consists of
 routers located in major metropolitan areas such as Los Angeles, Chicago, and New York City.
Individual institutions connect to Abilene either directly or through large regional connectors.
Abilene carries only academic and research traf- c; participants must maintain their own separate connections to the commodity Internet.
As of this writing, over 200 universities and corporate research laboratories within the United States connect to the Abilene network.
In addition, Abilene also provides transit for data from dozens of international academic and research networks, particularly between Paci c Rim nations and Europe.
The tra c thus includes not only data to and from hosts on Abilene, but also international data routed across Abilene.
While the network provides native support for newer protocols such as IPv6, the great majority of all hosts on the Abilene network use IPv4, just as in the commodity Internet.
Several properties of the Abilene network make it an ideal 1http://abilene.internet2.edu/ Figure 1: Typical activity levels between core routers in the Abilene network.
The numbers refer to sustained data rates measured in bits per second.
environment for studying network tra c.
As a wide-area transit network that includes both domestic and interna-it o ers a global view of the Internet un-tional tra c, available in many smaller networks.
It also has a heterogeneous user base that includes hundreds of thousands of high-spirited undergraduates as well as researchers and college faculty.
Finally, even during peak hours, the Abilene network is never congested, which o ers a view of what users do when the network itself does not impede their behavior.
Typical tra c levels in the network can be seen in Figure 1.2 Our passive measurement strategy is based on information about the tra c handled by the network that comes in the form of  ow records generated by the core routers and sent over the network to management systems.
Each  ow record contains information about a single network  ow, which is de ned as one or more packets sent from a particular source host and port, to a particular destination host and port, using a particular protocol, over some time interval.
In the case of most Web tra c, either the source or the destination port will be 80, the assigned port number for HTTP.
The routers do not have capacity for generating full information on every  ow in the network; instead, they must sample the data, which is done periodically at a rate of approximately one in a hundred packets.
Note that even though TCP connections involve bidirectional tra c, network  ows as de ned above are only unidirectional.
Thus, every TCP connection potentially generates two  ows: one from the client to the server, and another from the server to the client.
Sampling implies that we may see only one of these  ows, or possibly neither.
The network  ow records contain a variety of information, which is described in detail in Cisco s documentation on the  net ow-v5  format.3 The relevant  elds for the analysis at hand are the source and destination IP addresses, the source and destination ports, and the total number of bytes in the  ow.
In conformance with the privacy policies of Internet2, we do not examine the actual source and destination IP addresses found in the  ow records; instead, they are replaced with index values that maintain their identity only over the 2http://loadrunner.uits.iu.edu/weathermaps/abilene/ 3http://www.cisco.com/univercd/cc/td/doc/product/ rtrmgmt/nfc/nfc 3 0/nfc ug/nfcform.htm course of a single day.
This index is stored only in system memory and is discarded at the end of the day.
The index values are unique across the entire set of core routers.
Even with the routers sampling one packet in a hundred, the total amount of  ow data collected is substantial.
On a typical weekday, the Abilene routers produce between 700 and 800 million of these  ow records, of which around 40 percent involve HTTP (i.e., TCP connections on port 80).
At 48 bytes per  ow record, this means that a full day of  ow data consumes about 35 GB of disk space and arrives at a mean rate of 3.4 Mbps.
The analysis in this paper is based on a full 24-hour day of network  ow data captured and saved to disk starting at midnight Eastern Standard Time (UTC-5) on September
 approximately 742 million  ows between almost 30 million individual hosts.
Of these  ows, about 319 million (43%) involved TCP connections with an endpoint on port 80, which we take to be indicative of Web tra c.
The data collected have been used to construct a graph formed by considering hosts involved in Web  ows as vertices (nodes) and the directed aggregate tra c between pairs of hosts as edges.
The resulting graph contains 18.5 million nodes and 68.1 million edges.
This view of the data, however, makes no distinction between Web servers and clients.
For the sake of consistency in statistical analysis, it is thus more appropriate to partition the graph into subsets.
One subset C = {i1, i2,  , iNC} identi es with each vertex i a host who has acted as client, and the second subset S = {j1, j2,  , jNS} consists of hosts that have acted as servers.
The data clearly indicate that a number of hosts act both as server and clients; these hosts are therefore represented in both sets.
Each  ow record contributes a directed edge representing a server-to-client (j, i) or client-to-server (i, j) connection, depending on whether the source or destination uses port 80.
To each edge we assign a weight indicating the aggregate amount of data associated with that pair of hosts in the network.
Each weight wij is the total amount of sampled data sent from a particular client to a particular server over the course of the day.
Similarly, the weights wji give the total amount of data sent from a particular server to a particular client.
This graph representation results in a weighted bipartite digraph, since we have two disjoint subsets C and S such that each directed edge connects only a vertex from C to one from S, or vice-versa [8].
In Figure 2 we show a pictorial representation of the obtained bipartite digraph.
From the analysis of this weighted graph we can derive a number of characteristic quantities and basic statistical distributions [5, 16]:   The number of servers nS(i) with which each client communicates in server-to-client and client-to-server connections.
We measure in like manner the number of clients nC (j) handled by each server.
  The in-degree kin of a vertex i (j) is the number of directed edges with i (j) as their terminal vertex.
The in-degree of server vertices is therefore the number of clients by each server in client-to-server connections.
Figure 2: Bipartite digraph representation of the client-server tra c  ows.
To each directed edge is associated a weight wij or wji representing the total amount of data sent from one host to the other.
Similarly, the in-degree of client vertices is the number of servers sending HTTP data to each client.
  The out-degree kout of a vertex i (j) is the number of directed edges with i (j) as their initial vertex.
The out-degree of server vertices is again an estimate of the number of clients handled by each server in server-to-client  ows.
Similarly, the out-degree of client vertices is a measure of the number of servers contacted by each client.
It is worth remarking that while kin and kout may di er on a single vertex, the analysis of the in-and out-degree in the two subsets S and C provides the same statistical information concerning the number of clients per server and servers per client, respectively.
  The client out-strength is de ned as sout(i) = wij, and represents the total number of bytes sent from each client i to servers, which will consist largely of requests and posted form data.
Similarly, the client in-strength sin(i) = wji is the amount of data that each client receives from servers (i.e., client downloads).
  The server out-strength is de ned as sout(j) = wji,
 j
 j
 i
 and represents the total number of bytes sent from each server j to its clients.
The out-strength therefore amounts to the volume of downloads handled by each server.
Analogously, server in-strength sin(j) = wij is the amount of incoming data (requests and uploads) handled by each server.
i Figure 3: Probability distribution for any given client to contact nS servers.
As a visual guide (solid line) we report the power-law behavior with slope (exponent) -2.4.
In the following section, we will analyze the statistical properties of the graph by looking at clients and servers separately.
It is worth remarking, however, that the number of client-to-server connections and server-to-client connections are not identical.
In particular, the server-to-client connections involve 2.38 million clients, 148,000 servers, and
 tions are more numerous and involve 18.1 million vertices, of which 17.7 million are clients, 363,000 are servers, and 29,000 are both.4

 In this section, we discuss our  ndings for the properties of the behavioral Web network from two di erent points of view: the client and the server.
In the client section, we are concerned with properties that have implications for the design and modeling of Web browsers, crawlers, and other user agents.
In the server section, we are concerned with properties that a ect the design and modeling of both Web servers and the networks built to support them.
Unless otherwise noted, our technique for analyzing a distribution involves grouping the data into logarithmically-sized histogram bins normalized by the width of the bin and the size of the distribution so that we are estimating a probability density function.
The results are then plotted on a log-log scale with the bin centers on the x-axis and the estimated probability on the y-axis.
The  rst quantity of interest is the number of servers contacted by each client.
This can be extracted from the in-degree and out-degree of client vertices in our bipartite graph.
In Figure 3 we report the probability distribution P (nS) describing the likelihood that any given client contacts nS servers.
For our sample, we get a mean of hnSi =


 client and server roles suggests that the practice of using port 80 to mask peer-to-peer applications is uncommon.
Figure 4: Probability distribution of the total incoming data (in-strength) and total outgoing data (out-strength) of clients.
The solid lines illustrate power-law behavior with slopes of -2.2 and -2.1 for the upper and lower graphs, respectively.
Si = R n2 level of statistical  uctuation is an order of magnitude larger than the mean value.
This is due to the heavy-tailed and skewed probability distribution that matches a power law P (nS)   n S , with exponent     2.4   0.2, on a range   of values spanning several orders of magnitude.
For such a distribution, the second moment hn2 SP (nS)dn eventually diverges; the standard deviation is not an intrinsic value of the distribution and is only bounded by the size of the statistical sample.
It is clear that in such a case, the average value hni is no longer a typical value, and we lack any characteristic length in the system: this is the so-called  scale-free  behavior.
In particular, we have an appreciable probability of  nding clients that handle a disproportionate number of servers.
As a con rmation of the scale-free behavior of client connections, we studied also the probability distributions P (kout,c) and P (kin,c) that any given client has out-degree kout,c and in-degree kin,c, respectively.
These two distributions refer to number of servers that contacted the client or were contacted by the client.
Statistically, it is reasonable to expect the same scaling behavior as obtained for the distribution of total number of servers per client.
Indeed, this analysis again recovered power-law behavior with exponents  in    out   2.4, in agreement with the scaling of P (nS).
An important measure of client behavior is the total amount of data sent sout,c and received sin,c when interacting with servers.
Indeed, the performance evaluations of client applications depend on the typical workloads measured.
Yet in this case, we  nd that the distributions P (sout,c) and P (sin,c) are extremely broad, with a range of values spanning nine orders of magnitude.
In Figure 4, we report both distributions.
The heavy-tail behavior is well approximated by a power-law behavior over three to four orders of magnitude where the distribution assume the forms P (sout,c)   in,c with  in = 2.1   0.1 and  in  out s  out = 2.2   0.1.
out,c It is worth mentioning that because of the sampling done on the data  ows, the actual tra c values are sin,c 102 and sout,c 102.
This multiplicative factor a ects neither the performed analysis nor the shape of the and P (sin,c)   s
 server connection tra c.
The solid line has slope -2.3.
distribution.
For the in-strength we  nd a mean value of hsin,ci = 9.28   104 and a standard deviation of  (sin,c) =
 standard deviation of  (sout,c) = 1.44   105.
In both cases the standard deviation is two orders of magnitude larger than the average value, showing the lack of any characteristic strength value and the massive heterogeneity in the amount of data handled by client hosts.
Also striking is the evidence for similar behavior in both ingoing and outgoing tra c, since the nature of the Web as a broadcast medium led us to expect much greater asymmetry between incoming and outgoing data.
Finally, we can consider the probability distribution of the values wij.
These weights represent the aggregate  ow between speci c client-server pairs and allow us to study the probability P (wCS) that any given connection carries tra c wCS.
Figure 5 shows that we have also in this case a heavy-tailed distribution with a best  t to a power-law CS with     2.4  0.1.
Each weight distribution P (wCS)   w   represents the total amount of data sent from a particular client to a particular server over the course of a full day.
The variability of the distribution thus provides evidence for scale-free tra c heterogeneity even at the level of single connections.
In order to provide more insight on behavioral patterns on the Web, let us inspect the correlation between the tra c and the number of connections handled by clients.
Intuitively, the strength sout,c (sin,c) behaves as an increasing function of the client out-degree kout,c (kin,c).
The power-law character of the distribution P (sout,c) might be considered less surprising from this perspective, as it could arise directly from the power-law behavior of the server-per-client distribution.
However, further inspection of the strength behavior uncovers the peculiar nature of the tra c distribution.
In Figure 6 (top) we report the behavior of the average in-strength hsin,c(kin,c)i for clients with in-degree kin,c.
Analogously, in Figure 7 (top) we report the behavior of hsout,c(kout,c)i.
In both cases, we  nd that the strength is increasing as a power law of the degree, yielding the relations and hsin,c(kin,c)i   k  in in,c hsout,c(kin,c)i   k  out out,c .
Figure 6: Behavior of the incoming tra c (strength) sin as a function of the number of server-to-client connections (degree) kin.
Top: behavior of the average in-strength hsin(kin)i as a function of the in-degree.
The behavior is linear on a double logarithmic scale and is well approximated by power-law behavior with slope  in   1.2.
Bottom: frequency of clients with given in-strength for each value of the in-degree.
In this and the following distribution maps, tones represent frequencies of strength values, normalized within each degree bin, on a log scale.
A best linear  t of the obtained curves gives  in = 1.2 0.1 and  out = 1.2 0.1.
These two exponents can be considered as a signature of nontrivial correlation between the number of connections and the tra c handled by clients.
Indeed, one would expect a linear correlation behavior   = 1.
The super-linear behavior found for clients is therefore a hint of nonlinear mechanisms at work in the growth in the amount of downloaded and uploaded data associated with each additional connection handled by a client.
These results may prove extremely relevant for the design of scalable client applications.
Interestingly, the exponents  in and  out allow us to relate the degree and strength distribution exponents through a simple scaling argument.
For the sake of simplicity, let us consider all variables as continuous and plug in the scaling behavior s(k)   k  in the strength distribution P (s)ds   s , where the various subscript indexes are implicitly considered.
We obtain P (k)dk   k ( 1) 1dk, which by def-
handled by each server.
The solid line has slope -1.8.
connections, the frequency of clients with a given strength.
While the plots con rm the accumulation of clients along the power-law distribution studied previously, we also observe the presence of a large spread of strength values for the same number of connections.
In addition, we notice the clear presence of outliers falling two to three orders of magnitude below the expected value.
These points correspond to clients with a very large number of server connections and a disproportionally small amount of tra c handled.
These anomalies might indicate malicious activity or massive scanning strategies.
In particular, for outgoing client data, points corresponding to a very large number of client-to-server connections (kout,c) and a very low volume of outgoing tra c (sout,c) would imply some sort of scanning activity, for example, a project trying to estimate the density of Web servers in assigned IP space.
While further study and analysis are needed to fully exploit the possibilities of the analysis presented here, it appears that the study of large-scale tra c data might result in a viable tool to detect anomalies and behavioral patterns at the global level that may pass unnoticed through more conventional intrusion detection systems.
Having looked at the behavior of Web clients, and having found that there is no such thing as a typical client, we turn to the behavior of Web servers.
This analysis is perhaps the more interesting of the two, since information on the demands placed on a Web server is instrumental to both server and network design, as well as modeling Web tra c.
We will follow the same general course as we did for client behavior.
In the case of Web servers, we again start by analyzing the number of clients nC that each server handles.
For our sample, we get an average of 142 clients per server and a standard deviation of 2.34   104.
In Figure 8, we report the probability distribution P (nC ) indicating the likelihood that a server handles nC clients.
It is not surprising that we again  nd a heavy-tailed distribution with power-law behavior, as shown by the very large standard deviation.
What is more surprising is that the power-law behavior shows a  t to P (nC )   n It appears that   < 2 quite de nitively, presenting us with a new scenario.
It is known that the  rst moment of a power-law distribution C with     1.8   0.1.
  Figure 7: Behavior of the outgoing tra c (strength) sout as a function of the number of client-to-server connections (degree) kout.
Top: behavior of the average out-strength hsout(kout)i as a function of the out-degree.
The behavior is linear on a double logarithmic scale and is well approximated by a power-law behavior with slope  out   1.2.
Bottom: frequency of clients with given out-strength for each value of the out-degree.
inition has to match the behavior P (k)dk   k dk.
The comparison of the two scaling behaviors readily provides an equality among exponents that in our case yields two relations:  out =  out   1  out   1 and  in = , (1)  in   1  in   1 obtained by considering the out and in distributions, respectively.
The values obtained empirically for the exponents satisfy the above scaling relations within the error bars for the data, and support a consistent scale-free picture for properties of client behavior.
While the study of tra c as a function of the number of connections (hsin,c(kin,c)i and hsout,c(kout,c)i) provides relevant information on the scaling of tra c, it is clear that examining the mean value washes out the presence of anomalies and outliers in the population.
In particular, for  xed values of kin,c and kout,c we observe a wide variation in the strength associated with di erent clients.
In order to study the spread of strength values with respect to the number of connections, we show in Figures 6 and 7 (bottom) a two-dimensional color plot indicating for each number of
 coming data (in-strength) and total outgoing data (out-strength) of servers.
The solid lines refer to power-law behavior with slope -1.7 and -1.8 for the upper and lower graph, respectively.
with exponent     2 diverges, which means that the average value of the distribution is not statistically de ned.
This is more peculiar than the case of power-law distributions with 2 <     3, such as the servers-per-client data reported in Figure 3, where the average is de ned but the variance is not.
In the case of clients-per-server data, the average degree is bounded only by the  nite size of the Web.
In such a situation, even the global mean number of connections is no longer a physical intrinsic quantity.
This extreme heterogeneity is not usually found in technological networks [17]; it provides no indication of a global average quantity and, most importantly, no hint as to the scale to which it is most appropriate to target the design of a general-purpose Web server.
As in the case of the client analysis, we also studied the probability distributions P (kout,c) and P (kin,c) that describe the chance that any given server has out-degree kout,c and in-degree kin,c, respectively.
The analysis recovers a power-law behavior with exponents  in    out   1.8, consistent with the behavior of P (nC ).
The server in-strength consists of the amount of data that each server has received from its clients; this is the sum total of requests, form postings, and so forth.
As was the case with the corresponding client graphs, the sampling done at the routers causes these values to be rescaled by two orders of magnitude with respect to the actual values, without a ecting the shape of the distribution itself.
We  nd a mean value of 8.42   104 and a standard deviation of
 cates the amount of data sent to Web clients by each server; this is probably the quantity of greatest importance when designing Web server software.
Bearing in mind the underestimate caused by sampling, we  nd a mean of 1.35   106 and standard deviation of 3.91   107.
As shown in Figure 9, both distributions yet again match power-law behav-out,S and P (sin,S)   s ior P (sout,S)   s  in  out in,S , this time with  in = 1.71   0.1 and  out = 1.8   0.1.
In this case we are in presence of another harsh reality: there is no typical amount of incoming data that a Web server can expect to handle over the course of a day.
This fact in itself is not Figure 10: Distribution of aggregate server-to-client tra c.
The solid line has slope -2.2.
surprising, given the broad range of popularity among Web sites.
What is surprising is that both the  rst and second moments of the mean diverge.
Analogously, there is no typical amount of outgoing tra c for a Web server.
From the standpoint of an arbitrary Web server, Web tra c has no characteristic scale at all!
Finally, we consider the distribution of weights wji representing the amount of data sent from a particular server to a particular client over the course of the day.
The probability distribution showing the chance that the tra c on a given server-to-client connection has a value wSC is no exception, and in Figure 10 we show the power-law behavior P (wSC )   w
 SC , with   = 2.2   0.1.
  Following the same lines as in the client analysis, we plot the mean in-strength of servers of a given in-degree as a function of the in-degree.
This allows us to explore the relationship between the number of clients handled by a Web server and the total amount of data received from those clients.
Figure 11 (top) shows the obtained behavior, yielding the relation hsin,S(kin,S)i   k with  in = 0.9   0.1.
 in in,S Figure 12 (top) shows that the relation between out-strength and out-degree, i.e., tra c sent to clients as a function of the number of clients, exhibits the same behavior with exponent  out = 0.9   0.1.
In this case, servers appear to behave di erently than do clients.
The super-linear increase in tra c with increasing degree is not found; on the contrary, the data are compatible with a linear or slightly sub-linear behavior.
This suggests that Web servers have a more conventional coupling between data tra c and number of connections, signalling a more predictable behavior in this respect.
As in the case of clients, the server scaling exponents   for incoming and outgoing connections are predictable from the exponents of the strength and degree distributions   and  , in agreement with Equations 1.
Finally, we study the spread of strength values with respect to the number of connections.
In Figures 11 and 12 (bottom) we map the frequency of servers with given in-strength and out-strength as a function of the number of client-to-server (in-degree) and server-to-client (out-degree) connections, respectively.
As with clients, we observe a large variability around the expected average behavior at all values of connectivity.
The presence of outliers is less notable than in the client case, in agreement with the passive role of
 the incoming tra c Figure 11: (strength) sin as a function of the number of client-to-server connections (degree) kin.
Top: behavior of the average in-strength hsin(kin)i as a function of the in-degree.
The behavior is linear on a double logarithmic scale and is well approximated by power-law behavior with slope  in   0.9.
Bottom: frequency of servers with a given in-strength for each value of the in-degree.
Behavior of the outgoing tra c Figure 12: (strength) sout as a function of the number of server-to-client connections (degree) kout.
Top: behavior of the average out-strength hsout(kout)i as a function of the out-degree.
The behavior is linear on a double logarithmic scale and is well approximated by power law behavior with slope  out   0.9.
Bottom: frequency of servers with a given out-strength for each value of the out-degree.
servers.
The presence of anomalies or outliers corresponding to servers with very low in-strength and very high in-degree could indicate the presence of distributed DoS attacks.
Several features of our data set merit further note.
We speculate that the larger size of the client-to-server graph is a consequence of ongoing denial-of-service attacks and a possible sampling bias in the routers toward smaller  ows.
Though we are in contact with the router vendor to determine more exact details of  ow sampling, we have no de ni-tive answer as of yet.
If this bias does exist, it should not a ect the results of our analysis, as the e ects we describe persist over many orders of magnitude.
Though all of the results presented here derive from a single day s worth of tra c data, analysis of other days yields nearly identical results.
In the absence of any known catastrophic network events, we would expect this to be the case simply because of the extreme size of our data set.
We know of no other study of Web tra c which has examined this quantity of  ow information, although there has been large-scale analysis of Web tra c using Akamai server logs and client packet traces [10].
It is natural to wonder whether the properties of these distributions are changing over time.
Others have reported Web tra c as using a smaller percentage of total Abilene tra c in 2001 [18], thus we suspect that tra c patterns are indeed changing.
We plan on repeating our analysis with the intention of identifying long-term trends in global Web tra c behavior.
Our study provides general evidence that Web tra c is characterized by scale-free statistical distributions that signal a large heterogeneity of behaviors and the impossibility of relying on typical quantities or characteristic properties.
In Table 1 we summarize the results obtained for the various distributions analyzed in the present work.
All of them are heavy-tailed and exhibit standard deviations two to three orders of magnitude larger than the mean values indicated by the distributions.
The presence of these overwhelming  uctuations is underscored in the case of Web servers by tra c distributions that follow power-law behavior with diverging  rst moments; here, no intrinsic average quantity can be inferred from the statistical distribution.
This fea-
variable characterizing Web tra c data.
For each variable x we report the average value hxi and standard deviation  .
It is possible to appreciate how in all cases the standard deviation is one to two orders of magnitude larger than the mean.
The exponent characterizing the power-law behavior is evaluated in each case by a best  t procedure of the distribution tail.
hxi





 variable x nS sin,c sout,c nC sin,S sout,S  





 exponent





 ture has major consequences for Web server and network design.
The fact that there is no typical amount of tra c faced by a Web server means that no one server design can be appropriate for all sites and the scalability of servers over time will be uncertain.
Client tra c also has diverging  uctuations, but not a diverging  rst moment.
While this suggests a more regular behavior, clients exhibit a super-linear growth of tra c handled as a function of their numbers of connections.
This behavioral pattern of client users points to a di culty in designing scalable client applications as well.
We are developing techniques to classify tra c according to the type of client: browsers, crawlers, scanners, etc.
The statistical behaviors of these applications are expected to be distinguishable at the level of  ow data, and this may provide additional insight into the design of scalable clients.
At the theoretical level, models of Web tra c must account for the fact that the tra c distributions follow power laws so strongly that the familiar parameters of mean and standard deviation are useless in characterizing the underlying system.
In addition, the nonlinear coupling between tra c and connections calls for models able to produce nonlinear behavioral patterns and nontrivial correlations.
An open issue is then how to relate the scale-free properties of the link structure of the Web with the Web tra c itself, where neither Web clients nor servers operate according to conventional distributions.
The fact that Web tra c follows distributions even more scale-free than the link structure of the Web also has implications for search engine design.
The PageRank algorithm at the heart of Google deals solely with link structure, but large-scale analysis of data in a transit network o ers additional information on how often users actually click on those links.
Using tra c data to weigh the edges in the link network thus turning PageRank into  ClickRank may improve substantially the ordering of search results.
We intend to pursue this line of investigation in future research.
The authors would like to thank the  Networks and Agents Network  in the IU School of Informatics as well as Katy B orner for useful discussions, the Advanced Network Management Laboratory at IU for support and infrastructure, and Internet2 for its generous policies on the use of anony-mized network  ow data.
We are also grateful to three anonymous reviewers for helpful comments.
