With broad proliferation of online social networks around media content, there is an increased interest in analyzing interactions among users and characterizing their behavior in Copyright is held by the International World Wide Web Conference Committee (IW3C2).
Distribution of these papers is limited to classroom use, and personal use by others.
John Guiver Microsoft Research Ltd.
Cambridge, UK joguiver@microsoft.com Nata sa Mili c-Frayling Microsoft Research Ltd.
Cambridge, UK natasamf@microsoft.com terms of the individuals  and community preference for spe-ci c types of content.
Among the popular and ever-growing social media sites centered around music are Last.fm, Zune Social, Flotones, JamNow, Haystack, Midomi, Sellabound, MySpace, Mercora radio, iLike, MusoCity, Soni c, and iJigg.
Many of them include features that encourage social interactions by providing personalized recommendations to in uence media selection of individuals.
Furthermore, they o er community-based recommendations and interfaces for browsing and searching for available content.
For such complex systems, it is important to develop techniques that can be used to describe and study processes that drive the observed user engagement.
Such methods need to be able to handle large-scale data logs from social media services and, therefore, produce e ective representations of media consumption in order to enable e cient processing.
In this paper we use the example of music listening to demonstrate how that objective can be achieved.
We illustrate an e ective representation of usage data that can be applied to enhance individual user s experience, e.g., by recommending songs for the user s playlist that would be relevant for the current music-listening session.
Considering the large number of users and songs, such contextual recommendations require highly compact data representations.
Selecting a suitable song descriptor is an important initial step.
We observe that many media services provide a static taxonomy of media types or genre.
Such taxonomies serve as the means for individuals to express their interests and  nd adequate media.
They provide media categories that are commonly adopted by the user community and, thus, could be used to characterize user s song-listening behavior, e.g., as a probability distribution over clusters of same-genre songs.
The genre also captures an essential aspect of the song-listening process: while a person may not necessarily wish to repeat the same song, the person is likely to choose the next song to play from the same or a related genre.
On the other hand, even basic genre taxonomies may have a large number of categories and lead to sparse and ine ec-tive representations of listening patterns.
Thus, we aim to create a compact representation of media listening that retain the essential statistical properties and relations among data.
For that purpose we choose to derive generative probabilistic models based on the logs of song-listening and control the number of the underlying media clusters.
The contributions of our work are:   A systematic approach to characterizing social media   A novel graphical model which provides a compact rep  A model that has better predictive properties and enable resentation of the media based on listening sessions faster inference than other known models.
More precisely, we de ne graphical models with latent variables that are intuitive and appropriate for modeling song listening.
The  rst model captures the collective music taste as a set of tastes or media preferences that a particular community develops.
We use them to characterize song listening by an individual user as a  nite mixture of the underlying tastes.
The second model captures the listening moods across listening sessions of the users in the community.
In such a model, an instance of song listening by a user is described as a  nite mixture of the underlying set of listening moods.
In both cases we can vary the model parameters and explore the e ect that di erent number of derived tastes and moods have on the model quality.
In particular, we demonstrate the computational e cacy and compare the perplexity of the two models.
Our work is the  rst to utilize a hierarchical graphical model to incorporate listening moods based on session information.
By applying the models to half a million song-listening instances from the Zune Social1 music community, we demonstrate a clear advantage of using a more re ned model to achieve both better perplexity for the co-occurrence of genres in sessions and higher computational e ciency.
Although we introduced and evaluated it in the context of song listening, the same model can be applied to a broad range of scenarios, from browsing sessions on YouTube or Flickr to characterizing the sentiment and topics of blog-posting within given periods of time.
In the following Section 2 we give an overview of the related work and provide background on graphical models.
We then discuss the social media context in Section 3.
In Section 4 we describe the data and de ne the hierarchical graphical models.
In Section 5 we present experimental results and then re ect on broader implications of our work in Section 6.
We conclude with a summary of our contributions and directions for further work.
Creating a successful, self-sustaining social media service is a challenge because of the complexity of social interactions that ensue once the service is in place.
A broad range of issues related to this problem have been addressed in the literature on social networks, e-commerce, recommendations, rating, collaborative  ltering, and similar.
Here we provide context for our work by discussing research related to our approach and provide background information with prerequisites for the models we explore.
would be invaluable for personalizing retrieval, classi cation, and recommendation of media content.
However, the variability and subjective nature of these notions makes it dif- cult to describe them in a systematic way.
Nonetheless, there have been e orts to characterize mood as a property of songs and the e ects they may have on listeners.
Feng et al. [4] attempt to detect mood of songs from their acoustical features such as tempo and articulation.
Liu et al. [9] use intensity, timbre and rhythm instead.
Hu & Downie [8] study the relationship between mood and music genre, and mood and artists.
In all these cases, the researchers proposed taxonomies of mood types.
Feng et al. [4] de ne four mood labels: happiness, sadness, anger, and fear for training a music classi er.
Liu et al. [9] use a mood model that characterizes emotions along two dimensions, energy and stress.
They de ne four mood quadrants: contentment, depression, exuberance, and anxious/frantic and use them as labels for mood detection in music using a framework based on Gaussian mixture models.
Hu and Downie [8] derive a set of  ve mood clusters from the All Music Guide2 mood repository to examine the correlation between music genre and mood and artist and mood.
The results of this approach are of limited utility because comprehensive, generally accepted, and universally applicable taxonomies for taste and mood do not exist and are di cult to conceive.
That would require an in-depth understanding of human emotions, mapping out a wealth of human relations to the external world, and providing a reference scale to measure the intensity of emotions that could be applied in an objective manner.
In our approach, we derive a latent mood rather than a priori specifying the mood as a property of the music.
We use the terms music taste and listening mood to describe the users  a nity to listen to speci c groups of songs as observed from the listening patterns of the whole community.
For listening moods we derive the song clusters from the media selection within and across listening sessions, where a session is determined by a threshold of idle time, i.e., a pause between two consecutive songs.
Song recommendations Ragno et al. [20] address the problem of recommending songs to the user based on a seed song that the user has listened to, with the aim to generate a complete playlist that  ts the user preferences.
It is assumed that the user wishes to listen to songs that are, in some sense, similar to the seed song.
In [20] the authors use multiple radio broadcast streams to determine song proximity and de ne a graph representing the song-similarity.
Automatic playlists are generated through random walks of this graph starting on a given seed song.
There are many other approaches for automatic playlist generation (e.g., [18, 19]).
In [18], Pampalk et al.
use audio similarity and feedback from users, in the form of accepting or skipping a song recommendation, to de ne a set of heuristics for playlist generation.
In [19], Platt et al. learn a Gaussian Process kernel to predict user playlists using music metadata such as genre or style as input.
An individual s taste and mood are two factors that are likely to in uence consumption of media and social interactions.
Thus, characterizing them in an e ective manner 1http://social.zune.net/.
Modeling collections of discrete data has been of growing interest for researchers who study large text corpora.
Latent semantic analysis techniques provide a powerful means
 from document-word co-occurrences [3, 7].
Recently, the Latent Dirichlet Model (LDA) [2] has been introduced to capture statistical properties of text documents in a collection and provide a compact document representation in terms of underlying topics.
More precisely, the method assumes that each document is a mixture of latent topics and uses a three-level hierarchical graphical model to characterize the statistical relations among terms and documents, resulting in topics that are represented as clusters of words.
We describe the model in more detail in Section 4.1.
The LDA model has gained popularity due to its simple but powerful structure, and it has been applied to other domains besides topic modeling.
Zhang et al. [23] propose an LDA-based model for identifying latent structures in large networks, using topological features as the only input.
They apply the model to identify communities in large social networks.
A similar model for analyzing graph data is described by Henderson & Eliassi-Rad [5].
There are other generative models that combine topic modeling and social network modeling in a single framework [13, 14].
The Author-Role-Topic (ART) model, proposed by McCallum et al. [13], discovers discussion topics in threaded conversations, conditioned on sender-recipient interactions.
The Group-Topic (GT) model [14] discovers latent groups in a network and clusters of associated topics based on text.
The recent work on recommender systems by Stern et al. [21] proposes a probabilistic rating model which combines collaborative  ltering and item metadata for predicting items that may be of interest to a given user.
Marlin et al. [11, 12] also use graphical models for the task of rating prediction.
Ho man et al. [6] propose a probabilistic model which uses audio features to predict song tags.
In our work we use hierarchical graphical models to represent the song-listening activities in terms of latent tastes and latent listening moods of the community that are derived from the logs of media usage.
For the latent tastes characterization we adapted the LDA model to the song-listening activities.
Every instance of song listening is modeled as a  nite mixture over the underlying set of tastes which, in turn, correspond to the clusters of songs derived from the listening patterns.
For listening moods, we increased the complexity of the model by incorporating session information.
As a result, we arrive at a novel hierarchical graphical model that exploits additional structure in the data and identi es latent moods as clusters of songs that emerge from the song-listening sessions across the community.
Factor graphs are a useful way of representing probabilistic graphical models.
They consist of two types of nodes representing variables and factors, respectively.
Figure 3 and Figure 4 show examples of factor graphs with standard notation where variables are represented as round nodes and factors as square nodes.
In a probabilistic model, the factors refer to probabilistic distributions, deterministic functions, or constraints.
Graphically, the factor nodes connect only to variable nodes that are arguments of the factor.
The factors are multiplied together to give an overall distribution function.
In this sense, a factor graph is a visual representation of the dependency structure among variables in the Figure 1: The two-level genre taxonomy of Zune Social.
Genres have sub-genres.
Examples of sub-genres are shown only for the genres Rock and Classical.
overall distribution.
In case of generative models, for example, we aim to explain the observed data and typically arrive at a rich dependency structure where latent and observed variables are generated from parent variables via a factor.
In Section 4 we describe in detail the generative processes inherent in our listening taste and mood models and demonstrate how both the generative process and the joint probability distribution can be directly read o  the corresponding factor graphs.
Factor graphs utilize additional notation that simpli es the visual representation such as plates (see for example [1]) which represent replicated parts of the model, and gates [17] which represent parts of the model that are switched on or o  depending on the value of a random variable.
Plates are shown as rectangles with a solid boundary line, and gates are shown as dashed rectangles, with the gating variable attached to the rectangle rather than to the variables inside.
The factors inside the gate are switched on or o  by the value of the gating variable.
Inference in factor graphs While useful for visualizing relationships and conditional independence among variables, factor graphs are particularly important as a framework for describing message-passing algorithms for performing inference.
In this paper we make use of a message-passing algorithm for approximate inference called variational message passing (VMP) [22].
This is one of a class of algorithms that are given a uni ed treatment in [15].
These algorithms typically make use of a fully factorized approximation of the joint probability distribution; i.e. a factorization of each factor itself into univariate factors.
For each factor in the graph, the algorithm will calculate outgoing messages from the factor to each variable; each message is in the form of a univariate distribution over the target variable, and is calculated from the factor itself and all the incoming distribution messages via an update equation which minimizes a local divergence measure.
The factorized approximation to the factor is given by the product of the outgoing messages.
These message-passing algorithms are fast and also have the bene t that calculations are local, so complex models can be pieced together with reusable building blocks   the Dirichlet and Discrete factors in (Figure 3 and Figure 4) are two such building blocks, as are the message update equations to deal with plates and gates.
Infer.NET [16], which we use to perform inference in our models, is a framework which makes good use of these considerations to provide a variety of message-passing algorithms for graphical models.
In this section we motivate the work through the example of a speci c social media service.
For the purposes of our study we consider the Zune Social music community and analyze the data set that comprises
 Social service maintains a user pro le with a list of songs that the user has listened to on the Zune device or via Zune software installed on a personal computer.
The Zune Social community members can rate songs, establish friendship links, and recommend songs to each other.
Songs are classi ed using a two-level genre taxonomy.
Figure 1 shows all 17 top level genre categories and the second level categories for two speci c genres, Rock and Classical.
The full taxonomy can be found on the Zune Social website.
Our objective is to capture users  listening a nities as re ected in the data logs.
Thus, we make a concerted e ort to clean the usage logs of accidental data access and playing of songs.
For each user we consider only those instances where the user listened to a song and rated it positively.
This set could be easily expanded using di erent heuristics.
For example, one could include songs that have no ratings but are listened to multiple times by the user.
Analysis of our data shows that, on average, the rated songs are listened to 3.62 times.
In comparison, the average/mean across all the songs is only 2.26 times.
We assume that the users listen to songs during listening sessions and we employ a simple segmentation technique to specify the session boundaries.
We study the distribution of time intervals between the start times of consecutive songs played by the same user.
We identify the peaks and use them as thresholds for determining the start of the new session.
We observed a few prominent peaks in the distribution.
One of the peaks corresponds to the average song length (3.67 minutes).
Let U = {u1, ..., un} represent a set of users and M = {m1, ..., mk} represent a set of media items that the users can listen to.
A media item can be a song genre, an artist or a particular song.
For ease of representation and without loss of generality, we will refer to a media item as a song.
Each song-listening instance (u, m, t) represents user u listening to song m at time t. In order to de ne listening sessions, we de ne an interval as the time di erence between the start times of two consecutive songs for the same user.
Alternatively, one can de ne an interval as the time di erence between the end time of one song and the start time of the next song but we chose the former de nition because we did not have information of the song end times in our data.
A session S = (m1, ..., ml) is then a sequence of l songs that the user u has listened to, such that the interval between every two consecutive songs mi and mi+1 is below a speci ed threshold pthreshold.
The playlist Su of each user includes a sequence of song-listening sessions Su = (S1, ..., Stu ) = (m1, ..., mN ).
Note that, for the same user, a song can be repeated both in the same session, and across sessions.
We also assume that there are latent media clusters C = {c1, ...cn} which explain the co-occurrence patterns of songs that users play, and they provide a soft clustering of the media items M .
Thus, for each cluster ci, there is a distribution  i over the media items M .
Figure 2 shows an example of the data model.
The table shows the log of two users u1 and u2 who have listened to 5 media items at di erent time points.
The log data is visualized as a tree, showing the segmentation into sessions based on the time interval threshold.
This threshold can be prede ned or learned from data.
This example shows some (cid:2) patterns: session S2 of user u1 is the same as session S1 of (cid:2) user u2, and session S1 of user u1 is similar to session S3 ii.
Observe song muj   Discrete( (cuj)) Dir( ) is an exchangeable Dirichlet prior, i.e., all pseudo-counts are identical and given by the parameter  .  (u)   Dir( ) is the parameter vector for a user-dependent Discrete distribution over media clusters.
Dir( ) is also an exchangeable Dirichlet prior and  (c)   Dir( ) is the parameter vector for a cluster-dependent Discrete distribution over songs.
The number of media clusters K is  xed in advance but this constraint can be alleviated as discussed by Blei et al. [2].
According to this model, the joint probability distribution of the distributions   over songs, the distributions   over clusters, the cluster choice c for each user and song, and the songs in user u s playlist Su = (S1, ..., St(u)) = (m1, ..., mN ), is: p(m, c,  ,  | ,  ) = nY
 p( u| ) p(muj| (cuj))p(cuj| u)) u=1 j=1
 k=1 p( k| ).
We then observe (m1, ..., mN ) and perform Bayesian inference to recover the posterior marginal distributions of   and  .
We use the session model to detect music-listening moods as exhibited in song-listening sessions.
Mood is a latent variable in the session model.
The model assumes that each user is represented as a distribution over di erent moods, and for each session, there is a latent mood which guides the choice of songs.
A factor graph of the model is shown in Figure 4.
Here, the media cluster c represents the mood as a mixture of songs.
The session model assumes that  (c) for each mood c is picked from Dir( ).
The following process describes the generation of each user s playlist Su:
 (a) Choose a distribution over songs  k   Dir( )
 (a) Choose a distribution over media clusters  u   (b) For each session Si   Su Dir( ) i.
Choose a media cluster cui   Discrete( u) ii.
For each song in the session, observe muij   Discrete( (cui)) The joint distribution is: p(m, c,  ,  | ,  ) = nY tuY p( u| ) p(cui| u) u=1 i=1 liY j=1 p(muij| (cui))))
 k=1 p( k| ) When there is one song per session (each song in the playlist has its own session), then the session and taste models are equivalent.
As the number of songs per session grows, Figure 3: Factor graph of the Taste model.
Figure 4: Factor graph of the Session model.
of user u2.
The goal of our paper is to  nd and characterize such patterns.
Here we describe in detail the taste model, and also our session model which extends the taste model and captures the listening mood across song-listening sessions.
Following the LDA model [2], we de ne a probabilistic graphical model that represents consumption of media as a distribution over a set of latent media clusters, referred to as  tastes.  Each taste media cluster is represented as a distribution over the songs.
The model generates each song m in the user s playlist Su by picking one of the media clusters c, and then picking a song from that media cluster s mixture  .
We refer to this model as the taste model because each media cluster represents a particular taste.
It is a direct adaptation of the LDA model.
A factor graph of the model is shown in Figure 3 where the rectangles indicate plates of users, songs of a user, and media clusters.
For each user, and each song in the user s playlist, the variable c switches on a particular media cluster, and switches o  the others.
The following process describes the generation of a playlist Su for each user u:
 (a) Choose a distribution over songs,  k   Dir( )
 (a) Choose a distribution over media clusters,  u   Dir( ) (b) For each song in the user s playlist Su the taste model because it has fewer random variables.
In other words, the cluster variable c is picked only once per session and it remains the same for all the songs in the session, whereas in the taste model, c is picked every time a song is generated.
The session model embodies the  ner level structure in the data.
Just as the LDA model, the session model can be applied to a corpus of documents and capture word pattern on the sub-document level.
For example, by constraining words within chunks of the document, e.g., paragraphs, to belong to the same topic, we begin to identify topic patterns associated with paragraphs.
Again, an important advantage is the simpli ed inference and, consequently, the ability to process large document collections e ciently.
We present results for the problem of playlist generation and discuss the characteristics of the media clustering approach by visualizing the genres per cluster, comparing the discovered latent clusters with the genre taxonomy, investigating the sensitivity of the clustering to the number of pre-speci ed clusters, and measuring the time performance of the models.
We represent each song-listening instance in terms of the corresponding song genre.
Since each song can belong to one or more music genres g   G, for each song-listening instance, there are multiple genre instances.
We use this media representation to study the connection between the latent media clusters that correspond to listening mood and taste and the song genres.
Furthermore, we can explore the usefulness of our models for generating song playlists of individual users.
We do that by predicting the genre of the song that the user may want to hear next during the listening session, considering the few seed songs that the user has already listened to.
By identifying the desired genre we provide a good foundation for selecting speci c songs to present to the user.
We train and evaluate the models using a sample of 2, 014 users who have listened to songs that belong to 84 di erent music genres.
From the 14 weeks of data, we use the  rst two months as training data to learn the parameters of each model and the rest as the test data.
Considering the song-listening instances in the training data we arrive at 239, 425 genre instances and 14, 703 sessions using a time interval threshold of 30 minutes and no restriction on the number of songs per session.
The test data contains 248, 631 genre instances in 5, 079 sessions which contain at least 11 genres.
We control the minimum number of genres per session in order to allow testing the session model with 5 and 10 seed songs.
The sample includes all users who have joined the Zune Social service in the studied period, and whose playlists include between 120 and 200 di erent music artists.
We implemented the statistical models using Infer.NET, an e cient, general-purpose inference engine for graphical models [16].
Since exact inference is not possible in the taste and session models, we used variational message passing [22] for learning the parameters of each model.
We  xed   = 0.5 and   = 1.5 K .
  was set to give the best performance for the baseline test model (see Section 5.3.1), Figure 5: Factor graph of the baseline, unigram model.
Figure 6: Factor graph of the test model for evaluating the session and taste models.
and the same value was used for the taste and session models.
The value of   was set based on limited manual optimization with respect to the taste model and adopted for the session model as well.
We evaluated the proposed session model by comparing its performance in terms of model perplexity to that of the taste model on the task of playlist generation for a song-listening session.
Besides these two models, we consider a unigram model as a simple baseline model that does not consider latent media clusters and learns each session distribution over genres independently.
First, we present the unigram model in more detail and then we describe the experimental setup and results.
In the unigram model the genres in each music-listening session are drawn independently from a single discrete distribution that describes the session.
A factor graph of the model is shown in Figure 5.
More speci cally, the generative process is as follows:
 (a) Choose  i   Dir( ) (b) For each song in the session, observe mij   Discrete( i) Here, Dir( ) is an exchangeable Dirichlet prior and   is the parameter vector for a Discrete distribution over songs.
During inference, it learns the distribution over genres based Perplexity for seed sets of 10 songs l y t i x e p r e















 Number of clusters

 Baseline model Taste model Session model



 l y t i x e p r e














 Baseline model Taste model Session model




 Number of clusters

 (a) (b) Figure 7: Comparison of the perplexity of each model for session genres after observing a) 5 seed genres and b) 10 seed genres.
l y t i x e p r e










 Perplexity for the Session Model Seed length 5 Seed length 10

 Number of clusters


 Figure 8: Session model perplexity for session genres after observing 5 or 10 seed genres.
on the seed songs in the session and uses it to predict the genres of the remainder of the songs in the session.
The joint distribution for session Si is p( i, m| ) = p( i| ) liY j=1 p(mij| i) This model assumes that sessions are independent of each other and, unlike the taste and session models, it does not consider latent media clusters.
The taste and session models learn the posterior distributions for their parameters from the training data.
These posteriors are used as priors in the testing phase.
In the testing phase, the model  observes  the  rst few seed songs, in our case 5 or 10 songs in a test session, it infers the posteriors of the model parameters, and then  nds the likelihood of the genres for the rest of the session songs.
Figure 6 shows a factor graph of the test setup for the session and taste models.
In the test setup,  u is the pseudo-count vector of the posterior Dirichlet distribution for  u from the training model, where u is the user whose listening session is used as a test.
Similarly, for each cluster,   is the pseudo-count vector of the posterior Dirichlet distribution for the   of that cluster, derived from the training model.
Performing inference on the test model then  nds the posterior Dirichlet distributions for  , the session s distribution over clusters, and  , the cluster s distribution over genres, based on a few seed songs (Seed song plate in Figure 6).
Then the log-likelihood is calculated for the genres of the remaining session songs.
In order to assess which model explains the co-occurrence of song genres in listening sessions better, we compare the perplexities of the three models.
Perplexity is an entropy-based score assigned to a probabilistic model and commonly used to evaluate topic models such as LDA [2].
It captures how well a model trained on observed data would predict unobserved data.
The lower the perplexity of a model, the better its predictive power.
We report on the perplexity of each model on the test data: P erplexity = exp( nX
 size(S)X u=1 S Su i=seed+1 ln(p(mi| (cui)))

 Computing the perplexity involves  nding the log-probabilities of genres in each test session, excluding the seed song genres, and averaging over the number of genre instances G.
Figure 7 shows the perplexity scores for the three models: baseline, taste and session models.
The session model has consistently lower perplexity than both the baseline and the taste model for the number of clusters between 2 and 50.
That means it models better than the other two the patterns of co-occurring genres within the same music-listening session.
The lowest perplexity of the session model occurs at 21 clusters for 5 seed songs (9.51), and at 20 clusters for 10 seed songs (9.14), while the lowest perplexity of the taste model occurs at 2 clusters (with perplexity of 18.74 for 5 seed songs, and 17.77 for 10 seed songs).
The baseline model perplexity is 43.22 and 41.32 for 5 and 10 seed songs, respectively, and it is constant since it does not assume any latent clusters.
These results imply that for the problem of playlist generation, it is better to consider the local patterns across sessions, as captured by the session model, rather than global patterns characterized by the taste model.
Figure 8 shows the results for the session model in more detail.
It shows that the predictive power of the model increases as we increase the number of clusters up to 20   21 clusters, depending on the number of seed songs.
We can visualize the a nity of genres to clusters by looking at the distribution of each media cluster over the genre categories.
Figure 9 shows how genres are associated with listening mood clusters produced by the session model.
In the graph we show connecting edges only if the normalized Dirichlet posterior of a genre in the media cluster is more than 0.25.
The thickness of the edge re ects the strength of the genre a liation with the cluster.
We observe that some latent clusters of genre resemble the groupings of genre in the taxonomy shown in Figure 1.
Indeed, media clusters 8 and 11 have similar genre grouping as the top genre categories Latin and Electronic/Dance, respectively.
On the other hand, the media cluster 6 comprises a mixture of high-level genres: Electronic/Dance, R&B, P op and W orld.
In Section 5.4 we showed that, in some cases, the collection of genres associated with a listening mood corresponds to one of the top-level genres from the Zune Social taxonomy.
For other moods that is not the case.
Here, we examine how close a media clustering is to the genre taxonomy, i.e., we estimate how well the static genre taxonomy re ects the listening patterns that emerge from the users  behavior in the social media.
The taxonomy itself can be considered as a collection of clusters where two sub-genres are in the same cluster if and only if they have the same parent genre.
Similarity metric To compare two media clusterings, we employ a similarity metric based on the Mallows distance [10, 24].
This measure is well-suited for comparing clusterings in which the clusters are soft and exchangeable, i.e., it is not known beforehand which pairs of clusters to compare.
Zhou et al. [24] discuss the advantages of this measure over other measures for clustering similarity, such as pair counting, set matching and variation of information.
The Mallows distance measures the di erence between two multivariable probability distributions, and it can be interpreted as an optimal cluster matching scheme between two clusterings C1 and C2: M allows(C1, C2) = min wk,j


 wk,j k=1 j=1 i=1 |pi,k   qi,j| with the constraints that wk,j   0,
 k=1
 wk,j =  j, wk,j = j=1  k for all k, j.
To compute the Mallows distance, one has to solve an optimization problem using linear programming.
It yields a global optimum which is unique.
In our case, the computation involves the pseudo-counts for the media cluster posteriors.
For each genre, we normalize across clusters to get pi,k where i is a genre index and k is a cluster index.
Similarly for qi,j.
Then, we  nd the total count for each Dirichlet and normalize across clusters to get the  k and  j.
For the optimization part, we apply linear programming using Microsoft Solver Foundation3.
Figure 10 shows that, as the number of clusters increases, the similarity between the genre clusters derived by the ses-3http://code.msdn.microsoft.com/solverfoundation.
Distance between consecutive latent clusters Taste model Session model l i s g n i r e t s u c e v s s e c c u s n e e w t e b e c n a t s d s w o i

 l l a










 Taste model Session model



 Number of media clusters







 e c n a t s d i s w o l l a





 Number of media clusters Figure 10: Mallows distance between the genre taxonomy and the clusterings found by the taste and session models.
sion or taste model and the Zune genre taxonomy increases as well.
For a range of cluster numbers, the Zune genre taxonomy is slightly more similar to clusters resulting from the taste model than from the session model.
However, for both models the resulting genre clusters are di erent from the original genre taxonomy.
Thus, the clusters provide alternative groupings of genre categories that re ect the usage of mobile media and the preferences of the community, as con rmed by the perplexity results in Section 5.3.4.
In this section, we conduct a simple experiment to investigate how sensitive the models are to the pre-speci ed number of clusters.
For that, we look at the similarity between clusterings that correspond to successive numbers of clusters.
For example, we measure whether a clustering with 15 media clusters is very di erent from a clustering with 16 clusters.
It is of interest to know how the similarity between them changes and whether the clusterings converge.
We use the Mallows distance as the similarity score.
The larger the Mallows distance between two successive cluster-ings, the more sensitive the clustering model is to increasing the pre-speci ed number of clusters.
Figure 11 shows that when we increase the number of clusters, the sensitivities of both the taste and session models decrease, i.e. the clusterings become more similar to each other.
However, for low numbers of clusters, the clusterings are very di erent from each other.
For example, the distance between the clusterings produced for 2 and 3 clusters is 33.2 for the taste model, and 19.5 for the session model.
One of the important aspects of statistical models is the computational time required to train the models.
Our comparison of the taste and session models con rms that training of the session model is faster.
As expected, for both models the training time increases linearly with the number of clusters.
However, the rate of increase di ers.
On our data sample, inference using the session model is 3.7 times faster than for the taste model as Figure 12 shows.
Figure 11: Sensitivity of the models to the pre-speci ed number of clusters.
Performance Taste model Session model







 ) s ( e m i t n o i t u c e x







 Number of clusters Figure 12: Model training time.
Re ecting on the experimental results, we consider possible application scenarios.
In music communities such as Zune Social or Last.fm, our approach can be used to enrich user experience.
Through media clustering, the service can provide song recommendations based on the collective community tastes and listening moods.
As we have shown, the session model can facilitate the playlist completion based on previous listening sessions or several songs that the user has just listened to.
Indeed, this can be presented as an improved shu e feature o ering a selection of song snippets as short previews during a listening session.
The shu e could adapt based on the user s mood.
Furthermore, as an added bene t to identifying media clusters, our models produce groupings of individuals with shared tastes and moods.
This information can be leveraged to suggest new friendship ties between users in the social media community.
From the perspective of the service architecture and optimization, clustering media content can contribute to im-Since social media services can involve millions of users on a daily basis, it can be bene cial to distribute service requests across several servers based on appropriate media clusters.
From research point of view, it would be interesting to study user interpretations of the discovered media clusters.
It would be valuable to investigate whether latent media clusters, representing for example moods, correspond to different experiences that the users may be able to articulate.
In our paper we presented a novel and improved statistical model for characterizing user preferences in consuming social media content.
By taking into account information about the listening sessions of individual users, we arrive at a new, session-based hierarchical graphical model that has lower perplexity and a shorter training time than alternative approach based on the standard LDA model.
Using the data from the Zune Social music community, we show how generative probabilistic models enable us to capture latent variables that drive the consumption of media.
In particular, we adapted the LDA model to capture the taste in music and we de ne a session based model that captures the user mood in listening sessions.
Thus, an instance of song listening can be represented as a  nite mixture of the underlying tastes that have been discovered through statistical modeling.
Similarly, a song listening within a session can be modeled with respect to the latent moods that the session model generates.
Both taste and mood are essentially media clusters that are identi ed from the statistical analysis of the media usage.
In Zune Social the songs are classi ed using a  xed two-level taxonomy of music genres.
We use genre to characterize the individual songs, and the resulting taste and mood media clusters are represented as genre distributions.
In our analysis we conclude that both the taste and mood-based clusterings derived from usage data di er from the static taxonomy.
Thus, they o er alternative genre taxonomies, informed by the community listening patterns.
Furthermore, we show that the resulting clusters can be used for playlist generation.
The service can thus recommend songs based on a few songs that the user has already listened to.
Our future work will focus on re nements of the session model to capture additional aspects of song listening.
One such aspect is listening  saturation  that would require extending the model to include a  decay factor.  We also intend to explore application and evaluation of the session model in contexts other than online media consumption.
The authors would like to thank Gavin Smyth for sharing his database expertise, Tom Minka and John Winn for discussions on the models, and Jordan Boyd-Graber for providing feedback on an earlier draft of the paper.
