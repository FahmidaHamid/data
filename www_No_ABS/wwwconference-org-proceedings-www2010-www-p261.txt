Over the past year the world has witnessed dramatic changes in mobile handset capabilities with the introduction of sophisticated mobile information access devices, such as Apple s iPhone and Motorola s Droid.
For example, a recent Copyright is held by the International World Wide Web Conference Committee (IW3C2).
Distribution of these papers is limited to classroom use, and personal use by others.
report from Mobile Metrics 1 shows that half of the top ten devices in the U.S. at present are touchscreens, 6 include WiFi capabilities and 6 have mobile application stores.
In addition, users of these super-powered mobile handsets tend to use the Web more heavily that users of simpler devices2.
The world of mobile information access is also evolving: Major search engine providers are turning their focus to mobile users and are investing in novel mobile editions of their standard Web services.
For example, Google recently released a new feature for mobile users called search options which allows users to  lter mobile search results based on content type or the timeframe in which the result was posted3.
The interface design of such mobile Web services may be organized in two distinct groups: most applications display information either according to the place to which it refers (e.g.
geographical), or based on some order or ranking (e.g.
time or search engine ranking).
However, to date, little light has been shed on the implications that these mobile interface modalities have on the experience of their users.
Probably, the most important concept to consider when designing mobile interfaces is  context  [18]; the context in which an application is used and the context of how information is entered and interacted with.
In our words, we believe that providing context-sensitive, personalized search is critical to the success of mobile search.
Hence, we have developed SocialSearchBrowser (SSB in short), a proof-of-concept, mobile search prototype which allows users to: (1) see the queries and interactions of other users in a particular location, (2) pose queries of their own and (3) respond to queries posted by other users (see detailed description in Section 3).
In sum, SSB gives users the ability to connect with other users while on-the-go and ask them (or respond to) geo-located questions.
The goal of this paper is to analyze the impact that the type of user interface has on the search and information discovery experience of mobile users.
In order to understand in which circumstances users may prefer one modality over another, we have implemented and evaluated two di erent interfaces for the SSB prototype: one map-based and the other text-based.
Both versions of the SSB prototype were deployed in a live  eld study in Ireland with 34 participants for a period of 1 month during September 2009.
Participants installed and used the applications, generating a total of 1,266 messages.
All the interactions (queries, answers and look-ups) with the applications were logged and time stamped in the SSB server which allowed us to carry out an objective analysis of their usage.
These measures were com-


subjective information regarding the experiences of participants.
Finally, based on our  ndings, we draw a number of important implications for the interface design of location-based mobile information access services.
To the best of our knowledge, the work presented in this paper is the  rst to analyze (both quantitatively and qualitatively) the impact that the interface modality (i.e. map vs text) has on the experience of users of a mobile search application.
Recently search has evolved beyond traditional text-based queries and towards discovery of information through exploratory browsing strategies [24].
Furthermore, search mechanisms that were developed for the Web have been ported to ubiquitous devices, thus allowing the availability of information when and where it is needed, and the possibility of using the actual location at which search requests are issued to simplify the users  interactions with search systems.
In this section we highlight key papers in these related areas.
Particularly, we focus the discussion on the interface design of these services and explain how this choice has potential implications in the users  preference toward a particular interface and consequences for its usability.
The Questions not Answers (QnA) prototype [13] represents an interesting alternative to traditional mobile search.
QnA allows users to access previous queries posted from the user s current location by means of a map-based interface, providing users with an enriched sense of place.
By clicking on the queries, users can execute the displayed search.
However, users cannot interact with the author of a particular query.
In a live user study [2], participants found the interface to be useful and they enjoyed its proactive display.
Several projects in the mobile information access domain aim at connecting electronic information (e.g., a Wikipedia article) to the physical location to which the information refers: e.g.
ActiveCampus [23], and UrbanTapestries [15].
These interfaces allowed users to express opinions, preferences, recommendations, and questions, all connected to a physical place.
ActiveCampus and UrbanTapestries displayed users  messages on a map, at the location to which they referred.
One of the key issues with UrbanTapestries was the interaction time: participants in their study expressed their need for quick and simple interactions while on the move as opposed to a richer interaction when they were at work or at home.
Participants saw the application as a new way of engaging in conversations about places.
More recently, many commercial applications have appeared on the market that allow users to access information and recommendations while on-the-go.
For example, Loopt4 or BrightKite5 enable social serendipitous encounters and keep track of what your friends are up to.
Here again, we observe how designers of Loopt and Brighkite organize and display information on a map, at the position to which informational units refer.
Another approach in the design of mobile search applications consists of organizing and displaying information based on some ranking or dimension.
For instance, FaThumb [14] is a mobile search application to e ciently navigate

 through large data sets on mobile devices providing a more e cient means of mobile information access.
A user evaluation of FaThumb demonstrated how a facet-based navigation is faster for less speci c queries.
Heimonen and K aki [12] examined the use of search result categorization to improve presentation on mobile devices through an interface called Mobile Findex.
Both FaThumb and Mobile Findex presented the results of the users  query in a textual manner.
GeoNotes [17], and E-gra ti [5] are examples of interfaces that allow users to connect digital information to a physical location, as explained in the previous subsection.
However, while the applications previously presented organized content using a geographical criterium, GeoNotes and E-gra ti organized the messages according to the time at which messages were posted.
Recommender applications developed more recently allow people to share advice about restaurants or other commercial activities (e.g., Yelp6).
Most relevant to our work is the prototype developed by Bilandzic et al.
[4] called CityFlocks which allows users visiting a new city to pose questions  via phone calls and SMS, to local citizens.
Furthermore, the results returned by the mobile version of Yelp and CityFlocks are organized in a list.
Taylor and Tversky [20, 19] conducted a series of experiments to understand how people form cognitive maps from descriptions and depictions of an environment.
In four experiments, subjects read route descriptions of naturalistic environments and then answered inference questions.
A separate group of subjects studied maps instead of descriptions, and their performance in answering the questions was comparable to that of the former group [20].
In a followup study, subjects used maps that were drawn or described from memory.
Organization was quite similar across maps and descriptions of the same environments, revealing hierarchical structures based on spatial and functional features of the environments and on conventions for sequencing the landmarks [19].
Recall was slightly but signi cantly better for depictions than for descriptions.
tion Access Applications In sum, most of the interfaces for mobile information access are organized either geographically on a map, i.e. according to the position to which they refer, or textual, i.e.
according to an ordering factor, such as time or the ranking position returned by the search engine.
There are obvious pros and cons for both approaches.
Maps are powerful artifacts to acquire spatial knowledge, orient oneself in the environment, and navigate between places.
However, the information reported on maps has to be interpreted and matched against the actual environment.
A well known issue is the di culty that some people have in aligning maps with landmarks in the surrounding environment [1].
On the other hand, lists are simple to read and understand, but are limited in the amount of contextual information that they are able to convey.
Furthermore, Cherubini & Dillenbourg have highlighted a limitation of map-based interfaces in collaborative information access tasks.
They demonstrated that the fragmentation of the conversational context when messages are scattered over a map might have negative consequences for supporting collaborative interactions at a distance [7].
However, lists-based interfaces are also limited when mes-
increased cognitive e ort required in mapping these textual locations to a spatial representation[6].
In sum, there are reasons to believe that the design of the interface of location-based mobile search applications might have a signi cant impact on the way users appropriate and use them.
Recent mobile applications like Foursquare7 and Google Buzz8 o er users both a map-based and a text-based interface.
However, GUI designers are facing the challenge to seamlessly integrate these interfaces - both for users that seek speci c information and for users who want to discover what is happening in their proximity.
To the best of our knowledge, to-date little attention has been devoted to compare the users  preferences towards these two interface modalities (i.e., map vs text).
Therefore we conducted a study where participants could choose freely between these two modalities while seeking information on the go.
Our interest is to understand in which circumstances users decide to use a particular modality and why.
SocialSearchBrowser (SSB) is a proof-of-concept mobile search prototype (See [9] for an earlier version of the prototype).
Its purpose is to enhance the search and information discovery experience of mobile users by proactively displaying what other users have been searching for in a particular location.
SSB presents the users with a view of evolving search activities (i.e queries and answers) that is sensitive to their context.
Prospective searchers can browse through these search experiences, learn from these searches, and initiate their own, in a way that takes full advantages of the strengths of their mobile handsets.
In order to investigate the situations in which mobile users may choose one interface modality over another, we implemented the core functionality of SSB in two applications that use contrasting interfaces: SSBmap and SSBtext.
Figure 1: Queries on (left) the map-based user interface and (right) the text-based user interface.
The software architecture of both applications consists of two components: (1) an iPhone application that allows users to issue queries, browse existing queries and their answers and answer other people s queries; and (2) a server that synchronizes and stores the queries and answers from both

 applications in a common database9.
The server guarantees that all queries and answers are available to both applications, independently of how they were entered.
When a new query is issued by a user in either application, the server submits the query to the Google Local Search API and the Eventful API for a set of possible search results10.
The server also includes an SMS noti cation facility that informs users about new human generated answers to their own queries and the number of newly issued queries by other users.
Finally, the server logs all the interactions between the user and the iPhone application for o line analysis of user behavior.
The main di erence between the two mobile applications is how location is represented.
In SSBmap, a user s location and the location of queries and answers is represented visually with a map, whereas in SSBtext the same elements are represented as textual addresses arranged in list format.
In the following sections we explain the key components of both applications in more detail11.
The main screen of the SSBmap application is a Google Maps visualization with user queries overlaid on top (left in Figure 1).
At startup, the map is centered at the user s current location.
As users pan or zoom the map, only the queries issued within the map region currently being displayed are shown.
This map-based interface provides users with a sense of place at a glance, as they can easily and quickly see the queries that other users have issued while being in the same location.
In addition, the interface assigns an icon   in the form of a person   to all queries that have a human generated answer associated with them (e.g.
query  any free Wi  in cork airport  in the lower left of Figure 1).
In the absence of human generated answers, a simple pin icon is used to indicate the precise location of the query.
The query text is displayed to the right of the icon and truncated if needed.
The color of the semitransparent background of the queries allows users to distinguish between their own queries (green) and queries issued by other users (white).
Furthermore, the size of the query icon and text re ects the popularity of a query.
The popularity is based on the number of answers that the query has received and the number of times the details of a query have been looked at by a user.
When a user issues a new query or answers an existing query in SSBmap, (s)he is presented with a text box that contains the query or answer itself (see Figure 2 for the case of an answer).
When the user chooses to assign a location to the new query or answer, (s)he is presented a map on a Google maps visualization with a pin that (s)he can position accordingly.
The main screen of the SSBtext application shows a list of the queries that have been issued close to the user s current location.
The user s location is shown as a textual address in the red bar at the top of the screen (Figure 1).
The queries
 tion and all data is stored in a MySQL database.
Search API and the Eventful API as machine generated answers, while answers submitted by other users are de ned as human generated answers
 two interfaces were exposing the exact same functionalities to the users, as we will detail in remainder of the paper.
extracted from Eventful using their API13.
Tapping on the blue three-dotted-button to the right of any of the answers displays additional information (see Figure 3).
In SSBmap, the location of the query and the location of the answer are illustrated in a small map; in SSBtext, a textual description of the location of the answer is shown.
Figure 3: Query details showing a human generated answer in SSBmap (left) and in SSBtext (right).
Supporting people on-the-move introduces a number of constraints that are not typically present in traditional human computer interaction settings.
Furthermore, understanding the impact of mobile Web applications on end user behavior is di cult to assess given the variability in the situations mobile users  nd themselves in.
Our goal was to evaluate both mobile applications in-the-wild so we could understand more about their adoption in a realistic setting.
Due to the design choices made in our prototypes, the participants of our study were required to own an iPhone or iPod Touch device.
We recruited potential participants by advertising the study in a number of iPhone related Internet boards within Ireland.
During the initial recruitment, participants were informed that a small incentive   in the form of a gift voucher   would be provided for taking part in the study.
From a pool of 55 potential participants, 34 users took part in and completed the live  eld study: 32 participated with an iPhone, while 2 users participated with an iPod Touch device.
The 34 participants consisted of 31 males and 3 females who ranged in age between 20 and 55, with an average age of 32.2 (median 30.5).
The participants lived in various last retrieved Feb 2010
 Figure 2: SSBmap (left) and SSBtext (right) di er in the way users add answers to existing queries.
are ranked according to the distance between the location of the query and the location of the user.
All distance calculations are carried out using the Google maps API, based on driving distance.
For distances smaller or equal to 2 km, the estimated walking distance (in minutes) is displayed.
Blue separators help the user to see all queries within the following distance categories:  Nearby.
Less than 1 min walk ,  Within 200 meters.
About 5 min walk ,  Within 2 km.
About 30 min walk ,  Within 10 km.
About 10 min drive ,  Within 50 km.
About 45 min drive ,  Within 100 km.
Couple of hours drive ,  Within 500 km.
Long drive :)  and  Over 500 km away .
Vertical scrolling allows the users to explore queries that were posted at an increasing distance to their present position.
We use the same icons as in SSBmap to help users distinguish between queries with or without human generated answers.
Likewise, the background color of queries indicates own vs queries from other users.
When a user issues a new query or adds a new answer via SSBtext, (s)he is o ered a text box for the query or answer text along with the choice to add a location.
However, in this instance the user will describe the location in textual form (e.g.
Figure 2).
At the top of the interface, both applications provide two interactive  lters that allow users to control the queries to be displayed: (1) The time  lter enables selective display of queries based on time, i.e.
that have been submitted in the last: two hours; day; two days; week; month; year, etc.
(2) the query similarity  lter enables users to limit the queries to those that overlap with the queries that have been previously entered by the user him/herself.
When a user selects a query   either by double-tapping on the map or by selecting a query from the list   details of this query are displayed.
In both applications, the query details page shows of 4 components:
 when the query was executed.
any) to the query in question.
extracted from Google s local search service12.
ment sectors, including IT, Accountancy and Finance, Banking and Insurance, Heathcare, Media, Construction and the Public Sector.
All participants owned a PC and had a broadband connection to access the Internet.
They used their PC and mobile phone every day.
Each participant was required to install the two SSB ap-plications14, i.e.
(1) SSBmap and (2) SSBtext, on their personal iPhone or iPod Touch device.
Once the mobile applications were installed, participants were given some time to explore the interfaces, execute queries and to ask us any questions or express any concerns that they had in using the applications.
In order to compare users  experiences with the two applications, users were asked to use/access each of the applications at least 3 times and to execute at least one query via both interfaces.
Only users who completed this initial  training  period were considered in the study15.
The live  eld study ran for a period of 27 days during September 2009.
Participants had access to a website which included full details on each phase of the user study and a frequently asked questions page16 for the duration of the study.
Finally, participants were asked to complete a post-study survey to gather subjective information on their experiences with the two applications.
We employed an SMS noti cation facility to keep users informed of the interactions of other users within the study.
We sent at most one SMS message per day to each participant informing them of how many new queries had been submitted via the interfaces since they last accessed the applications.
Furthermore, each participant was sent an individual SMS as soon as another participant answered any queries that (s)he had posted.
Given the variability of situations mobile users  nd themselves in, we opted for a type of situated sampling in form of a short questionnaire that was presented to users when they started the application.
This allowed us to assess why users chose to launch one application over another.
We describe the details of this experience sampling in more detail in section 5.2 of this paper.
When a user submits a new query or answer in SSBtext, (s)he may chose to assign his/her current location to this new query or answer.
However, if the user decides to modify this initial location, the textual description of the location needs to be resolved, i.e. associated to a latitude and longitude, in order to be correctly placed in the geographical space.
Instead of relying on automatic geo-coding   which would fail in cases like  at the Temple Bar side to the Ha Penny Bridge    the location is manually resolved using a Wizard-of-Oz (WoZ) approach.
Speci cally, we employed three mechanical turks to act behind the scenes and resolve the textual locations of queries and answers to physical latitude/longitude values.
The mechanical turks used a web page that we set up to allow then to place a Google maps marker at the location that they determined as the one that corresponds to the textual location described in the query.
terfaces interchangeably.
applications, only 34 users successfully passed the training criteria described above.
Measure Map Text Total Map: Mean[std] Text: Mean[std] Queries




 Lookups




 Answers




 Table 1: The total and average number of queries, query look-ups and answers.
Figure 4: The number of queries and answers per participant over the one month study period (sorted by the number of issued queries).
Table 1 summarizes the basic usage statistics of our study.
The 34 participants generated 1,266 interactions in total;
 examine the distribution of queries and answers generated per participant, shown in Figure 4, we see an asymmetry in user behavior, with some users generating lots of queries and other users generating more answers.
To understand whether users  interaction was asymmetrical in the two interface modalities we conducted an independent samples t-test (homosedasticity was veri ed by Levene s test) which veri ed that participants produced more queries through the map interface than through the text interface (t[34, 66] =
 retrieved content more often through the text interface than through the map interface (t[34, 66] =  3.35, p < .05).
The test also revealed that participants answered queries more often through the text interface than through the map interface (t[34, 66] =  1.66, p < .05).
Individual application preferences at a global level were elicited by analyzing whether participants chose to launch one application more often than the other.
We found that both applications (in combination) were started/accessed a total of 879 times.
SSBtext was launched somewhat more frequently (53%) than SSBmap (46%).
To better understand whether there were individual preferences we considered the  rst 17 startup times and we removed 9 participants which had executed the application less than 17 times dur-
query details page by double-tapping on the query.
startups in execution frequencies for each kind of interface and we conducted a Wilcoxon Signed Ranks Test with the remaining 25 participants.
The test revealed no signi cative di erence between the number of times the map-based interface was executed and the number of times the text-based interface was executed (mean[std] map: 4.99[1.15] vs. text:
 In terms of the duration of usage for each application we  nd a total of 895 sessions with sessions lasting an average of 3.3 minutes each: 415 sessions for SSBmap with an average duration of 3.4 minutes compared to 478 sessions for SSBtext and an average session duration of 3.2 minutes.
When we look at the number of interactions18 per session, we  nd an average of 4.4 interactions per session (min=1, max=20, stdev=2.8).
For sessions involving SSBmap, we  nd an average of 4.6 interactions per session (min=1, max=10, stdev=2.9) compared to 4.6 interactions per session for the SSBtext (min=1, max=20, stdev=2.7).
These results indicate that there was little di erence in terms of the number of interactions and the duration of sessions between the two interface options.
We employed a simple form of experience sampling [8] to determine in-situ why users chose to launch one interface over another.
The experience sampling used was targeted towards the subset of users who exhibited an extreme behavior of sorts.
Participants were only asked to complete the experience sample form if: (1) they hadn t accessed either of the applications in more than 2 days; or (2) they had made a switch in interface type after 5 uses of the same interface.
For example, if a participant had been using SSBmap on the last 5 occasions and on the 6th occasion chose to launch SSBtext, (s)he would be prompted with the experience sample form and asked why (s)he made this choice.
In total, we collected 94 samples throughout the 1 month period, 41 via SSBmap and 53 via SSBtext.
When we look at the samples generated during sessions involving SSBmap, there is a de nite visual and location-speci c aspect that impacts on this interface choice.
The map-based interface appears to provide an easier mechanism to look at di er-ent streets, a better visual overview and works well when attempting to pinpoint  local  queries:  I like to start with the map to get a overview and move to the text version afterwards. ,  Better visually  and  Wanted to spot local questions, easier when visual.  In terms of SSBtext, it was used most often when accessing a query, viewing an answer submitted to a query or seeing if there were any new queries that need to be answered.
In the experience samples, participants indicated that they chose this interface because it was quick, easy and enabled a more e cient means of looking up the details of a query:  I wanted to see if there are any nearby unanswered queries so that I might be able to help out. ,  Because it s quick and easy to see the latest entries ,  It is easier to read.
Maps are di cult to navigate.  and  So I can check a lot more queries quicker.
 
 In order to gain an insight into the types of interactions our participants were involved in, we manually classi ed the content of all queries and answers according to their type.
We identi ed four types of queries within the data.
Their
 answer.
frequency of occurrence is shown in Table 2 along with the volume of query type based on the interface type.
particular question, such that the information need and the answer expected are not dependent on location.
Approx.
classes of general queries: 1.1.
Business/Service queries, e.g.
 chemist  or  supermarket  and 1.2.
Other queries, e.g.
 When is the Leitrim Country Final .
which the user s current location has a de nite impact on the information need and the answer expected.
These needs are identi ed by the presence of physical location/proximity keywords, e.g.,  nearest ,  closest ,  here .
Approx.
35% of all queries fall into this category with the majority (66%) being submitted via SSBmap, perhaps indicating that maps make more sense or are more intuitive when representing locations.
Once again we de ne subclasses for this category:
 searches for a speci c location or wants to know how to get to a particular location, e.g.
 How do I get to Newcastle , 2.2.
Business/services queries, in which the person is searching for local business/service listings, e.g.
 Where s the nearest 3* hotel?  and  nally 2.3 Recommendation/opinion queries, in which the user is asking for a recommendation or opinion about something within close vicinity to their current location, e.g.
 What s the best Chinese takeaway in this area? .
We found that 100% of the queries classi- ed in the addresses/direction subclass were submitted via SSBmap again implying that maps appear to be more appropriate for representing locations.
the user is searching for a physical location either directly or indirectly.
Most of these needs are identi ed by the question where.
This was the most popular class of queries with over 40% of all queries falling into this category.
The sub-classes to this category are similar to the pervious category except than in this case the users are seeking: 3.1.
Busi-nesses/services or 3.2.
Recommendations that are not necessarily dependent on their current location, e.g.
 Where can i get petrol?  and  Best indian in naas .
Once again we  nd SSBmap more popular for location implicit queries.
Finally, 4.
Misc queries: All queries that could not be classi ed into one of the other types.
We identi ed  ve types of answers within the data set.
Their frequency of occurrence is illustrated in Table 3.
Our goal was to keep the answer types as comparable as possible to the query types (outlined in the previous section).
answer.
We found that 43.6% of answers fell into this category.
We identi ed 3 subclasses of the general answer category: 1.1 Business/service, e.g.
 Screen cinema , 1.2 Recommendation/opinion, e.g.
 Over priced and underwhelming.
I d give it 5/10  and 1.3 Other, e.g.
 Check out the bitbuzz app .
includes an explicit location cue, for example, a street name, a city, a landmark, etc.
Almost 48% of queries fell into this category.
Again we de ned 3 subclasses of this category: 2.1 Address/directions, e.g.
 Think there is one in Dundrum shopping centre , 2.2 Business/service, e.g.
 Chinese market in Drury street , and 2.3 Recommenda-tion/opinion, e.g.
 The photohouse portmarknock.
excellent couple.
can t recommend them enough .
In terms of the









 Total (% Queries) % Map %Text Example
































  chemist ,  supermarket   When is the Leitrim County Final?   Curraheen ,  How do I get to Newcastle?   Where s the nearest 3* hotel?   What s the best Chinese takeaway in this area?   Where can i get petrol?   Best indian in naas  Table 2: Queries classi ed by their type along with examples.
In bold the percentage of query type per interface type (i.e. map vs. text).
Total % Map %Text Example



































  screen cinema ,  spar   Over priced and underwhelming.
I d give it 5/10   check out the bitbuzz app   think theres one in dundrum shopping centre   chinese market in drury street   the photohouse portmarknock.
excellent couple.
cant recommend them enough   Do you mean the Long Stone which is just around the corner on South Great Georges street?   why is there no expiry mechanism on this  Table 3: Answers classi ed by their type along with examples.
Highlights the percentage of answer type per interface type (i.e. map vs. text).
address/directions subclass we  nd an almost even split between SSBtext and SSBmap.
However, we  nd that SSBtext is used more often for location-based business/service answers (75%) compared to 25% for SSBmap.
details or statements that appear to be motivated by the desire to chat.
Some of these answers appear to be clari cations, where the answerer is requesting more details from the person who originally issued the query.
For example,  Do you mean the Long Stone which is just around the corner on South Great Georges street? .
While these queries and answers are not satisfying an information need in a traditional sense, they seem to be relevant as starting points of conversations.
Approx.
6% of answers fell into this category.
swers: Application related answers (< 1%) correspond to comments about the application itself, for example  Why is there no expiry mechanism on this , whereas miscellaneous answers (2%) could not be classi ed into any of the other categories.
The usage and query classi cation results appear to indicate that there was a clear interface choice based on the task at hand.
We investigate this  nding further in Section 6.
In addition to their content, all queries and a percentage of the answers submitted via SSB had a physical location associated with them.
In the case of answers, 68% of all answers included a location, i.e. when the user submitted the answer to the query, (s)he chose to assign a location to that answer.
We refer to this type of answer as a geo-answer.
When the user submits a geo-answer via SSBmap, its location is pin pointed on a Google map, generating a precise location (in lat/lng format).
Submitting an answer via SSBtext works di erently because users can choose to enter a location in free text form.
Note that 63% (123) of the answers were submitted through SSBtext.
Of these, 92 (approx.
75%) had a location associated with them.
In some cases (27%), this location corresponded to the user s current physical location whereas in the majority of cases (73%) the location was edited by the user and therefore had to be resolved by the mechanical turks.
In order to assess the types of locations submitted with answers via SSBtext, we manually classi ed the locations into one of  ve types based on their geographical precision (ordered from most precise to least precise):
 speci c street number or a well known landmark.
no exact street number is provided.
or borough within a city.
or county within Ireland.
Imprecise locations are those that do not provide the user with any relevant location details (e.g.
indicating a general location of  Ireland  is considered imprecise in this user study).
In examining the results, we  nd that > 55% of locations can be considered rather vague (i.e. neighborhood, city or country level).
This implies that precise locations are not necessarily needed or desired at all times.
 59-69 Dame St, Dublin, Ireland  or  Stephens Green   Manor street Dublin 7  or  Henry street Dublin 1   Dundrum ,  Johnstown, Waterford   Dublin ,  co.
cork   Ireland  Table 4: Precision in the locations associated with the answers that were submitted via SSBtext.
Our participants answered a post-task questionnaire designed to elicit their experiences with the applications.
The questionnaire included several open ended questions where users could freely express their opinions.
In the following, we describe the most relevant implications for the interface design of mobile location-based services.
The proposed implications are supported by both the quantitative and qualitative data collected during the  eld study.
By combining the usage results of our user study with a detailed analysis of the post-task questionnaire, we have determined that the choice of user interface (i.e. SSBtext or SSBmap) depends on three factors: (1) personal preferences, (2) information need and (3) situational context.
The  rst factor that seems to play a role in the choice of interface relates to the personal preferences of the end user.
In the post-study questionnaire, we asked participants which interface they preferred most and why.
16 participants indicated a preference towards SSBmap, 14 participants indicated a preference towards SSBtext, while the remaining 4 users said that they had no preference in terms of in terface type.
Users who preferred SSBmap indicated that this interface provided a more visual representation, allowing them to see proximity/disance in physical terms and to make connections at a spatial level.
For example, one subject expressed  The text based app seemed fairly useless.
It lacked the logical connection between my location and the query. .
Other reasons included:  Easier to visualize where the question was coming from ,  Easy to judge how far away results were ,  Allowed me to see a physical proximity  and  Useful for guidance if you needed directions .
For the users who speci ed a preference for SSBtext, they reported that it provided an easier and faster lookup mechanism.
For example,  It was easier to give answers to the questions in the text interface - you could quickly see what had been asked near me. ,  Easier to use ,  Faster, clearer  and  Quicker - easier to scroll through and navigate .
Four participants indicated no preference, highlighting that the choice of interface depended on what they were trying to achieve.
For example,  The text interface was far better for getting a view of all the queries so that you can answer the ones you want to.
Alternatively the map based interface is fantastic for pinpointing exact locations in your answer. .
One hypothesis for choice at an individual level relates to gender.
For example, previous work has shown that men tend to have better spatial awareness skills than women and tend to be able to orientate themselves more easily [16].
Interestingly, the 3 women who took part in our user study indicated that they preferred SSBtext.
Unfortunately, given the imbalance in gender in this user study we cannot explore this e ect in more detail but this is something we would like to look at in future work.
Another hypothesis for interface choice based on personal preference is that the users past experiences with similar applications will also have an impact.
In order to shed light on this hypothesis, we looked to the pre-study questionnaire in which each user reported details about their usage and knowledge of both mapping services and local search applications.
Our results show that users who preferred SSBmap rated their ability to read maps more highly than users who indicated a preference for SSBtext (11 users compared to 8 users rated their ability as either advanced or expert); 12 of the users who preferred SSBmap indicated that they rarely made mistakes when reading maps, compared to just 4 users that preferred SSBtext.
Finally, 9 of the users who preferred SSBmap indicated that they used Google Maps or a similar server often (i.e. a few times per week) compared to just 4 users in the SSBtext group.
Hence, it appears that users who preferred SSBmap rated their experiences and knowledge of mapping services more highly than users who preferred SSBtext.
Takeaway message 1: The vast majority of existing mobile services do not take personal preferences into account.
If mobile information access designers can track the application usage/behaviour of their users they may be able to automatically learn the natural interface preferences of end-users and thus personalize the interface presented to them.
This is challenging given that these preferences are likely to change over time.
Situational Context
 Table 5 illustrates the participants  opinions on which interface was preferred in which situations.
The results show that SSBmap was preferred when in an unfamiliar area of the city (94.1%) or when the user was interested in seeing queries that had been posted in a certain area   i.e. getting a sense of place   67.6%).
This  nding would suggest that maps are a useful interface when trying to understand one s surroundings or to visualize a physical area.
Takeaway message 2: Automatically inferring the sit-uational context of the end-user could designers to present the most appropriate interface type based on the current situation: at the most basic level, in unfamiliar surroundings present a map, in familiar surrounds present text.
Existing work on user mobility patterns shows that human-beings tend to follow very predictable behaviours [11]; A starting point for mobile information access designers is to exploit this predictability.
Information Need
 The results reported in sections 5.3.1 and 5.3.2 show that the participants  information need had a strong in uence on the preferred interface: participants seeking information related to a speci c address had a strong preference for SSBmap while this preference was weaker when the location was less important.
We have also seen that participants preferred SSBtext when answering queries from other users, except if the query asked for a speci c location.
These Type Situation I am home and I have some time to kill Situation I am running errands and I have to locate some resource nearby Situation I received a noti cation that a query I submitted was answered Situation I am in a certain part of the city and Map

 Text

 Depends Unsure







 I want to see queries have been posted to this area Situation I am under time pressure Situation I am in an area of the city I am not familiar with or in an unknown place Inf.
need I am submitting a new query Inf.
need I am browsing through / viewing the queries submitted by other users Inf.
need I am trying to identify newly submitted queries by other users Inf.
need I am answering a query



























 Table 5: Interface preference depending on the situation or information need.
observations are supported by the post-study questionnaire in which we asked the subjects when and why they chose one application over the other.
As shown in Table 5, participants consistently reported to prefer SSBtext when they were consuming information, i.e. discovering new queries or browsing through queries from other users.
This preference was less pronounced when they were seeking information.
For example, SSBtext appears to be preferred when browsing through or viewing the queries submitted by other users (76.5%) or when trying to identify newly submitted queries by other users (70.6%).
Participants also indicated a preference for this interface when under time pressure (70.6%).
With respect to answering queries, the results were more mixed: 12 participants chose SSBmap, 16 participants selected SSBtext and the remaining 5 participants indicated a dependency on the context.
Takeaway message 3: Automatically determining the intent of the user would allow designers to present the most appropriate interface type, e.g.
searching for a speci c query warrants the map-based interface while the text-based interface is more appropriate when browsing through the queries of others.
There has been some research e orts in determining the intent of mobile users [10], however, there is still a lot of work to be done to determine what it is the user is actually trying to achieve.
Map-based interfaces provide users with the ability to specify and visualize exact locations.
For example, Google maps allows users to pinpoint exact locations based on a latitude/longitude value.
In our study, these type of precise locations were enjoyed and required by the users.
In contrast, SSBtext allowed users to specify the location of both queries and answers in more vague terms.
Interestingly, participants were more inclined to choose this interface when answering a query.
This preference may be due to two facts: (1) The e ort required to submit an answer and its location via SSBtext was lower than the e ort required to accomplish the same task via SSBmap; and (2) we, as human-beings, often do not need exact locations to orientate ourselves and locate items of interest.
For example, drawing from cognitive map theories, humans can often navigate/guide through space with transformed or even distorted representations based on their accumulated experiences of an environment over time [21].
Therefore high-level location details, such as around the corner or down that street, are probably su cient in many circumstances.
The results in section 5.4 support these two hypotheses.
Therefore, precise locations are not necessarily needed or desired at all times.
Given that maps do not traditionally allow for vague location searches or answers, an alternative interface should be supported in certain situations.
Furthermore, providing support for fuzzy or vague locations is important from a privacy perspective.
Most location-based services raise privacy concerns and SSB is no exception.
A comparative study by Barkhuss & Dey [3] of privacy issues in mobile location-based services highlighted that users were more concerned with privacy in location-tracking systems rather than position-aware systems.
Therefore, it makes sense from a UI perspective to provide users with more control in speci cating vague or ambiguous locations.
Recent work by Voong & Beale [22] looks at supporting location deception in mobile social awareness tools.
Takeaway message 4: mobile search and information access tools should provide support for users to specify fuzzy or vague locations in order to address (1) growing privacy concerns of mobile users and (2) increasing desires for ambiguous locations.
The main implication that we can draw from our results for the interface design of future location-based mobile search services seems to be that a user interface that is solely based on a map visualization is not optimal.
Our results o er numerous indications that a hybrid solution which allow users to seamlessly switch between a map-based and a text-based interface is the way to go.
In this way, the speed of navigation that a text-based interface can o er can be coupled with the overview and sense of place that a map can provide.
Participants of the user study also implied that they would enjoy the use of a hybrid solution.
For example, one participant stated:  I like to start with the map to get a overview and move to the text version afterwards. .
However, an ideal hybrid solution is not a simple parallel implementation of two interface but rather a smart mix.
For example, the screen that shows details of the query or details of an answer should display both a textual address and a more precise location on a static map.
Takeaway message 5: location-based search tools should support both text-based and map-based interface modali-single hybrid application should involve a mashup that supports users  interactions and intentions while on-the-move.
The interface design of mobile Web services can have a signi cant impact on the way users interact with and use the service in question.
The majority of existing mobile location based services are built on top of a map-based visualization.
However, we have argued that although maps appear to be both an intuitive and optimal interface choice from a human centric perspective, the choice of mobile interface depends on a range of factors including the user s personal references, their information need, their situational context as well as their need/desire to convey precise location information or more ambiguous location details.
In this paper, we present the results of an exploratory  eld study of these two interfaces   involving 34 users over a 1 month period   where we focus in particular on the impact that the type of user interface (e.g.
map vs text) has on the search and information discovery experience of mobile users.
Our results show that a hybrid solution that considers each of our  ve take away messages is the way forward in terms of providing useful mobile information access services.
