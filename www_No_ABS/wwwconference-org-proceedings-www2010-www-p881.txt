As inherently underspeci ed representations of more complex information needs, queries submitted to a Web search engine are often ambiguous [29].
Such ambiguity is manifested in di erent ways.
For instance, a query may not express a clearly de ned sense (e.g.,  java ), or it can represent a genuine need for a broader coverage of a clearly de ned sense (e.g.,  java programming language ).
In the  rst case, the query is open to di erent interpretations (e.g., programming language, co ee, island), whereas in the second case, Copyright is held by the International World Wide Web Conference Committee (IW3C2).
Distribution of these papers is limited to classroom use, and personal use by others.
the user might be interested in di erent aspects underlying the query (e.g., development kit download, courses, books, language speci cations, tutorials) [11].
Whatever the level of ambiguity associated to a query, a search engine has to tackle it.
The simplest approach could be to completely ignore any sort of ambiguity and treat the query as representing a single, well de ned information need.
This could result in satisfying the user s need only by chance.
A di erent approach could be to infer the most plausible meaning underlying the query (e.g., the most popular), and to focus the retrieval process on results satisfying that particular meaning.
This, in turn, could represent a risky choice, as a wrong guess could leave the user unsatis- ed.
Another alternative could be to explicitly ask the user for feedback on the correct meaning underlying the query.
This has been one of the approaches taken by many Web search engines, in which a user is presented with di erent reformulations of the original query.
However, one cannot expect that the users will always be willing to tell the search engine what they mean exactly [16] and, even if they would, their underlying need might still be for multiple aspects related to the speci ed meaning.
In such a scenario, where a (usually short) query is the only evidence of the user s information need available to the search engine, a more sensible approach is to diversify the results retrieved for this query, in the hope that at least one of them will satisfy the user [1].
Diversifying search results usually involves a departure from the independent document relevance assumption underlying the well-known probability ranking principle in information retrieval (IR) [12, 24].
it is arguable whether users will still  nd a given document relevant to their information need once other documents already satisfying this need have been observed.
Therefore, a search engine should consider not only the relevance of each individual document, but also how relevant the document is in light of the other retrieved documents [13].
By doing so, the retrieved documents should provide the maximum coverage and minimum redundancy with respect to the possible aspects underlying a query [10].
Ideally, the covered aspects should also re ect their relative importance, as perceived by the user population [1].
In its general form, this is an NP-hard problem [1, 6].
Most previous approaches to this problem are based on a greedy approximation algorithm, inspired by the notion of maximal marginal relevance [5].
In common, they seek to promote diversity by directly comparing the documents retrieved for a given query to one another, in order to iteratively select those that are the most relevant to the query while being the most dissimilar to the Indeed, implicitly assume that similar documents will cover similar interpretations or aspects underlying the query, and should hence be demoted, in order to achieve a diversi ed ranking.
Alternatively, the broad topic underlying an ambiguous or underspeci ed query can be usually decomposed into its constituent subtopics.
Hence, we can explicitly account for di erent aspects of the query, in order to produce a diverse ranking of results.
In this paper, we introduce a novel framework for search result diversi cation that exploits this intuition.
In particular, our framework uncovers di erent aspects underlying the original query in the form of sub-queries, and estimates the relevance of the retrieved documents to each identi ed sub-query.
As a consequence, we can take into account both the variety of aspects covered by a single document, as well as its novelty in face of the aspects already covered by other retrieved documents.
Moreover, the relative importance of each identi ed sub-query can be directly incorporated within our framework, so as to bias the diversi cation process towards more plausible aspects of the initial query.
In a thorough experimentation, we evaluate the e ectiveness of our framework using a large Web test collection, in the context of the diversity task of the TREC
 bility in a real setting, we investigate two di erent strategies for sub-query generation, based on query reformulations provided by three major Web search engines.
The results attest the e ectiveness of our framework when compared to current state-of-the-art diversi cation approaches.
The remainder of this paper is organised as follows.
Section 2 overviews related work on search result diversi cation.
Section 3 further details our main contributions.
Section 4 introduces our proposed framework for the diversi cation problem, its probabilistic derivation and the estimation of its components.
Sections 5 and 6 describe the experimental setup and the evaluation of our proposed framework, respectively, in the context of the TREC 2009 Web track.
Lastly, Section 7 presents our concluding remarks.
Search result diversi cation can be characterised as a bi-criterion optimisation problem, in which one seeks to max-imise the overall relevance of a document ranking to multiple query aspects, while minimising its redundancy with respect to these aspects [14].
In its general form, this problem is an instance of the maximum coverage problem [18], which makes it NP-hard.
Indeed, if we consider a query q as comprising a set of aspects A, and each document d from an initial ranking R as comprising a subset of the aspects in A, then the problem is to  nd a subset S   R, with |S|     , such that |  di S di| is maximised for a given   [1].
In practice, most previous works on search result diversi cation are based on a greedy approximation to this problem.
Given a ranking R for an ambiguous query, a re-ranking S is produced by iteratively selecting a  local-best  document from R \ S. This document should provide the maximum coverage of the aspects underlying the initial query, and the minimum redundancy with respect to the aspects covered by the documents already in S (i.e., the documents selected in previous iterations).
The existing approaches di er mostly in how they account for the di erent query aspects.
In particular, these approaches can be categorised as either implicit or explicit [27].
Implicit approaches assume that similar documents will cover similar aspects, and should hence be demoted in the  nal ranking, so as to reduce its overall redundancy.
In turn, explicit approaches directly model the query aspects, actively seeking to maximise the coverage of their selected documents with respect to these aspects.
Among the implicit diversi cation approaches in the literature, the maximal marginal relevance (MMR) method of Carbonell and Goldstein [5] is the canonical example.
At each iteration, the MMR method selects a document that has the highest combination of a similarity score with respect to a query and a dissimilarity score with respect to the documents selected at earlier ranks.
Subsequent approaches inspired by MMR di er mainly in how the similarity between documents is computed.
For instance, whereas Carbonell and Goldstein suggested using any content-based similarity function (e.g., cosine), Zhai and La erty [33] proposed to model relevance and redundancy within the language modelling framework.
In particular, they devised several methods based on the Kullback-Leibler divergence measure and a simple mixture model.
Chen and Karger [8] proposed a probabilistic approach to the related problem of retrieving one relevant document for a given query.
By assuming that the previously selected documents are not relevant, they achieved an unplanned e ect of diversi cation.
More recently, Wang and Zhu [30] employed the correlation between documents as a measure of their similarity.
Their work also showed that, by minimising this correlation, the overall variance of a document ranking is reduced, as well as the associated risk of overestimating its relevance.
Instead of accounting for the aspects covered by each document only implicitly, a promising direction is to explicitly model these aspects within the diversi cation approach.
For instance, Agrawal et al. [1] investigated the diversi cation problem by employing a taxonomy for both queries and documents.
In their work, two documents retrieved for a query are considered similar if they are con dently clas-si ed into one or more common categories covered by the query.
Hence, documents classi ed into many categories are favoured, while those classi ed into already well-represented categories are penalised.
Similarly, Carterette and Chan-dar [7] proposed a probabilistic model to maximise the coverage of a document ranking with respect to the aspects of a query, represented as topics or relevance models estimated from the top ranked documents.
A di erent approach was investigated by Radlinski and Dumais [23].
They proposed to  lter the ranking produced for a given query, so as to have a more even distribution of documents satisfying each aspect of this query.
In particular, they uncovered query aspects from the query log of a commercial search engine.
Our approach also accounts for the aspects of a query in an explicit way.
However, di erently from the aforementioned approaches, we do not simply  lter out documents satisfying an already well satis ed aspect.
Moreover, we do not require that these aspects be estimated with respect to a prede ned taxonomy, or using the top retrieved documents for the initial query.
Instead, by representing the several query aspects as a set of sub-queries, we recognise the multiplicity behind an ambiguous query, without making any limiting assumption regarding the generation of these sub-queries.
Furthermore, by estimating the relevance of each retrieved document to every identi ed sub-query, as well as the importance of each sub-query itself, we address the di-versi cation problem in a principled and e ective manner.
The major contributions of this paper are: xQuAD(q, R,  ,  )


   A novel probabilistic framework for search result di-versi cation, which explicitly models the information need of an ambiguous query as a set of sub-queries;


 d    arg maxd R\S (1    ) P(d|q) +   P(d,  S|q) R   R \ {d } S   S   {d }   An analysis of the e ectiveness of the sub-queries derived from two types of query reformulation provided by three major Web search engines;   A thorough evaluation of the several components of our proposed framework, which naturally model di erent dimensions of the diversi cation problem.
The diversi cation problem can be naturally stated as a tradeo  between  nding relevant and novel information: Given an initial ranking R for a query q,  nd a re-ranking S that has the maximum coverage and the minimum redundancy with respect to the di erent aspects underlying q.
As discussed in Section 2, in its general form, this bi-criterion optimisation problem can be reduced from the maximum coverage problem [18], which makes it NP-hard [1].
Fortunately, there is a well-known approximation to this problem [5], which works well in practice [6], and is at the heart of most of the approaches to search result diversi cation presented in Section 2.
However, most of these approaches seek to achieve the objective of diversi cation at the high expense of directly comparing documents to one another.
On the other hand, the approaches that somehow explicitly account for the aspects associated to the initial query have their own limitations.
For instance, they rely on  ltering heuristics [23], or on the estimation of query aspects based on a prede ned taxonomy [1] or on the documents retrieved for the initial query [7].
Instead, in this work, we propose to model the aspects associated to a query in a principled yet practical manner.
In particular, we consider an ambiguous query as a compound rather than a single representation of an underlying information need.
We then model this query as a set of sub-queries, which can be estimated in a variety of ways.
In this work, we experiment with sub-queries derived from query reformulations provided by major Web search engines, as discussed in Section 4.2.2.
In this section, we introduce xQuAD (eXplicit Query Aspect Diversi cation), a novel probabilistic framework for search result diversi cation, which explicitly models an ambiguous query as a set of sub-queries.
Sub-queries associated to an initial query can be e ectively uncovered using mechanisms available to most modern Web search engines, e.g., query reformulations based on previous user interactions [3].
Moreover, probability theory provides xQuAD with an appropriate groundwork for handling the uncertainty incurred by the underspeci cation of information needs as queries.
In particular, we derive our framework in light of the aforementioned approximation of the general diversi cation problem, as described in Section 2.
The working scheme of xQuAD is described in Algorithm 1.
6 end while
 Algorithm 1: The xQuAD framework.
Given an ambiguous query q and an initial ranking R produced for this query, we build a new ranking S by iteratively selecting the   highest scored documents from R, according to the following probability mixture model: (1    ) P(d|q) +   P(d,  S|q), (1) where P(d|q) is the likelihood of document d being observed given the initial query q, and P(d,  S|q) is the likelihood of observing this document but not the documents already in S, which were selected in previous iterations of the algorithm.
In particular, these two probabilities can be regarded as modelling relevance and diversity, respectively, with a mixing parameter   controlling the tradeo  between the two.
In order to derive P(d,  S|q), we explicitly consider the possibly several aspects underlying the initial query q as a set of sub-queries, generated by some mechanism Q, such that Q = {q1,       , qk}.
By enforcing Pqi Q P(qi|q) = 1, we can marginalise P(d,  S|q) across multiple sub-queries: P(d,  S|q) = X qi Q P(qi|q) P(d,  S|qi), (2) where P(qi|q) can be seen as a measure of the relative importance of the sub-query qi with respect to the other sub-queries associated to q.
For instance, this probability could re ect the fraction of the user population that is interested in the aspect represented by the sub-query qi more so than in other aspects of q.
Next, assuming that the observation of the document d is independent of the documents already in S for a given sub-query qi (since the documents in S are  xed at a given iteration), we break down P(d,  S|qi) as: P(d,  S|qi) = P(d|qi) P(  S|qi), (3) where P(d|qi) is a measure of the coverage of document d with respect to the sub-query qi.
In turn, P(  S|qi) provides a measure of novelty, as the probability of qi not being satis ed by any of the documents already selected in S.
The independence assumption in Equation (3) has a subtle but important implication: it turns the computation of novelty from a direct comparison between documents into an estimation of the marginal utility of the sub-queries satis ed by a document.
In other words, instead of comparing a document d to all documents already selected in S, as implicit diversi cation approaches would do, we estimate the utility of any document satisfying the sub-query qi, given how well it is already satis ed by the documents in S. Although we achieve the same objective of promoting novelty, we do so in a much more e cient way.
In particular, our approach does not require looking up the terms contained in all documents from the initial ranking R, so as to enable their direct comparison.
Instead, we just update the novelty estimation of a given sub-query, based on the estimated relevance of each In contrast to implicit approaches, this only incurs a few additional inverted  le lookups for the documents matching the sub-query terms.
In order to derive P(  S|qi), we further assume that the relevance of a document dj in S to a given sub-query qi is independent of the relevance of other documents in S to the same sub-query.
Since our goal is to estimate the likelihood of the ranking S (as an entire set of documents) not satisfying the sub-query qi, this constitutes a plausible assumption.
Under this assumption, we have: P(  S|qi) = P(d1,       , dn 1|qi)
 dj  S (1   P(dj|qi)).
(4) Finally, by replacing Equations (2), (3) and (4) into Equation (1), we have the  nal score computed by xQuAD: (1    ) P(d|q) +   X hP(qi|q) P(d|qi) Y qi Q dj  S (1   P(dj|qi))i.
(5)
 Within the xQuAD framework, several dimensions of the diversi cation problem are naturally modelled as individual probabilities.
In practice, we estimate each of these probabilities as a separate component of the framework.
Along with the sub-query generation mechanism, these components can be summarised as follows:

 (a) sub-query generation, Q, (b) sub-query importance, P(qi|q), (c) document coverage, Pqi Q P(d|qi), (d) document novelty, Pqi Q| P(d|qi)>0 P(  S|qi).
In the remainder of this section, we propose suitable alternatives for estimating these components.
In Section 6, the impact of each of these components on the diversi cation performance of xQuAD is thoroughly investigated.
The document relevance, coverage, and novelty components of the xQuAD framework are based on estimations of relevance.
In particular, the document relevance component estimates the relevance of a document to the initial query, while the coverage and novelty components are based on relevance estimations with respect to sub-queries.
In practice, any probabilistic retrieval approach can be used to produce these estimations, e.g., language modelling [17].
Moreover, di erent approaches can be deployed to produce the relevance estimation for each individual component.
In Section 6, we experiment with three e ective document weighting models, from di erent families of probabilistic models, in order to estimate these components.
In practice, we produce a document ranking for both the initial query, as well as each of the generated sub-queries.
For the sake of clarity, a ranking produced for the initial query is denoted a baseline ranking, while those generated for sub-queries are denoted sub-rankings.
Sub-queries play a fundamental role within our proposed diversi cation framework.
Indeed, the introduction of this component allows us to depart from the usually ine cient approach of directly comparing the retrieved documents to one another.
More importantly, we diverge from the implicit assumption that similar documents will cover similar aspects underlying a query.
Instead, by explicitly modelling these aspects in the form of sub-queries, we claim that a more e ective search result diversi cation can be attained.
Several techniques can be used for generating keyword-based representations of query aspects in the form of sub-queries.
For instance, using the target document collection itself, one could apply traditional query expansion techniques [26] in order to generate  expanded sub-queries  from the top retrieved documents in a baseline ranking, or from di erent document clusters identi ed in this ranking [27, 32].
Alternatively, using external resources, such as a query log, one could mine sub-queries related to the initial query, by analysing patterns of query reformulations, or their distance to the initial query in a bipartite click-through graph [3, 31].
For instance, one could observe that documents clicked for the query  java  are also likely to be clicked for the query  sun microsystems .
Another observation could be that users frequently reformulate the query  java  into  java development kit , and less frequently so into  java indonesia tourism .
In this work, we investigate the e ectiveness of using query reformulations provided by three major Web search engines (WSEs) as the sub-query generation mechanism Q of our diversi cation framework.
To preserve anonymity, we refer to these search engines as A, B, and C. As further detailed in Section 5, for each of these WSEs and each of the 50 TREC
 two sets of sub-queries, extracted in late July 2009:   related sub-queries, as displayed alongside the results for the initial query, in the WSEs  interface,   suggested sub-queries, as displayed in a dropdown list, as the initial query is typed in the WSEs  search box.
Table 1 shows the main statistics of the generated sub-queries: the average number of sub-queries per initial query, h|Q|i, the average length of the generated sub-queries, h|qi|i, and the average number of results associated to each sub-query according to the Google WSE,1 hnw(qi)i.
WSE Sub-queries


 related suggested related suggested related suggested h|Q|i





 h|qi|i hnw(qi)i








 Table 1: Statistics of the generated sub-queries.
From Table 1, we can observe that the three WSEs provide roughly the same number of sub-queries on average, evenly distributed between related and suggested sub-queries.
The exception is WSE C, which provides almost double the number of related sub-queries when compared to the other WSEs.
source to derive result set statistics for the sub-queries generated from the three considered WSEs.
di erent WSEs, with the short sub-queries resembling typical Web queries [19].
However, these sub-queries are overall longer than the 50 queries considered in our experiments.
Indeed, the TREC 2009 Web track queries have an average length of 2.1 terms.
This observation suggests that the generated sub-queries are likely to correspond to alternative specialisations of the initial queries [4].
Finally, the estimated result set size of the average sub-query also shows a high similarity across WSEs, with the related sub-queries yielding a consistently bigger size when compared to the suggested ones.
Although the precise mechanisms used by these WSEs for producing query reformulations are not publicly known, these mechanisms can be arguably regarded as delivering state-of-the-art query log mining, even if only on the basis that the WSEs have a wealth of click data available.
Moreover, by evaluating them as black-box implementations of the sub-query generation component of xQuAD, we can draw useful insights regarding their e ectiveness in providing a diverse coverage of the aspects of an initial query.
In order to favour sub-queries more likely to represent aspects of interest to the user population, we propose three di erent ways of estimating the sub-query importance component, P(qi|q), within our framework.
The  rst of these can be seen as a baseline estimation mechanism, which considers all sub-queries as being equally important: a given query, CRCS builds a centralised ranking of documents sampled from the di erent collections.
The rank of each candidate collection is then computed based on its estimated size and the rank of its documents in the centralised ranking.
Inspired by CRCS, we devise our third and  nal sub-query importance estimation mechanism as: ic(qi|q) = nc(qi) maxqi Q nc(qi)
  nc(qi) X d| P(d|qi)>0     j(d, q), (8) where nc(qi) is the total number of results retrieved for qi in the local corpus,  nc(qi) corresponds to the number of results associated to the sub-query qi that are among the top   ranked results for the initial query q, with j(d, q) giving the ranking position of the document d with respect to q.
Finally, the estimator ic(qi|q) is further normalised to yield a probability distribution: Pc(qi|q) = ic(qi|q) Pqj  Q ic(qj|q) .
(9)

 In this section, we describe the experimental setup that supports the evaluation of our proposed framework, which is reported in Section 6.
In particular, our experimentation aims to answer three main research questions:
 in diversifying the results for this query?
Pu(qi|q) =

 , (6)
 an e ective resource for explicit diversi cation?
where, as before, Q represents the set of sub-queries generated with respect to the initial query q.
However, the relative importance of the sub-queries generated from an initial query should ideally re ect the interest of information consumers (i.e., the user population) in the particular aspect represented by each sub-query [10].
This could be estimated, for instance, based on the relative frequency of each sub-query in a query log.
When no such data is available to estimate the interest of information consumers in a particular aspect, an alternative is to estimate the interest this aspect sparks from information providers.
In particular, we propose to estimate the relative importance of each sub-query based on how well it is covered by a given collection.
Our next importance estimator builds upon this idea and relies once more on information available from all major Web search engines.
It is given as: Pw(qi|q) = nw(qi) Pqj  Q nw(qj ) , (7) where nw(qi) is the estimated number of results retrieved for the sub-query qi according to the search engine w. As discussed in Section 4.2.2, we rely on estimates from Google.
As an alternative to relying on an external resource, we propose an analogous estimator, which is solely based on a local corpus.
In particular, we estimate the relative importance of each generated sub-query, by considering the ranking produced for this sub-query as a sample of the documents covering this sub-query in the local corpus.
This estimation mechanism is inspired by the Central Rank-based Collection Selection (CRCS [28]) algorithm in distributed information retrieval.
To rank distributed collections of documents for
 the performance of the whole framework?
In the following, we detail the document collection, the topics, and the metrics used in our evaluation.
Additionally, we describe the baselines to which our approach is compared, including the training procedure to set their parameters, when necessary.
The Terrier IR platform2 [21] is used for both indexing and retrieval, with Porter s stemmer and standard English stopwords removal.
Our experiments are conducted in the context of the diversity task of the TREC 2009 Web track [9].
The goal of this task is to produce a ranking of documents for a given query that maximises the coverage of the possible aspects underlying this query, while reducing its overall redundancy with respect to the covered aspects.
The test collection used in this task is the new TREC ClueWeb09 dataset.3 In our experiments, we consider a subset of this collection, as used in the TREC 2009 Web track, comprising a total of 50 million English Web documents.
A total of 50 topics were available for this task.
Each topic includes from 3 to 8 subtopics, as identi ed by TREC assessors, with relevance judgements provided at the subtopic level.
Figure 1 illustrates an example topic with different  elds, including its identi ed subtopics.
In our experiments, the  query   eld of a topic is used as the initial query.
Besides the sub-queries generated based on the 2http://www.terrier.org
 <query>obama family tree</query> <description> Find information on President Barack Obama s family history, including genealogy, national origins, places and dates of birth, etc.
</description> <subtopic number="1" type="nav"> Find the TIME magazine photo essay "Barack Obama s Family Tree".
</subtopic> <subtopic number="2" type="inf"> Where did Barack Obama s parents and grandparents come from?
</subtopic> <subtopic number="3" type="inf"> Find biographical information on Barack Obama s mother.
</subtopic> </topic> Figure 1: TREC 2009 Web track, topic 1, along with its corresponding subtopics.
WSEs  reformulations for each of the considered 50 queries, as discussed in Section 4.2.2, we build an alternative set of sub-queries from the provided o cial subtopics.
This provides an upper-bound sub-query generation mechanism for evaluating the sub-queries derived from the considered WSEs.
Moreover, by employing this upper-bound as a uniform, standard setting, we can focus on evaluating the di-versi cation strategy deployed by our framework compared to that of state-of-the-art diversi cation approaches.
The evaluation results in the diversity task of the TREC
 rics:  -NDCG and IA-P.
The  -normalised discounted cumulative gain ( -NDCG [10]) metric balances relevance and diversity through the tuning parameter  .
The larger the value of  , the more diversity is rewarded.
In contrast, when   = 0, only relevance is rewarded, and this metric is equivalent to the traditional NDCG [20].
Besides  -NDCG, our evaluation is also based on a gener-alisation of standard IR metrics that rewards the diversity of a ranking.
In particular, we use the intent-aware precision (IA-P [1]) metric, which extends the traditional notion of precision in order to account for the possible aspects underlying a query and their relative importance.
In our evaluation, both  -NDCG and IA-P are reported at three di erent rank cuto s: 5, 10, and 100.
These cuto s focus on the evaluation at early ranks, which are particularly important in a Web search context [19].
Both  -NDCG and IA-P are computed following the standard practice in the TREC 2009 Web track [9].
In particular,  -NDCG is computed with   = 0.5, in order to give equal weights to both relevance and diversity, and IA-P is computed with all query aspects considered equally important.
We evaluate the e ectiveness of xQuAD at diversifying the search results produced by three e ective probabilistic document weighting models: BM25 [25], the DPH Divergence From Randomness (DFR) model [2], and Hiemstra s language modelling (LM) [17].
In particular, we employ

 @



 - 









 BM25+xQuAD DPH+xQuAD LM+xQuAD



 mixing parameter ( )

 Figure 2: Tradeo  between relevance and diversity.
these weighting models with their often suggested default settings: BM25 s b = 0.75 [25], DPH s c = 1.0 [2], and LM s  LM = 0.15 [17].
As discussed in Section 4.2.1, these weighting models are used to produce both a baseline ranking as well as the sub-rankings for di erent sub-queries.
Besides the baseline ranking produced for an initial query, we compare xQuAD to both implicit and explicit diversi cation approaches, deployed on top of this baseline ranking.
To di erentiate between these approaches and the baseline ranking, the former are referred to as diversi cation baselines.
These include the approaches of Carbonell and Gold-stein [5], Radlinski and Dumais [23], and Agrawal et al. [1], described in Section 2.
In particular, the last two make use of external resources or judgements, such as query logs or a classi cation taxonomy, which are not available for the test collection at hand.
Therefore, we simulate their best-case scenario, by considering the o cial subtopics provided by the collection as input to their diversi cation models.
To simulate the approach of Radlinski and Dumais [23], the of cial Web track subtopics are directly used as a proxy for query log reformulations.
As for the approach of Agrawal et al. [1], the o cial subtopics are used as a representation of taxonomy classes.
The con dence of the classi cation of a document to a given class, in turn, is surrogated by the estimated relevance of the document to the subtopic that represents the class.
All techniques are applied to re-rank the top   = 1000 documents retrieved by the baseline ranking for each query.
As discussed in Section 4, the xQuAD framework is based on a mixture of a relevance component and a diversity component, parameterised by  .
In order to illustrate the trade-o  between these two components, Figure 2 shows the performance of xQuAD when varying the parameter  , with the o cial TREC subtopics used as sub-queries.
From Figure 2, we observe that our framework consistently improves over the baseline ranking (  = 0) for a range of   values, with a peak around 0.15 for both BM25 and DPH.
For LM, which exhibits a lower performance, a more aggressive diver-si cation approach (i.e., a larger  ) seems more appropriate.
In our experiments, in order to train  , we perform a 5-fold cross validation over the 50 topics, optimising for  - task of the TREC 2009 Web track.
The same approach is used to train a similar interpolation parameter employed by MMR, in order to trade o  its relevance and novelty estimations [5].
Note that the approaches of Radlinski and Dumais [23] and Agrawal et al. [1] do not require training under their simulated best-case scenario.
In this section, we thoroughly evaluate the xQuAD framework and the impact of its components on a diversi cation task.
In order to answer the main research questions stated in Section 5, we proceed as follows.
In Section 6.1, we assess the diversi cation e ectiveness of xQuAD, by comparing it to state-of-the-art diversi cation approaches in their simulated best-case scenario, as described in Section 5.
In Section 6.2.1, we investigate the impact of the sub-query generation component in our framework, by comparing the performance of xQuAD using related and suggested sub-queries provided by major WSEs.
In Section 6.2.2, we evaluate the three sub-query importance estimation mechanisms introduced in Section 4.2.3.
Finally, in Section 6.2.3, by attempting to improve the baseline ranking and also the sub-rankings, we evaluate the impact of the relevance, coverage, and novelty components on the performance of xQuAD.
In this experiment, we aim to answer the  rst of our stated research questions, namely, whether accounting for the aspects underlying a query in an explicit way helps diversifying the results for this query.
To investigate this, we evaluate the performance of xQuAD at diversifying the baseline rankings produced by three di erent weighting models: BM25, DPH, and LM.
Additionally, we compare its performance to that of three diversi cation baselines.
The classical MMR method of Carbonell and Goldstein [5] is used as a representative of implicit diversi cation approaches.
As explicit diversi cation baselines, we consider simulated versions of the approaches of Radlinski and Dumais [23] and Agrawal et al. [1], which we refer to as Q-Filter and IA-Select, respectively.
As discussed in Section 5, in our simulation, we experiment with both xQuAD and these explicit diversi cation baselines using the o cial TREC 2009 Web track subtopics.
By doing so, we can isolate the impact of the query generation component and focus on comparing the diversi cation strategies provided by these approaches.
Table 2 shows the results of this evaluation in terms of  -NDCG and IA-P.
The best result per baseline ranking is highlighted in bold.
To provide a fair comparison to the di-versi cation baselines, which do not take into account the relative importance of di erent query aspects, xQuAD is applied with the Pu importance estimator, as given by Equation (6).
Accordingly, it is denoted xQuADu.
From Table 2, we  rst observe that xQuAD markedly out-In performs the diversi cation baselines in most settings.
particular, it is the only approach that consistently improves the initial baseline ranking provided by BM25, DPH, and LM, with gains of up to 30% (BM25,  -NDCG@5).
The only exception is IA-P for the DPH baseline ranking, in which case the initial ranking itself performs the best, followed closely by the other approaches.
However, none of these differences is statistically signi cant, according to the Wilcoxon signed-rank test with p < 0.05.
A further investigation  -NDCG @5 @5



 @10 @100








 @10 @100








 +Q-Filter
 +IA-Select 0.110

 +xQuADu 0.208 0.227 0.324 0.080 0.075 0.056







 +Q-Filter

 +IA-Select 0.148


 +xQuADu 0.208 0.243 0.334 0.097







 +Q-Filter


 +IA-Select 0.081

 +xQuADu 0.085 0.104 0.198 0.045 0.042 0.034


















 Table 2: Diversi cation performance using the o -cial TREC 2009 Web track diversity subtopics.
shows that the considered weighting models underperform for some queries, particularly at earlier ranks, as emphasised by the reported metrics.
We hypothesise that improving the relevance estimations produced by these weighting models could result in further improvements.
An initial analysis in this direction is conducted in Section 6.2.3.
Overall, the obtained results attest the e ectiveness of the explicit diver-si cation strategy implemented by xQuAD when compared to other diversi cation approaches.
In the previous section, we have demonstrated the e ec-tiveness of the xQuAD framework for search result diversi cation across di erent baseline rankings, when compared to state-of-the-art diversi cation approaches.
In the remainder of this section, we investigate the performance of alternative implementations for its components, and how they impact the performance of the framework as a whole.
Recalling our main research questions, in this experiment, we investigate the e ectiveness of using query reformulations provided by three major WSEs for the diversi cation task.
In particular, we resort to the related and suggested sub-queries provided by these WSEs in order to implement the sub-query generation component of xQuAD.
Table 3 shows the performance of xQuAD using the obtained sub-queries to re-rank the results provided by the same baseline rankings used in the previous experiment, namely, BM25, DPH, and LM.
The best performance with respect to each of these baselines is highlighted in bold.
Once again, xQuAD is applied with the Pu sub-query importance estimator.
From Table 3, we  rst observe that, in general, a lower performance is obtained when compared to the results in Table 2, which simulate an upper-bound query generation mechanism.
Nonetheless, improvements over the initial ranking are still obtained in most settings.
When we compare the performance of xQuAD using query reformulations provided by the three WSEs, no clear trend can be observed.
This suggests that the considered WSEs  query reformulation mechanisms perform comparably, at least in terms of their e ectiveness in covering diverse aspects of an initial query.
A distinction can be made, however, between the two types of sub-queries derived from the WSEs.
In partic-
@10 @100 @5 @5 @5
 +xQuADu +xQuADu +xQuADu
 +xQuADu +xQuADu +xQuADu
 +xQuADu +xQuADu +xQuADu








 related sub-queries suggested sub-queries  -NDCG
 @10 @100 @10 @100


























 @10 @100

























































 Table 3: Diversi cation performance using related and suggested sub-queries from di erent WSEs.
@5 @5

  -NDCG


 @10 @100


 @10 @100

 +xQuADu 0.208 0.227 0.324 0.080 0.075 0.056
 +xQuADc

 +xQuADw 0.184





 +xQuADu 0.208 0.243 0.334 0.097

 +xQuADc


 +xQuADw 0.203



 +xQuADu

 +xQuADc 0.110 0.146 0.234 0.044 0.047 0.041 +xQuADw 0.078




















 Table 4: Diversi cation performance using di erent sub-query importance estimators.
ular, the suggested sub-queries outperform the related ones in most settings.
Looking back at Table 1, the observation that the suggested sub-queries tend to produce considerably smaller result sets might be an indication of their suitability in discriminating between di erent aspects of a query.
Besides generating a quality set of sub-queries, we hypoth-esise that the relative importance given to each sub-query might in uence the overall diversi cation performance of our framework.
To investigate this, we experiment with xQuAD using three di erent sub-query importance estimators, as introduced in Section 4.2.3.
In particular, Table 4 shows the performance of xQuAD using two collection-based importance estimators when compared to the previously introduced uniform importance estimator, Pu.
As discussed in Section 4.2.3, the Pw estimator (Equation (7)) is based on the result set size produced for a given sub-query, as estimated by the Google WSE, whereas Pc (Equation (9)) relies on estimates derived from the target collection itself, inspired by a resource selection approach.
In Table 4, the use of these estimators is denoted by their respective subscripts being used by xQuAD (e.g., xQuADu stands for the use of xQuAD with the Pu importance estimator).
As in the previous experiments, the diversi cation performance is evaluated across three baseline rankings and measured according to  -NDCG and IA-P at di erent cuto s.
The best value for each baseline ranking and each evaluation metric is highlighted in bold.
From Table 4, we observe that the Pu estimator consistently outperforms the others.
Among the collection-based estimators (i.e., Pw and Pc), Pw generally performs better.
As discussed in Section 4.2.3, this estimator is based on a much bigger resource than the ClueWeb09 dataset, namely, the Google index.
An exception is the LM baseline, which markedly bene ts from our resource selection-inspired estimator, Pc, in terms of both  -NDCG and IA-P.
Overall, the best performance attained by the simpler uniform estimator is not totally unexpected, since neither  -NDCG nor IA-P reward approaches that take nonuniform aspect importance distributions into account.4 Nevertheless, we hypothesise that a good importance estimator might be related to features other than the relative popularity of a sub-query.
For instance, the overlap between the sub-rankings produced for di erent sub-queries may have an impact on the performance of xQuAD, as its coverage and novelty components estimate the relevance of a document to multiple sub-queries.
This investigation, however, is left for future work.
Sections 6.2.1 and 6.2.2 investigated the impact of different sub-query generation and importance estimators, respectively, on the performance of xQuAD.
In this section, we investigate the in uence of three other important components of our framework.
As described in Section 4.2.1, the relevance component is based on relevance estimations with respect to the initial query, while the coverage and novelty components depend on relevance estimations with respect to sub-queries.
Accordingly, we experiment with xQuAD by improving the document weighting models that have been used so far for estimating these three components.
In this experiment, we apply the pBiL proximity model from the DFR framework [22], in order to favour documents in which the query terms appear in close proximity.
In particular, variants of this model were shown to improve ad-hoc retrieval performance on several TREC collections [15].
In our investigation, we apply this model to both the baseline ranking (the relevance component) as well as the sub-rankings generated for the various identi-
portance of di erent query aspects, it is not trivial to derive a ground-truth importance distribution for evaluation purposes.
Hence, as discussed in Section 5.2, IA-P is computed assuming that all aspects are equally important, in accordance with the TREC 2009 Web track setup.
@5
  -NDCG



 @10 @100


 @10 @100





 +xQuADu


 +xQuADu (b)




 +xQuADu (s)



 +xQuADu (bs)





 +xQuADu




 +xQuADu (b)



 +xQuADu (s)



 +xQuADu (bs)










 +xQuADu


 +xQuADu (b) +xQuADu (s)



 +xQuADu (bs) 0.132 0.162 0.248 0.078 0.076 0.053







 @5 @5  -NDCG @10 @100




 @10 @100






 +xQuADc


 +xQuADc (b)

 +xQuADc (s)

 +xQuADc (bs) 0.144





 +xQuADc



 +xQuADc (b)



 +xQuADc (s)

 +xQuADc (bs) 0.173






 +xQuADc
 +xQuADc (b)



 +xQuADc (s) +xQuADc (bs) 0.138






















 Table 5: Diversi cation performance by enhancing the baseline ranking (b), the ranking for each sub-query (s), or both (bs).
xQuAD is applied with the uniform importance estimator.
Table 6: Diversi cation performance by enhancing the baseline ranking (b), the ranking for each sub-query (s), or both (bs).
xQuAD is applied with the resource selection-inspired importance estimator.
 ed sub-queries (the coverage and novelty components).
Table 5 presents the results of this investigation.
In the table, (b) and (s) stand for the application of the pBiL proximity model in order to enhance the baseline ranking and the sub-rankings, respectively, whereas (bs) account for the application of this technique to both components.
For uniformity, once again, xQuAD is applied with the Pu importance estimator.
The performance of xQuAD without any enhancement is included as an additional baseline.
From Table 5, we can observe that the diversi cation performance of xQuAD can be further improved by improving the baseline ranking (b), the sub-rankings (s), or both (bs).
Note, however, that these improvements are only consistent when the initially weaker LM baseline is considered.
In the case of LM, improvements can be substantial, for both the  -NDCG and IA-P metrics and across all cuto s, particularly when all three components are improved (the (bs) variant).
Nonetheless, for BM25 and DPH, improving the performance of individual components can also harm the diversi cation performance of xQuAD as a whole.
This is likely due to the aforementioned tradeo  between relevance and diversity (as illustrated in Figure 2), and could probably be overcome by having the xQuAD s mixing parameter   appropriately trained for the enhanced components.
As a  nal observation, we note that improvements on these components may also impact the performance of other components.
To illustrate this e ect, Table 6 presents similar results to those presented in Table 5, however using our resource selection-inspired importance estimator (Pc) instead of the uniform one (Pu).
In particular, as this estimator takes into account how well the documents retrieved for a particular sub-query are ranked with respect to the initial query, it can substantially bene t from improvements to both the baseline ranking and the sub-rankings.
As shown in Table 6, improvements can be attained on top of all baselines, and are particularly marked for the LM baseline.
Indeed, the performance of xQuAD on top of this relatively weaker baseline is raised to a comparable level as that of our framework using BM25 or DPH.
This observation attests the potential bene t of improving the relevance, coverage, and novelty components of xQuAD.
Furthermore, it highlights the bene t of handling these components within a uni ed diversi cation framework, which allows for di erent estimation choices to be made in a principled manner.
In this paper, we have introduced a novel probabilistic framework for search result diversi cation.
In particular, the xQuAD (eXplicit Query Aspect Diversi cation) framework explicitly models the aspects underlying an initial query, in the form of sub-queries.
Instead of comparing documents to one another which usually demands expensive computations our approach achieves an e ective diversi- cation performance by directly estimating the relevance of the retrieved documents to multiple sub-queries.
Besides being e cient in practice, the principled formulation of xQuAD naturally models several dimensions of interest in a diversi cation task, as components within the framework.
These include the relevance of a document to an initial query and its multiple aspects, identi ed as sub-queries, as well as the relative importance of each sub-query and how novel a document satisfying each sub-query is.
We have thoroughly investigated the e ectiveness of the xQuAD framework at diversifying Web search results, within the standard experimentation paradigm provided by the diversity task of the TREC 2009 Web track.
In particular, by simulating an upper-bound sub-query generation mechanism, we have shown that our framework outperforms existing implicit and explicit diversi cation approaches across several settings.
By investigating the impact of each of the components of our framework, we have shown that e ective sub-queries can be generated based on query reformulations provided by major Web search engines.
Reformulations provided in the form of suggested queries showed encouraging promise in generating a diverse representation of the aspects underlying an initial query.
Moreover, we have experimented with di erent mechanisms to estimate the relative importance of each uncovered sub-query, based on statistics derived from both the local collection and from the index of the Google WSE.
Our results have shown that these estimators can bring further performance improvements, particularly when associated with a better estimation of the relevance and coverage components of xQuAD.
vestigating alternative mechanisms for estimating each of its components.
For instance, di erent query reformulation approaches could be investigated in order to generate e ective sub-queries, as well as to better estimate their relative importance with respect to other sub-queries.
In addition, the relevance, coverage, and novelty components could be enhanced by the deployment of more sophisticated document retrieval techniques.
A promising direction for investigation is the analysis of the type of each individual sub-query (e.g., navigational sub-queries are likely to bene t more from the use of link analysis than informational ones).
We are thankful to Mark Girolami for useful discussions on the probabilistic interpretation of the xQuAD framework.
