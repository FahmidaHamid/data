Ever since Banko and Brill s work a decade ago [2], it has been widely observed that many natural language processing (NLP) algorithms that excel at small data sets are quickly eclipsed by their less sophisticated counterparts as the size of training data grows larger.
Ample empirical evidences reported over the past decade have led to the belief that the size of training data eventually becomes more critical than the sophistication of the algorithms themselves, especially for the scale as enormous as the World Wide Web [19].
Our own deployment experience is congruent to the belief, yet we regularly find that the data size is merely one of the several important factors that contribute to the successful deployments of Web scale NLP technologies.
In this paper, we further elaborate the considerations towards developing Web scale NLP techniques through an apparently straightforward NLP task, namely, URL word breaking.
Word breaking is an extensively studied topic and has become such an essential component that many commercial products, such as Microsoft Office and SQL server, have all included the functionality as part of thesoftware.
Being able to break the words at proper boundaries has been critical for NLP tasks such as entity recognition[6][8], information retrieval[1][7][22], and machine translation[5][16].Aside from these traditional roots, wide adoption of many modern technologies has catapulted the need of word breaking to a new height.
In particular, the specifications for Internet domain names, UNIX file/path names and URL have forced authors to name their resources without spaces, and the constraints on the short messages for mobile and micro-blogging services have prompted the inventions of many compound words and nu-meronyms beyond the conventional means.For example, in our word breaker case, we would like to be able to split  247moms  as  24 7 moms  rather than  247 moms  and  w84u  as  w8 4 u  ( wait for you ).
To the best of our knowledge, none of the existing systems have been able to cope with these new yet frequent Web instigated languages with ease and at scale.
In this paper, we focus the discussion of the word breakingprob-lem on URL because URL plays a significant role in many Web applications,includingestimating the document prior for Web search top-ics[6][14][21].Though the problemappearsstraightforward at the first glance, the design considerations for a URL word breaker share many common traits that we deem necessary for techniques to be Web-scale ready.
First, thanks to the global reach of the Web, more and more text on the Web is multilingual in nature.
Within a URL, it is common to find an internet domain name or the path/filename to be composed in multiple languages.
The phenomenon is also observed in the search queriesand accounts for the majority of the compound word splittingerrors [1].
While it is possible for many NLP applications to be preceded by a language identification component, it is not the case for URL or query processing because the text is often too short for a language identifier to be effective.
As a result, a more practical approach is to classifying [7][22] the document and not to say, however, that one could simply build a conglomerate language model that indiscriminately includes all the text materials in one training pool.
Recent studies on the language usages of Web documents have indicated that various portions of Web documents often exhibit unique language styles that their respective language models have significantly different statistics from one another [11][25].
The notion is indeed quite intuitive: the body of the document tends to use a style for formal and detail descriptions, whereas the title of a document is more of a summary style.
The anchor text, embedded in the web document body, appears to be closer to the title language style, perhaps because it is often used to summarize the document it is linked to.
Huang et al[11] show that it is critical to choose the  matched  style of language to create models for query processing, while Wang et al[25] demonstrate the importance of combining the various language styles for information retrieval.
For this work, we are indeed surprised by the experimental results that indicate which style of the language model performs best for the URL word breaking.
This is only to highlight the importance of using a matched language style in statistical modeling for Web scale NLP.
Third, the Web is known for its dynamic pace in content updates, a phenomenon that requires the underlying NLP techniques to be able to adapt quickly and at large scale.
For word breaker, the need of fast adaptation is patently clear as URLs that include newly created words (e.g.
brand names, events, etc.)
are being added at an incredible pace.
Furthermore, Web is also known to contain large varieties of materials that individually seem atypical yet jointly account for the bulk of the contents.
Such a  long tail  phenomenon inevitable brings lots of exceptions to any rule one would hope to characterize the Web.
It is therefore not surprising that, when designing for Web scale processing, we have found systems that have fewer heuristic assumptions tend to fare better in terms of robustness and generalizability.
This is indeed an observation from Banko and Brill s work [2], and seems to be confirmed again in our word breaking experiments.
Finally, due to the enormous size and the dynamic nature of the Web, techniques requiring significant manual interventions or labeling efforts have questionable feasibility.
As a result, studies towards minimizing manual intervention (e.g.
[1]) or using entirely data-driven unsupervised approaches (e.g.
[19]) have gathered strong interests as Web scale applications become more prevalent.
Many unsupervised algorithms have been proposed, including those based on non-parametric Bayesian learning that have become an actively research area in machine learning.
Examples for applying Bayesian learning to word breaking also abound (e.g.
[3][10]), all of which utilize elaborated learning techniques that are still computationally expensive.
It is not uncommon that a Web crawler has discovered millions of new URLs during the time it takes to run a single iteration of the model training.
It is therefore critical for any algorithm to have some efficient implementations for Web scale deployments.
In this paper, we describe a word breaker that satisfiesall the five considerations.
At the core is the formulation of the word breaking task as a Bayesian minimum risk (BMR) problem that can be tackled with language modeling techniques.
We show that BMR formulation is general enoughthat can unify known effective approaches to word breaking under a single framework.
Furthermore, we show an optimal solution to the BMR problem can be implemented using an efficient algorithm called word synchronous beam search, adapted from real-time speech recognition.
As for the language models, we choose Microsoft Web N-gram, which is shown[26] to be multilingual, multi-style and fast adaptive to Web languages, to address the first three of the scalability criteria.
Unlike the previous offers (e.g.
[3]), Microsoft N-gram is particularly useful for URL word breaking because it takes a nontraditional approach in tokenization that preserves numbers in its lexicon so that the word breaker can successful detect word boundaries amidst numerals.
Most importantly, we show that the N-gram based solution to the BMR problem can be realized in an unsupervised fashion without manual intervention orany compromise on the word breaking performance, making the approach amenable to Web scale deployment.
The rest of the paper is organized as follows.
In Sec.
2, we first review the related efforts for word breaking.
In addition to the historically text based approaches, we include the work from speech recognition in which the word boundaries are buried in the acoustic signals that explicit word segmentation is needed for producing readable transcripts.
These speech oriented techniques, at the mathematical level, can be neatly unified with other text based methods into the BMR framework, as formally described in Sec.
3.
A challenging aspect of implementing the BMR framework is an efficient algorithm to search for the optimal hypothesis.
In Sec.
3, we also describe the beam search algorithm used in this work, which is an adaptation from the word synchronous decoder used in the modern real-time continuous speech recogniz-ers.
In Sec.
4, we present a series of large scale experiments.
The results indicate the importance of the language style plays a critical role, and the heuristics or supervised learning methods that are previously shown effective remain so only for models with mismatched styles.
Historically, the word breaking problem manifests itself as the word segmentation problem for Asian language processing (e.g.
Chinese, Japanese) where the writing systems do not include a white space to delimit characters at the word boundaries, or as the compound splitting problem for many European languages (e.g.
German, Dutch) where words can be freely joined to form compound words.
The early work in this area embraced the rule based approach.
For example, Suzuki et al[23] employed a broad coverage parser for Japanese word breaking.
The approach utilizes many specific features in Japanese that do not exist in other languages.
Chi et al[6], motivated by the observation that the title and the URL of a web document play a key role in understanding the document contents, proposed a heuristic based bidirectional matching algorithm that uses the document contents to resolve ambiguities in URL word breaking.
The heuristics employed in this approach, however, require a delicate training process in order to achieve acceptable accuracy.
As a result, it is not clear how robust the method is and how manageable the rules it employs are for large scale applications where the training materials are often very noisy and the training process cannot be tightly con-trolled.However, the intuition to use document title as a main source for URL breaking is consistent with our finding which, as discussed later, suggests that the language style used to author document titles seems to be the most effective one for URL breaking.
Monz and de Rijke[18] used a lexicon based approach for compound word splitting for monolingual information retrieval.
Together with rule-based stemming, they demonstrated that a simple algorithm can lead tobig gains in retrieval accuracy.
Brown [5] demonstrated a similar lexicon based approach for compound from the parallel corpus used to train the translation system.
Essentially, these lexicon-based approaches are a special case of the statistical method using only word unigrams described in Sec.
and Knight [16]uses the geometric mean of the unigram probabilities as a measurement to assess whether to split compound words.
The geometric mean heuristic remains a popular technique used in statistical machine translation.
However, we show analytically in Sec.
3.1 why the heuristic does not appear mathematically optimal and in Sec.
4 that it performs poorly for Web scale URL word breaking.
As in many areas of NLP, statistical rather than rule-based approaches are receiving more attention recently.
One pertinent area is to recover word boundaries from the phonemic transcription of continuous speech.Brent [4] proposed a sophisticated Bayesian framework, called modular linguistic model, which treats the word segmentation problem as a five step generation model.
The idea of employing a five step generation process is, at least in theory, to allow each step to be modified independently for investigating various model assumptions.
However, with the complexity of the framework come the practical issues of making the model tractable in an efficient manner.
Brent introduced quite a few statistical independence assumptions, together with a dynamic programming based method to approximate the search process.
Goldwater et al[10]have found that the word segmentation outcomes are sosensitiveto the implementations of the dynamic programming that they proposed an alternative approach where the generative model is treated as a much simpler and standard Dirichlet process and the well-known Gibbs sampling[9] is used in lieu of the approximations needed in Brent s dynamic programming.
One key contributionin this work is to extend the Dirichlet process from unigram to bigram probabilities and show that the contextual dependencies play a critical role in word segmentation.
This observation is largely supported by our empirical data.
As noted, however, Gibbs sampling is a very slow algorithm to converge, and the complexity of extending the framework to higher order N-gram is also signifi-cant.Venkataraman[24]proposed yet another alternative in which unigram through trigram language model with the Vi-terbi algorithm are used to incrementally infer word boundaries.
Motivated by similar works in speech recognition [17], Venkataraman showed his approach, though much simpler in formulation as well as in implementation, achieved comparable results as Brent s modular linguistic model with dynamic programming approximation.
As will be elaborated in the next section, Venkataraman s approach is a special case of the BMR framework.
More recently, Khaitanet al[15]proposed an algorithm that combines heuristic rules with data-driven methods for URL word breaking.
The main insight is to treat stop word, known lexicon, or common N-gram with their respective scoring mechanisms.
Specifically, instead of using the geometric mean of word frequencies as suggested by Koehn and Knight, they proposed to use the word length distribution as the cues for score normalization for words in the lexicon.
Inevitably, the system involves a few free parameters, which Khaitanet al tuned on the English Wikipedia data.
In the following sections, we show the work can be unified under the BMR framework, and the efficacy of their heuristics can be reproduced in our experiments but only for cases where the mismatched models are used.
We formulate our Web scale word breaker in the Bayesian minimum risk (BMR) framework: given a character string u and a risk function R, the task of a word breaker is to find min (1) wheres = (w1, w2, w3, w|s|) is a segmentation of uand |s| denotes the number of words in the segmentation s. If we let |u| represent the string length, i.e., number of characters in u, then the total number of possible segmentations is 2|u|-1.
suRE ,( [ arg )] s   s  
 In this work, we further adopt a uniform risk function for the framework, namely, R(u, s) = 1 ifs is not a correct split ofu, 0 otherwise.
Under the uniform risk function, it is widely known that the optimal solution to (1) is the maximum a posteriori decision (MAP) decision rule:   s     arg arg max max s   s   ) usP |( max arg sPsuP ( log )(   )| sPsuP ( )( )| s   (2) whereP(u | s) and P(s) are called the transformation and the segmentation prior model, respectively.Ostensibly, the search space   is the set of all word sequences that can produce u when all the spaces between words are removed.
In practice, however, the probability distributions for the transformation and the segmentation prior models are not known and have to be estimated from data.
When we can only work with the that bear unknown estimation estimated models errors from the real distribute P(s | u) and P(s), respectively, directly applying the MAP decision rule in the form of (2) is no longer guaranteed to be optimal.
This is known as the plugged-in MAP problem and is often addressed by adjusting (2) with log-linear interpolation as |(~ usP )(~ sP and )   s   arg max   log s (~ suP )|   log )(~ sP (3) )(~ sP |(~ usP where , called the transformation model weight, is a parameter that can be manually tuned or automatically learned from a development data set.
The idea of log-linear adjustment can be repeatedly applied when more assumptions, or  features , are included in the model.
Indeed, (3) can be viewed as the simplest form of and using only the estimated transformation model score the estimated prior model score as two features for the machine learning based approach to this problem (e.g.
[1]).
This paper, however, does not consider machine learning based approach as they typically require labeled data, an effort that is not easily scaled for Web applications.
Model The MAP decision rule can be viewed as the generalizedversionof the work by Venkataraman[24]in which the transformation model assumes the binomial distribution with the parameter P$, i.e., ) log (~ suP )| (|     u log | |   (~ wuP | ,...,
 s )1|
 log(   ) w s ||
   $ (4) )   | s log|
 $ | |
   w | )...
log s wwP ( | N-gram: ,..., a and the segmenta el is a Markov N ation prior mode )(~og wP w sP lo (  s

 |   et P$ as the prob
 acent characters bability that adja One can interpre in u u should be inser he further follows th between.
If one f rted a space in b
 m py principle [12 maximum entrop $ = 0.5, then th he all s and does n tr not a constant for a model becomes ransformation m p ate rule to degenera MAP decision r
 play a role in (3 in ial A popular speci based on (4).
A model entirely nto an N-gram c case of (5) is the e unigram mode el, leading the M MAP decision ru ule to o o degenerate into ( (5)
   ) s   s   arg max s s ) log ( (6) wP ( i s | |   i
   a ter et al [10] is in iple is followed (~ sP )s ntation prior not however, does n of use the training apt speed it can ada stion.
Similarly, one c s special case whe c choosing the tran is s modeled as a c consider nonpara th he model is com to o rapidly changi


 A close variation b by Koehn and Kn n number of words an view the wo ere the maximum nslation model, Dirichlet proces ametric Bayesian mputationally int ing data is an op tric Mean Mo n of (6) is the ge night[16]in whic s in the hypothes ork by Goldwat m entropy princi and the segmen ss.
This paper, h n approach becau tensive and the s en research ques odel eometric mean h ch (6) is further sized segmentati ed he heuristic propos normalized by th on: 1 s | |
   s s s | | i
   y motivated and th MAP decisio d widely adopte n rule in the for iwP ( max arg log     s ) ( (7) ed, rm e the classic geo hat the comparis dicapped becaus n is straightforwa ometric mean m me-od son of this metho xts e lexical contex ard by just rewr rit-
hough reasonably The heuristic, th r to reconcile wi emains difficult o
 of either (3) or (2 In e also generalize n this work, we th rder N-gram so th hod to higher or to ues is not hand o other techniqu a are not used.
The e generalization in as ng (7) with (5) a  s   ar rg max
 s s | | s | |   i
   lo og i wwP ( | Ni
 ,...,   ) i  1 w which is used in

 In nstead of assum m model that impl probability P$ a p ext,Kaitanet al[1 te d dary probability h heuristic is quite w word to have a le ty y of encounterin h higher than after c choosing the tran eported in Sec.
4 the evaluation re
 ength adjustm ment model ming a binomia al distribution f ies any two adj jacent character as a word bou undary regardle 15] proposeda h heuristic that sug follow the dist tribution of the e intuitive: if th he probably of a ength m is larger r than length n, t ng a word bound dary after consec rn characters.
T This heuristic ca nslation model as s on for the translatio rm rs have a unifor on-ess of their co un-ggests word bou he word length.
Th a randomly draw wn li-then the probabi cutive mshould b be an be realized b by log (~ suP s | |  )|   i i
   log (|~ iwP |) ( (8) (|~ iwP w is the empirical w where e a unigram mode estimated from a word length distri el, as Kaintanet ibution that can b be al did on the EN
 |) US Wi service an emp tion, sh snapsho
 word le ly for t length when t words fact tha adjustm kipedia corpus.
e [26]that contai pirical word leng hown in Figure ot taken in June of the entire uni ength distributio those shorter tha distribution roug he length reach are taking less a at the distributio ment based on w In this work, we ins more than 1 gth histogram an 1, for the top 10
 igram probabilit on is skewed tow an five character ghly tracks the w es 14 and beyon and less proport on curve is not ord length a wel e use the Micros .3 billion words nd probability ma 00,000 words fro words altogether ty mass.
As can wards short word rs long.
After fiv word length hist nd where we se ional probability flat makes the ll-motivated heu soft N-gram s. Weobtain ass distribu-om the Web account for be seen, the ds, especial-ve, the word togram until ee such long y mass.
The probability uristic.
Figure bility d Micros (length probab

 A critic an effic ma arg werful tions of has an force.
algorith to itera minimi As the bounda can exp an itera rewrite e 1: Histogram distribution wit soft Web-Ngram h < 5 characters bility mass.
Word Synch cal element of a cient implement sx in(2).
As poi model can be la f the search algo exponential com In this work,we hm, a common ate through the izing the search name implies, aries hypothesize press both the tr ative form based e (4) into (bar, scale at r th respect to th m. The results i s), though smal right) and unigr e length of the illustrate that s l in number, do ram proba-word from short words ominate the hronous Bea applying BMR f tation of the sea inted out by [10 argely comprom orithm.
On the o mplexity that can e use the word technique forre segmentation h errors.
the search algor ed by each segm ransformation an d on word bound am Search for Web scale ap arch process tha 0], the performan mised by subopti other hand, the s nnot be attacked synchronous b al-time speech hypotheses effici pplication is at solves the nce of a po-mal realiza-search space d with brute beam search recognition, iently while rithm operates o mentation s. We n nd the segmentat daries.
For exam on the word note that we tion prior in mple, we can log  suP ( )| (| u )1|  
 log(  

 $ )     i log
 $

  
 and (5) ) into log  sP )(   i log i wwP w ( Ni   |
 ,..., w i
   )
 http:/ ist is published b //web-ngram.res by the Microsoft earch.microsoft.
t Web N-gram se .com/info/.
ervice at
 $ log
 $
 $ )
 $ ) | ...,
  
   and w 1 i wP ( i from and see the total score for each segmentation hypothesis can be accumulated by advancing through the partial word sequences = (w1,w2, wi ) of the hypothesis, with the score incrementon each word wi being the transformation and the segmentation prior models, respective-ly.Similarly, the word length adjustment model of (8) has already in a formulation amenable to word synchronous search, with the score increment on word boundary as log P(| wi|).
With word length adjustment model or the binomial model whenP$   0.5, we are guaranteed that the partial score of a hypothesis will be greater than the full score because log probabilities are always negative.
Accordingly, if the full score of hypothesis s is already greater than the partial scores of the competing hypotheses, we can safely conclude that these competing hypotheses will have lower full scores thansthat pruning them from the search process will not incur search errors.
The only condition where the partial hypothesis score does no longer decrease monotonically with word boundaries is whenP$> 0.5 as the increment from the transformation model is positive.
To minimize the pruning errors, we use the beam search approach, namely, we do not prune hypotheses unless their partial scores are lower than the leading score by more than a threshold (commonly called the beam width).
It is well known from its speech recognition applications that word synchronous beam search algorithm reduces the complexity effectively and plays the pivotal role in real-time continuous speech recognition2.
Among all the methods unified by the BMR framework described in Sec.
3.1, the geometric mean heuristics as in (6) poses some challenge to be implemented in the word synchronous fashion.
In our experiments, we test the geometric mean heuristicusinga two-stageN-best rescoring technique: in the first stage, the beam search is carried out to identify the top N candidates whose scores are consequently normalized by their word sequence lengths in the second stage.
The beam search algorithm can be easily generalized for N-best search by setting the pruning at the threshold below the Nth highest score rather than the top one.
As an ongoing process of monitoring a commercial search engine performance, a regularly sample of 100,000 URLs is maintained and manually annotated.
Although the Internet standard specification has been recently amended to allow non-ASCII characters in URLs, we have found their usages in URLs remain a small portion, often atlow single digit percentage point, in our ongoing samples.
As a result, we exclude them from our data set in this work.
After discarding the non-ASCII URLs and perform a first round of splitting based on punctuation marks, we obtain a total of
 ly composed of alphanumeric characters.
We use this set of tokens to assess the impacts of various configurations of BMR framework on work breaking performance.
A key challenge in determining the  correct  word breaking outcome is there might be many answers that are all plausible.
It has beenwidely known that there exist style disagreements among the
 http://research.microsoft.com/en-us/um/people/kuansanw/wordbreaker/ or as a Web service at http://web-ngram.research.microsoft.com/info/break.html.
log ) high quality editorial contents (e.g.on  homepage  versus  home page ) and the inherent ambiguities (e.g.
 911stories  can be  nine-one-one stories  or  nine-eleven stories  depending on whether the stories are about emergency phone calls or September
 domain names or social network monikers, many of which are artificial concatenations of common words (e.g.,  CheapTickets ), have been promoted as brand names.
When these name owners use these compound words heavily in the literature as if they are inseparable words drawn from a convention lexicon, requiring these words to be always split becomes a questionable mandate, especially one of our main objectives for word breaking is to facilitate Web search where the query terms corresponding to brand names are better left intact.
As a result, our annotation guidelines allow human experts to assign multiple word breaking results with various degrees of  plausibility .
Due to the multiplicity of word breaking outcomes, we regard an ideal word breaker as to produce a list of possible results ranked bytheir plausibility.
As such, we apply metrics for evaluating rank list quality for word breaking.
More specifically, we consider Precision at K (P@K), NDCG at K[13] and pSkip[27] in this work.
Briefly, P@K measures the percentage of results at top K positions of the ranked list that are not annotated as outright implausible.
For NDCG, we treat the plausibility judgments as the  relevance gain  and compute the cumulated, discounted, and normalized gains for top K positions as proposed in [13].
In this paper, we report both P@K and NDCG@K for K up to 3.
Finally, because our word breaker implementation (Sec.
3.3) often produces variable length rank lists, we include the pSkip metric, which quantifies how often an implausible result is mistakenly ranked in front of a plausible result regardless of the list length, to measure how effective a word breaker can avoid ranking errors.
Opposite to its two counterparts, a smaller pSkip corresponds to a better word breaker.
For presentational simplicity, we show the 1-pSkip results in the following so that all the metrics are on the same scale and their downward/upward trends have the same quality implications.
Our results show these metrics, although with various design nuances, largely agree with each other.
We mix and match various modeling techniques for the translation model P (u | s) and the segmentation prior model P(s).
For the transformation model, we evaluate the binomial (denoted as BI/P$/  in Fig. 2) and the word length adjustment (denoted as WL/ ) techniques as described in Sec.
3.1.
We note that both techniques degenerate to the maximum entropy (ME) model for BI/0.5/ or WL/0.0.
For the segmentation model we evaluate the descriptive language style as in Web document body (B), the summary style as in the document title by the author themselves (T), the summary style as in the anchor text by the referring authors (A), and the query style as used by search engine users to retrieve the document (Q).
All these language models assume Markov N-gram with N = 1 through 3 and are obtained from the June 2009 snapshot of the Microsoft Web N-gram service.
In addition, we include the geometric method (GMean, Sec.3.1.2) and extend it for N-gram, and consider a multi-style language model (M) for comparison.
Following the work of [25], the multi-style language model is a mixture distribution of individual style , where i = B, T, A, Q.
The language models as mixture coefficients ic are dynamically computed using the EM i  i sPc )( sP )( i model are denoted as S/N where S is the language style and N is the Markov order (e.g.
T/2 means the title bigram model).
Model Our results3as shown in Fig. 2 indicate the style of the language plays a very critical role in the effectiveness of the segmentation prior modelP (s).
Given the significant portion of the search queries are navigational and basically are composed of word-split versions of the domain or file path names, we originally expected the query language to be the most suitable style to create the language model for URL word breaking.
Instead, the results show the title language model performs best in URL word breaking, suggesting document authors use the same style of language to compose titles and URLs.
The query language, anchor text, and the document body seem to be on par with one another.
Unlike the retrieval task, the multi-style language model does not further improve the word breaking results from the individual models.
This suggests that the strengths for each individual model are not complementary, or the language in composing URL is indeed not as versatile in style as queries.
tation Prior Model The higher order N-gram models have weaker assumptions on the underlying probabilistic distributions and hence, in theory,should perform better.Our experimental results agree with the theoretical prediction, especially for results from unigram to bigram.
In the meantime, we also observe that the amount of gains for mismatched models (B, A, Q, M) seem to taper off after bigrams, a phenomenon also frequently reported in the literature.
The matched language model built from document titles, on the other hand, seems to be an exception in that substantial accuracy gain can still be observed with higher order models.
For example, the accuracy as measured by P@1 grows from 95.23% for bigram to
 with the work on query processing [11] that highlights the importance of language model style: since the increasing power accompanied by the larger Markov order can amplify the model mismatch, one can expect the more powerful model to lead to more proportional gains when the data used to create the model and the underlying NLP task are matched.
Plugged-in MAP Adjustments By comparing against the ME model, the experimental results confirm that the various heuristics proposed for the translation models do improve the word breaking performance, with word length adjustment (WL) appearing more robust to free parameter tunings than the binomial models.
For mismatched models, the data suggests the WL with a translation model weight at 0.5 seem to outperform the ME model, although the degree of improvements is modest.
This rule of thumb does no longer hold when matched and reasonably powerful segmentation prior model are used.
Specifically, the P@1 accuracy for the ME model using title trigram is 97.18%, in contrast to 96.55% for WL/0.5.
The results seem to reinforce the postulated maximum entropy principle pro-
http://research.microsoft.com/apps/pubs/?id=144355.
posed almost half a century ago [12] that the best probability distribution, after subjecting to known constraints, is the one with the largest entropy.
The results also reinforce the observations made by [2][19] that a simple NLP algorithm can outperform its more sophisticated counterparts by training with large amount of data.
The experimental results seem to suggest the effect is more pronounced with large amount of training data matched to the language style of the underlying NLP task.
An interesting observation is that, although binomial model has more free parameters to tune, its performance is worse than word length adjustment model.
This is consistent with Banko and Brill s observation [2] that more features do not necessarily translate into better performance for large data.
After all, all these features are all heuristics and can amplify the over fitting problems when more data are used to train the model.
The experimental data show the geometric mean heuristic, though well motivated, shown useful and widely adopted, does not scale up for the Web application.
Based on the experimental data, its performance is significantly worse (P@1 often less than 50%) than others that can be better justified in the BMR framework.
This paper first outlines the five design considerations that, based on our deployment experience, characterize the properties for NLP techniques to be scalable for Web applications.
Although none of the known methods can meet these criteria simultaneously, the essence of these approaches can be unified in a mathematically sound manner under the proposed framework based on Bayesian minimum risk reduction.
Together with a large and dynamically adaptive N-gram, the proposed framework can have an efficient implementation that requires no human supervision and achieve desirable performance at Web scale.
The claim appears to be supported by the results of a series of large scale URL word breaker experiments measured by five metrics.
Key findings of this study are as follows.
First, contextual information is critical as higher order N-gram for segment prior performs better.
Secondly, language style is important, and surprisingly title language model is better than models built with query, anchor text or document body, suggesting the style of the title has the least amount of mismatch to that of URL.
When language style mismatch is larger, the plugged-in MAP problem is more pronounced and additional heuristics that are proven useful empirically before can contribute to accuracy.
However, when the language style has little mismatch, the plugged-in MAP problem becomes less severe, no additional heuristics seem necessary and the model parameters can be chosen in congruent to maximum entropy principle.
Furthermore, the performance indeed improves as predicted by the theory when the model becomes more powerful.
This suggests that many empirical results that find high order models do not help may be due to the model mismatch.
The work has been previously demonstrated in WWW-2010 and NAACL-2010 with the assistance of Dr. Evelyne Viegas.
The authors would also like to thank Dr. Guihong Cao for making available the data sets for evaluations reported in Sec.
4.
Mr.
Yuzhe Jin conducted the investigation work (not included in this paper) that demonstrates the character level language models are as effective as the word level models while being an intern at Microsoft Research.
