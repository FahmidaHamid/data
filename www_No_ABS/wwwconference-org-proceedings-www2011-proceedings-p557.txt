Social strati cation refers to the hierarchical arrangement of individuals in a society into divisions based on various factors such as power, wealth, knowledge and importance [13].
Copyright is held by the International World Wide Web Conference Committee (IW3C2).
Distribution of these papers is limited to classroom use, and personal use by others.
Strati cation existed among humans since the very beginning of human society and continues to exist in modern society.
In some settings, such as within an organization, the hierarchy is well known, whereas in other settings, such as conferences and meetings between a group of people, the hierarchy is implicit but discernible.
The popularity of online social networks has created an opportunity to study sociological phenomenon at a scale that were earlier unfathomable.
Phenomenon such as small diameter in social networks [24] and strength of weak ties [12] have been revisited in light of the large data now available about people and their connections [1, 25, 3].
Online social networks present an opportunity to study how social hierarchy emerges.
Scientists have observed dominance hierarchies within primates.
Thorleif Schjelderup-Ebbe showed a pecking order among hens [23] where each hen is aware of its place among the hierarchy and there have been various papers that investigate the importance of such a hierarchy [10, 9].
However, data from experimental studies indicates that the dominance graph contains cycles and hence, does not represent true  hierarchy .
There has been a lot of work on extracting a chain given this dominance graph [6, 5, 2].
Strati cation manifests among humans in the form of a social hierarchy, where people higher up in the hierarchy have higher social status than people lower in the hierarchy.
With the wide adoption of online social networks, we can observe the network and can leverage the links between nodes to infer social hierarchy.
Most of the popular online social networks today, such as Twitter, Flickr, YouTube, Delicious and LiveJournal contain directed edges.1 Our central premise is that there is a global  social rank  that every person enjoys, and that individuals are aware of their rank as well as the rank of people they connect to.
Given a social graph, we cannot directly observe the ranks of people in the network, we can only observe the links.
We premise that the existence of a link indicates a social rank recommendation; a link u   v (u is a follower of v) indicates a social recommendation of v from u.
If there is no reverse link from v to u, it might indicate that v is higher up in the hierarchy than u.
We assume that in social networks, when people connect to other people who are lower in the hierarchy, this causes them social agony.
To infer the
 any  agony  to u.
However, if r(u)   r(v), then edge u   v causes agony to the user u and the amount of agony depends on the di erence between their ranks.
We shall assume that the agony caused to u by each such reverse edge is equal to r(u)   r(v) + 1.2 3.
Hence, the agony to u caused by edge (u, v) relative to a ranking r is max(r(u)   r(v) + 1, 0).
We de ne the agony in the network relative to the ranking r as the sum of the agony on each edge: A(G, r) = max(r(u)   r(v) + 1, 0) (cid:88) (u,v) E We de ned agony in terms of a ranking, but in online social networks, we can only observe the graph G and cannot observe the rankings.
Hence, we need to infer the rankings from the graph itself.
Since nodes typically minimize their agony, we shall  nd a ranking r that minimizes the total agony in the graph.
We de ne the agony of G as the minimum agony over all possible rankings r: A(G) = min r Rankings max(r(u)   r(v) + 1, 0)   (cid:88) (u,v) E   For any graph G, A(G) is upper bounded by m, the number of edges in G (we prove this in Section 3.1 Equation 1).
This motivates our de nition of hierarchy in a graph: De nition 1 (Hierarchy).
The hierarchy h(G) in a directed graph G is de ned as h(G) = 1   1 m
  1   1 m (cid:88) (u,v) edges max(r(u)   r(v) + 1, 0)   ranks of the nodes in the network, we  nd the best possible ranking, i.e. the ranking that gives the least social agony.
In this paper, we de ne a measure that indicates how close the given graph is to a true hierarchy.
We also give a polynomial time algorithm to evaluate this measure on general directed graphs and to  nd ranks of nodes in the network that achieve this measure.
We use our algorithm to measure hierarchy in di erent online social networks, including Twitter, Delicious, Flickr, YouTube, LiveJournal, and curated lists of several categories of people based on di erent occupations, and di erent organizations.
We experimentally  nd, using a college football dataset, that the edge direction encodes hierarchy information.
The social strata of people in a online social networks, measured using our metric, shows strong correlation with human-observed ground truth such as Wikipedia notability, as well as other well-known metrics such as page rank and friend-follower ratio.
Our experiments show that hierarchy emerges as the size of an online social network grows.
This is in contrast to random graphs, where the hierarchy decreases as the network size increases.
Finally, we show that hierarchy in online social networks does not grow inde nitely; instead, there are a small number of levels (strata) that users are assigned to and this number does not grow signi cantly as the size of the network increases.
The key contributions of this paper are:
 networks.
hierarchy in a directed network.
works increases for di erent online social networks.
= max r Rankings
 in our experiments, the degree of strati cation in a network does not increase signi cantly.
One of the most popular ways to organize various positions within an organization is as a tree.
A general de -nition of hierarchy is a (strict) partially ordered set.
This de nition includes chains (Figure 1a) and trees (Figure 1b) as special cases.
We can view a partially ordered set as a graph, where each element of the set is a node and the partial ordering (u > v) gives an edge from u to v. The fact that the graph represents a partial order implies that the graph is a Directed Acyclic Graph (DAG).
From now on, we use DAGs as examples of perfect hierarchy.
Figure 1c shows an example of a DAG.
Let us de ne a measure of hierarchy for directed graphs that might contain cycles.
Consider a network G = (V, E) where each node v has a rank r(v).
Formally, the rank is a function r : V   N that gives an integer score to each vertex of the graph.
Di erent vertices can have the same score.
In social networks, where nodes are aware of their ranks, we expect that higher rank nodes are less likely to connect to lower rank nodes.
Hence, directed edges that go from lower rank nodes to higher rank nodes are more prevalent than edges that go in the other direction.
In particular, if For any graph G, the hierarchy h(G) lies in [0, 1].
This follows from the fact that A(G) lies in [0, m].
(Equation 1).
To gain some intuition into this de nition of hierarchy, we shall look at some example graphs and their hierarchy.
DAGs have perfect hierarchy.
h(G) = 1 when G is a DAG.
This is achieved by setting r(v) > r(u) + 1 for each edge (u, v) in the DAG.
Figure 1 shows examples of graphs with perfect hierarchy.
Nodes are labeled with levels.
For this assignment, note that the agony on each edge is 0.
Consider the graph in Figure 2a.
The hierarchy of this graph is 1   1
  deeper  edge (r, l2) is present, as shown in Figure 2b, then the hierarchy of the new graph becomes 1  1
 illustrates how hierarchy changes in a very simple setting.
We shall explore this more in Section 4.
Directed cycles have no hierarchy.
h(G) = 0 when G is a collection of edge disjoint directed cycles.
We prove in Section 3.1 that for any assignment of labels to nodes, the
 trivial solutions like r = 1 for all nodes.
The +1 e ectively penalizes such degenerate solutions.
Using any positive constant threshold c other than 1 does not change the analysis in any way.
di erent measure of agony, in particular, a nonlinear function like log(r(u)   r(v) + 1).
(a) A chain (b) A tree







 (c) A DAG Figure 1: Graphs with perfect hierarchy.
h(G) = 1 for each of these graphs.
Nodes labels indicate levels.
All edges have agony 0.
3,r 3,r
 2,l1
 2,l1





 0, l2 0, l2 (a) h(G) = 2
 (b) h(G) = 1
 Figure 2: Graphs with some hierarchy.
All unlabeled edges have agony 0.
(a) A Simple Cycle (b) A collection of cycles Figure 3: Graphs with no hierarchy.
h(G) = 0 for each of these graphs.
All edges have agony 1.
agony is at least m. Figure 3 shows examples of graphs with
 achieved.
min (cid:88) (i,j) E x(i, j)

 To  nd the hierarchy h(G) for a given graph G, we need to search over all rankings and  nd the best one.
Since the number of rankings r is exponentially large, we need an e cient way to search among them.
In Section 3.1, we present an e cient algorithm to  nd a ranking that gives the highest hierarchy for any directed graph G.4
 In this section, we describe an algorithm that  nds the optimal hierarchy for a given directed graph G = (V, E).
For notational convenience, we shall denote n = |V | and m = |E|.
For a scoring function r : V   N, the hierarchy relative to r is: (cid:88) h(G, r) = 1   1 m (i,j) edges max(r(i)   r(j) + 1, 0) The task is to  nd an r such that h(G, r) is maximized over all scoring functions.
But maximizing h is the same as minimizing the total agony A(G, r).
We formulate minimizing agony as the following integer program:
 then any ordering that gives a topological sort of G gives an optimal ranking.
x(i, j)   r(i)   r(j) + 1 x(i, j)   0 r(i)   0 x(i, j), r(i)   Z  (i, j)   E  (i, j)   E  i   V We now see a simple upper bound on the minimum value of the integer program.
Consider the solution: r(i) = 0 :  i   V x(i, j) = 1 :  (i, j)   E (1) This is clearly feasible and the objective value for this is m.
This gives a simple upper bound of m on the objective value of the above integer program.
To get insight into this problem, we look at the linear relaxation of this integer program and then form the dual linear program.
The dual is: max (cid:88) z(k, j)  (cid:88) z(i, j)   1 (i,j) E i V z(i, j)   0 (cid:88) j V z(i, j) z(i, k)  (i, j)   E  k   V  (i, j)   E (node-degree) We can strengthen the node-degree constraints without affecting the solution of the linear program by requiring strict reverse of all (and only those) edges labeled +1 by Algorithm 1.
Then, for each vertex v : indegH (v) = outdegH (v).
Also, for every subgraph T of G such that indegT (v) = outdegT (v) :  v   T , number of edges in H is greater than the number of edges in T .
To  nd the optimal value of hierarchy in the graph G, we need to assign a score r to the nodes and calculate the agony x(i, j) value on each edge (i, j).
Algorithm 2 gives a labeling for each node, from the  1 edge labels given by Algorithm 1.
The input graph to Algorithm 2 is the one output by Algorithm 1.
Algorithm 2: Label the graph given as a decomposition of the Eulerian graph and a DAG Input: A Graph G = (V, H   DAG) output by Algorithm 1.
Edges in the Eulerian graph H are labeled +1 and edges in DAG are labeled 1.
Output: A labeling l of all vertices of G, such that the agony measure on G with the given labels: A(G, l), is equal to the size of the Eulerian graph H.
Set label l(v)   0, for each vertex v   V while   edge (u, v) such that l(v) < l(u)   w(u, v) do l(v)   l(u)   w(u, v) end x(u, v)   0, for edge (u, v)   DAG x(u, v)   l(u)   l(v) + 1, for edge (u, v)   H Even though the graph output by Algorithm 1 has negative edges, it does not have any negative cycles and Lemma 4 proves that the algorithm terminates.
Theorem 2 proves that the labels produced by this algorithm are optimal labels for the primal, and hence, produce the optimal hierarchy.
Theorem 2. x, l is a feasible solution to the primal.
z is a feasible solution to the dual problem.
Further, (cid:88) (cid:88) (u,v) E x(u, v) = z(u, v) equality, since if we sum over all k, we get: (cid:88) (cid:88) k V j V z(k, j)   (cid:88) (cid:88) k V i V z(i, k) Since both sides count the total number of edges in the graph, they are equal.
Hence, equality must hold for each individual constraint as well.
So, we can rewrite the node-degree condition as: z(k, j) = z(i, k)  k   V (node-degree) (cid:88) j V (cid:88) i V When we restrict the dual variables to be 0 or 1 instead of in the range [0, 1], we can reinterpret the dual program as  nding an Eulerian subgraph of the original graph.5 The reinterpretation gives us insight into the primal solution.
By weak duality, the value of the primal is lower bounded by the value of any feasible dual solution.
Hence, the primal value cannot become smaller than the size of the maximum(in terms of number of edges) Eulerian subgraph.
If the original graph G is Eulerian, this gives a lower bound of m. Equation 1 demonstrates a way to get m as the primal solution.
Hence, the optimal primal value for Eulerian graphs is in fact m. This proves the observation that, for graphs that are a collection of directed cycles, the agony is m and hence, the hierarchy is 0.
We can directly solve the LP to get the best ranking when we do not restrict the rank of the node to be an integer.
We shall prove that the linear program has an integral optimal solution.
In fact, we give a combinatorial algorithm that  nds the best ranking.
We  rst use Algorithm 1 to construct an integral solution to the dual.
Algorithm 2 uses the dual solution to come up with a integral primal solution.
We show that the primal and dual solutions have the same objective value which, by LP duality, proves that both are optimal.
Algorithm 1 constructs a maximum Eulerian subgraph of G. Theorem 1 proves the correctness of Algorithm 1; that the subgraph is Eulerian and also that it has the maximum number of edges among such subgraphs.
We leave the proofs of Theorems 1, 2 to Section A.
Algorithm 1: Finding a Maximum Eulerian Subgraph (u.v) E Input: Graph G = (V, E) Output:
 the maximum number of edges.
Set the weight of each edge w(u, v)    1 while   a negative cycle C do for edge (u, v)   C do w(u, v)    w(u, v) Reverse the direction of the edge end end DAG   All edges labeled 1 H   Reverse of all edges labeled +1 (H is Eulerian)
 vertex is equal to its outdegree.
We do not impose the requirement that the subgraph be connected.
This shows that the value of the primal solution is equal to the value of a dual solution, which shows that both are optimal.
We present the proof in Section A.
We use this algorithm to  nd the hierarchy in various social networks.
In this section, we present the results of our experiments, which have the following goals:   Validate that the notion of hierarchy we propose does correspond to real hierarchy based on ground truth.
  Validate that direction of edges does encode information about hierarchy.
  Compare how hierarchy emerges in online social graphs of di erent types of people, by using random graphs as baseline.
  Show how hierarchy emerges as the size of the social graph grows, for di erent online social networks.
(b) Twitter List Score (c) Twitter Follower/Friend Ratio Figure 4: Correlation of hierarchy with popular metrics.
We want to validate that our measure of hierarchy corresponds with real hierarchy observed by humans.
For this experiment, we collected a curated list of journalists in Twitter, which consists of 961 users.
We compute the hierarchy using our measure; the computed hierarchy measure is
 this graph.
There are seven levels (strata) that users are assigned to in the optimal hierarchy.
A higher level indicates people who enjoy higher social status.
Wikipedia notability To con rm that our computed hierarchy corresponds to the real hierarchy, we make use of Wikipedia to derive ground truth.
Each node(journalist) is assigned a Wikipedia notability score, which is either No Entry (the person does not have an entry in Wikipedia), Small, Medium or Large (depending on the size of the Wikipedia entry).
Figure 5 shows how our hierarchy measure compares with the ground truth obtained from Wikipedia.
The  gure shows that nodes with a low hierarchy level do not have a Wikipedia entry, and nodes higher up in the computed hierarchy are more likely to be noteworthy according to Wikipedia.
This result lends credence to our measure of hierarchy.
Correlation with well known measures: To get more insight into the factors that contribute to a node s hierarchy level, we measure the correlation of our computed hierarchy level for the journalists graph with the well known measures of social networks: pagerank, friend-follower ratio, and Twitter list score.
Figure 4a plots the median page rank (along with the 10th and the 90th percentile value) for each hierarchy level.
The  gure shows that people with a high page rank tend to be higher up in the social hierarchy level computed by our measure.
Figure 4b plots the correlation of hierarchy level with the Twitter list score, which corresponds to the number of user-generated Twitter lists that the node is a member of.
Presence in a large number of user-generated Twitter lists indicates the user s popularity among Twitter users.
The  gure shows a high correlation of our computed node hierarchy with this measure of Twitter user popularity.
Finally, we measure the correlation with a popular twitter measure, Follower/Friend ratio, in Figure 4c.
Popular users in Twitter tend to have an order of magnitude more followers than friends.
We once again see a strong correlation between this measure and our computed hierarchy level.
We now perform an experiment to validate that edge directions encode hierarchy information.
For this, we use the college football dataset.
College Football Dataset: This dataset consists of all (American) Football games played by College teams in Division 1 FBS (the highest division, formerly called 1-A) during the last  ve years.
The number of teams varies each year, but is between 150 and 200 for all  ve years.
For each year, we consider the win-loss record of these teams.
In the graph, each team is a node, and we place an edge from u   v if v played and defeated u during the season.
We only consider the win-loss records and do not consider the margin of victory.6 We also do not consider other factors like home advantage, though these would lead to better predictions.
We end up with a directed unweighted graph representing win-loss record for a full season.
For each season, we  nd the optimal hierarchy.
There is a Figure 5: Correlation with Wikipedia notability score.
BCS computer rankings, since  running up the scoreboard  is considered bad form and is discouraged.
chy for di erent online social networks.
For this experiment, we collect di erent curated lists on Twitter that correspond to di erent types of users.
Famous people by  eld: Similar to the journalists dataset described earlier, we collect curated lists of people in the  elds of Technology, Journalism, Politics, Anthropology, Finance and Sports.
The smallest collection is Anthropology with  fty nine people and the largest is Technology with almost three thousand people.
Organizations: We also look at lists of employees of di erent organizations that have a team presence on Twitter.
These include forrst, tweetdeck, ReadWriteWeb, wikia, techcrunch, Mashable, nytimes and Twitter.
The smallest graph, forrst, has just seven employees.
The largest is Twitter with two hundred and eighty two employees.
For each of these lists, we reconstruct the Twitter graph restricted to just these nodes, i.e. the nodes in the restricted graph are all the people on a particular list and there is an edge between two nodes if there is an edge between them on Twitter.
For all these graphs, we calculate the hierarchy.
Figure 8 shows a plot of hierarchy with respect to network size.
We see that, among the  elds, Sports has the highest hierarchy while Finance has the lowest one, and among organizations, the TODAYshow has the highest hierarchy while TweetDeck and ReadWriteWeb have the lowest one.
Another trend that is observed is that, as the network size becomes larger, the hierarchy also increases.
This is in contrast to random graphs, where the hierarchy decreases as the network size increases.
Wikipedia administrator voting dataset: Leskovec, Hut-tenlocher and Kleinberg [18, 19] collected and analyzed votes for electing administrators in Wikipedia.
We use the wiki-vote dataset they collected and observe a very strong hierarchy in this dataset.
This is consistent with the  nding in [19] that status governs these votes more than balance.
So far, we looked at small and medium sized graphs to get insight on how the measure of hierarchy works.
We noticed that the hierarchy increases as the network size increases.
Now, we shall consider large graphs to see the e ect of scale on hierarchy in social networks.
For this experiment, we sample four popular directed social networks: Delicious, YouTube, LiveJournal and Flickr.
The nodes are users and the edges indicate a follower relationship.
We start from a single node and crawl nodes in the graph in a breadth  rst traversal.
We plot hierarchy for di erent sizes of the graph.
This is shown in Figure 9a.
We observe that, as a online social network grows in size, the hierarchy either stays the same or increases.
This is in contrast with random graphs, where the hierarchy decreases as the graph grows in size.
This suggests that, within small groups, social rank does not play an important role while forming connections but, as the group size increases, social rank becomes important to people while forming links.
This result corresponds with the intuition that, in social networks, people form connections with others based on their perceived level in the social hierarchy.
Further, we see that di erent social networks have di er-ent amount of hierarchy: YouTube has the lowest hierarchy, Flickr and LiveJournal have medium hierarchy, and Delicious has the highest hierarchy.
Figure 6: Hierarchy in the College Football network.
lot of variation between the quality of college football teams and we expect to see high hierarchy as observed in Figure 6.
Random redirection: Since the complete schedule is  xed before any games are played, we can compare the hierarchy we observe in the directed graph to the hierarchy if all games were decided by a random coin toss.
In terms of the graph, this amounts to redirecting each edge in the network randomly.
This technique allows us to observe the e ect of the directions on hierarchy once the undirected graph is  xed.
This random redirection would eliminate any quality di erence between the nodes, and we now expect to see a much smaller hierarchy in the redirected graph.
To observe the variance of the random redirection, we repeat this experiment  ve times.
The hierarchy for these randomly redirected graphs is also shown in Figure 6.
We see that the  ve randomly redirected graphs have very similar hierarchy, which is signi cantly lower than the real graph, showing that directions encode important information about hierarchy.
Random Graphs To better understand how hierarchy emerges in a directed graph, we look at the behavior of hierarchy in random graphs to establish a baseline.
We generate a random directed graph using the standard Erd os - R enyi random graph model as follows [7] .
We  x a probability p that will decide the density of the graph.
For each ordered pair of vertices (u, v), we put an edges from u to v with probability p. The outdegree distribution of nodes in this graph is a binomial distribution where each node has expected degree np.
Figure 7a shows that, for random graphs, the hierarchy starts out being large, and monotonically decreases as the size of the graph increases.
We can also see that for small graph sizes, the variance is high, but as the graph size increases, the variance become very small.
We also conduct this experiment for di erent values of density, p. Figure 7b shows the outcome of the experiment with three di erent values of p. We see that for the same graph size n, hierarchy decreases with density.
Hence, for random graphs, sparse graphs have higher hierarchy.
(b) E ect of network density on hierarchy Figure 7: Hierarchy in random graphs.
But, even in Delicious, very few nodes belong to the highest stratum.
Agony distribution: Our measure of hierarchy is based on the intuition that people prefer to connect to other people who are in the same stratum or higher up.
People who connect to others lower in the hierarchy incur agony.
Figure 10c plots the distribution of agony among the nodes in the different networks that we study.
The  gure shows that most people incur very small amount of agony.
There are a few people who incur a lot of social agony.
These people tend to follow a lot of people who are lower than them in the hierarchy.
Random redirection: We now study whether the hierarchy for each of these social networks is more or less than that observed in a randomly directed graph with the same underlying structure.
To do this, we take each graph and randomly change the direction of each edge.
Hence, we keep the undirected graph the same, but change the direction of the edge.
In Figure 11, we show the importance of edge directions to hierarchy for these social networks and the e ect of randomly redirecting the edges.
Among the social networks we studied, Delicious has the highest hierarchy.
The networks starts out with medium hierarchy and it keeps increasing.
The Delicious graph has almost perfect hierarchy at size 100,000.
The hierarchy in the randomly redirected graph, shows a similar overall pattern but with low hierarchy.
Delicious also has the most number of levels in the hierarchy.
YouTube, on the other hand, has the lowest hierarchy, which is even lower than the hierarchy observed if the edges were randomly oriented.
The likely reason for this is that YouTube has a good search index and the preferred way of getting to videos is through search.
Hence, social connections become less important and people do not connect to each other based on rank.
In Flickr, the hierarchy largely remains the same even as the graph becomes large.
However, the hierarchy in the redirected graph decreases sharply.
In LiveJournal, the hierarchy starts out being very low and increases slowly with graph size.
The randomly redirected graph on the other hand shows exactly the opposite behavior, consistent with the behavior of random graphs that we saw earlier.
Figure 8: Hierarchy in social network among famous people.
Number of strata: Figure 9b plots the number of social strata in these four social networks, as we increase the graph size.
We see that the number of strata stabilizes around seven for LiveJournal and around  ve for Flickr.
YouTube has the lowest number of levels, and it also has the lowest hierarchy, while Delicious has the largest number of levels and also has the highest hierarchy.
Compared to the number of nodes (100,000), the number of strata (< 15) is very low.
Rank distribution: Figure 10a plots the frequency distribution of people belonging to di erent social strata in a network, i.e., how many nodes belong to each stratum.
We see that, in all the networks, most nodes have a low rank in the hierarchy (between one and three).
A very small fraction of the nodes have ranks above four.
The exception to this is Delicious, which has a wider distribution of ranks.
We show the exact probability distribution of the Delicious nodes in Figure 10b.
The plot shows that a lot of delicious nodes have medium ranks in the hierarchy.
hierarchy (b) E ect of network size on number of strata in the hierarchy Figure 9: E ect of network size on hierarchy.
(a) Cumulative distribution of ranks (b) Probability distribution for the Delicious graph (c) Distribution of Agony among nodes Figure 10: Distribution of ranks among nodes.
Early e orts to  nd the hierarchy underlying social interactions followed from observations of dominance relationships among animals.
Landau [17] and Kendall [15] devised statistical tests of hierarchy for a society, but with the necessary assumption that there exists a strict dominance relation between all pairs of individuals, and that the relations are transitive (i.e. no cycles).
Although de Vries [5, 6] expanded the Landau and Kendall measures by allowing ties or missing relationships, his algorithms are feasible only on small graphs.
The hierarchy underlying a social network can be used in recommending friends (the link prediction problem [20]) and in providing better query results [16].
There exist link-based methods of ranking web pages [11].
Maiya and Berger-Wolf [21] begin from the assumption that social interactions are guided by the underlying hierarchy, and they present a maximum likelihood approach to  nd the best interaction model out of a range of models de ned by the authors.
In the same vein, Clauset, Moore, and Newman [4] use Markov Chain Monte Carlo sampling to estimate the hierarchical structure in a network.
Rowe et.
al. [22] de ned a weighted centrality measure for email networks based on factors such as response time and total number of messages, and tested their algorithm on the Enron email corpus.
Leskovec, Huttenlocher, and Kleinberg recently brought attention to signed network relationships (e.g.
 friend  or  foe  in the Epinions online social network) [19] and presented a way to predict whether a link in a signed social network is positive or negative [18].
The closest to our problem in the computer science literature is the minimum feedback arc set problem.
In the minimum feedback arc set problem, we are given a directed graph G and we want to  nd the smallest set of edges whose removal make the remaining graph acyclic.
This is a well known NP-hard problem and is in fact NP-hard to approximate beyond 1.36 [14].
Poly-logarithmic approximation algorithms are known for this problem [8].
In this paper, we introduced a measure of hierarchy in directed social networks.
We gave an e cient algorithm to  nd the optimal hierarchy given just the network.
We also showed the emergence of hierarchy in multiple online social networks: in contrast to random networks, social networks have low hierarchy when they are small and the hierarchy (b) YouTube (c) LiveJournal (d) Flickr Figure 11: E ect of directed edges.
increases as the network grows.
We showed that there are a small number of strata, and this number does not grow signi cantly as the network grows.
An interesting future direction is to study the emergence of hierarchy over time in di erent social networks.
Another direction of future work is to use our measure of hierarchy to develop better ranking algorithms.
Acknowledgments We would like to thank Alantha Newman and Michael Saks for helpful discussions.
We will also like to thank the anonymous referees for their suggestions.
This work was supported in part by the NSF under grants CCF-0728937, CCF-
the Summer 2010 DIMACS REU program.
