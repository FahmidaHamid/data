Due to the explosion in the number of online databases, there has been increased interest in leveraging the high-quality information present in these databases [2, 3, 11, 23,
 lenging.
For example, if a biologist needs to locate databases related to molecular biology and searches on Google for the keywords  molecular biology database  over 27 million documents are returned.
Among these, she will  nd pages that contain databases, but the results also include a very large Copyright is held by the International World Wide Web Conference Committee (IW3C2).
Distribution of these papers is limited to classroom use, and personal use by others.
Juliana Freire School of Computing University of Utah juliana@cs.utah.edu number of pages from journals, scienti c articles, personal Web pages, etc.
Recognizing the need for better mechanisms to locate online databases, people have started to create online database collections such as the Molecular Biology Database Collection [15], which lists databases of value to biologists.
This collection, has been manually created and is maintained by the National Library of Medicine.
Since there are several million online databases [23], manual approaches to this problem are not practical.
Besides, since new databases are constantly being added, the freshness of a manually maintained collection is greatly compromised.
In this paper, we describe a new approach to the problem of identifying online databases that belong to a given domain.
There are a number of issues that make this problem particularly challenging.
Since online databases are sparsely distributed on the Web, an e cient strategy is needed to locate the forms that serve as entry points to these databases.
In addition, online databases do not publish their schemas and their contents are hard to retrieve.
Thus, a scalable solution must determine the relevance of a form to a given database domain by examining information that can be automatically extracted from the forms and in their vicinity.
Web crawlers can be used to locate online databases [3,
 ably retrieves a diverse set of forms.
Consider for example, the Form-Focused Crawler (FFC) [3] which is optimized for locating searchable Web forms.
For a set of representative database domains, on average, only 16% of the forms retrieved by the FFC are actually relevant for some domains this percentage can be as low as 6.5%.
These numbers are even lower for less focused crawlers, e.g., crawlers that focus only on a topic [9, 10, 13].
The problem is that a focus topic (or concept) may encompass pages that contain many di erent database domains.
For example, while crawling to  nd airfare search interfaces the FFC also retrieves a large number of forms for rental car and hotel reservation, since these are often co-located with airfare search interfaces in travel sites.
The set of retrieved forms also includes many non-searchable forms that do not represent database queries such as forms for login, mailing list subscriptions, and Web-based email forms.
Having a homogeneous set of forms that lead to databases in the same domain is useful, and sometimes required, for a number of applications.
For example, whereas for constructing online database directories, such as BrightPlanet [8] and the Molecular Biology Database Collection [15], it is desirable that only relevant databases are listed, the e ectiveness (b) Hotel and Airfare search forms Figure 1: Variability in Web Forms.
(a) shows forms in the Job domain that use di erent attribute names to represent the same concepts.
(b) shows forms in two distinct domains, Hotel and Airfare, which contain attributes with similar labels.
statistical schema matching across Web form interfaces [18] can be greatly diminished if the set of input forms is noisy and contains forms from multiple domains.
Identifying relevant forms as belonging to a given database domain, however, is a hard problem that has started to receive attention in recent literature.
Previous works on form classi cation can be broadly characterized as pre-query and post-query [27].
Post-query techniques issue probe queries and the retrieved results (i.e., the database contents) are used for classi cation purposes.
Probing-based techniques [7, 17] are e ective and required for simple, keyword-based in terfaces, which are easy to  ll out automatically and have little or no information pertinent to the underlying database (e.g., a form with a single attribute labeled  search ).
However, these techniques cannot be easily adapted to (structured) multi-attribute interfaces.
The di culties in automatically  lling out structured Web forms have been documented in the literature [7, 11, 25, 32].
To help automatically  ll out multi-attribute forms, paradoxically, it is often necessary to  rst discover and organize forms in the domain, so that attribute correspondences can be found and possible values for attributes collected (e.g., through matching a large number of forms in a domain [18]).
Pre-query techniques, on the other hand, rely only on visible features of forms.
They are suitable for forms whose contents are indicative of the database domain.
An important requirement for these techniques is the ability to deal with the wide variation in content and structure of automatically gathered forms.
This variability is present even in well-de ned and narrow domains.
As Figure 1 illustrates, di erent attribute names can be used to represent the same concepts in forms that belong to a domain, and forms may be similar even when they belong to di erent domains.
There can also be high similarity between searchable and non-searchable forms (see Figure 2).
Previously proposed techniques, however, have limitations with respect to scala-bility [22], and the ability to deal with highly heterogeneous Figure 2: Searchable and a non-searchable form with similar contents.
The form on the left is used for searching over a database of used cars, whereas the one on the right is used to request quotes.
form sets [12].
The technique proposed by Hess and Kush-merick [22] classi es forms based on form attribute labels.
Thus, the e ectiveness of their technique depends on the ability to extract descriptive labels for form attributes a task that is hard to automate [19, 25].
Cope et al. [12], on the other hand, use a classi er that considers only a subset of the form contents: the form structure and the content inside tags in the form context (e.g., the text inside an input element).
Consequently, their classi er is unable to correctly identify forms whose content are indicative of the database domain, but occur outside these tags.
Contributions and Outline.
In this paper, we describe a new pre-query method for automatically classifying forms with respect to a database domain that is both scalable and accurate.
As discussed in Section 2, we model the problem of identifying the domain of an online database as a search problem over features of Web forms that serve as entry points to these databases.
We propose HIerarchical Form Identi cation (HIFI), a new strategy that obtains high accuracy by partitioning the space of form features and using learning classi ers that are best suited for the features in each partition.
The modular classi ers are presented in Sections 3 and 4, and in Section 5, we discuss how they are combined.
Because our approach relies only of features that are automatically extracted from forms, it is scalable.
An extensive experimental evaluation of HIFI, using real Web data consisting of over 27,000 forms in eight distinct database domains, is discussed in Section 6.
The results con rm that our choice of partitioning the form features and combining di erent classi ers leads to higher accuracy than if a single classi er is used for all features.
Most importantly, the high precision and recall obtained indicate that it is possible to automatically and accurately classify online databases using visible information readily available in form interfaces.
This makes our strategy especially suitable for large-scale Web information integration tasks.
Our goal is to select only the relevant forms in set of heterogeneous forms retrieved by a focused crawler.
The problem we are trying to solve can be stated as follows: Given a set F of Web forms automatically gathered by a focused crawler, and an online database domain D, our goal is to select from F only the forms that are entry points to databases in D.
In other words, we would like to  lter out all irrelevant forms non-searchable forms, and searchable forms that do not belong to the domain D. Searchable forms are forms which serve as entry points to online databases once submitted, a query is issued against the database and its results are returned.
Non-searchable forms, in contrast, are often used to just to submit information.
Our approach to locate and identify online databases consists of three components: a focused crawler; the generic form classi er (GFC); and the domain-speci c form classi- er (DSFC).
Figure 3 shows how the di erent components of our solution explore and prune the space of Web forms.
The focused crawler uses features of Web pages to focus on a topic.
It helps prune the search space by avoiding a large number of irrelevant forms that reside in o topic pages.
Nonetheless, as we discussed above, within a focus topic there can be both non-searchable forms as well as searchable forms from multiple database domains.
The two classi ers are used in a sequence to identify relevant forms in the input set: the  rst classi er eliminates non-searchable forms based on structural characteristics; and the second uses the textual contents of forms to identify, among searchable forms, the ones that belong to the target database domain.
Learning to Classify Forms.
Since our goal is to devise a general solution to this problem, that works across di erent domains, we formalize the problem of identifying relevant forms in a particular database domain in terms of inductive learning concepts [24].
One of the basic ideas in inductive inference is that there exists a target concept C that can be modeled by an unknown function f .
Given an instance x, f (x) indicates whether x belongs to C. Thus, the task of induction is, given a collection of examples of f , to determine a function h, called hypothesis or classi er, that approximates f .
There can be several di erent functions that approximate f whose hypotheses are consistent with the examples.
An important question is then how to choose from among these hypotheses.
For the problem de ned above, one possible solution would be to gather examples of forms in the domain D and construct a classi er based on these examples (the hypothesis h).
However, given the wide variation in form structure and content within and across di erent domains, the resulting hypotheses can be very complex.
A simpler hypothesis set can be obtained by hierarchically decomposing the feature space.
In HIFI, this decomposition follows the hierarchy of form types.
The most general concept (GC), which sits at the top of the hierarchy, corresponds to searchable forms which may belong to multiple database domains.
The more speci c concept (SC) corresponds to forms in a speci c database domain.
The original hypothesis h is replaced by hGC and hSC , where hGC iden-ti es the searchable forms over the set of all Web forms and Figure 4: The di erences between the average number of checkboxes, selection lists and textboxes of searchable and non-searchable forms illustrate some the structural di erences between these two kinds of forms.
hSC identi es, among searchable forms, forms that are relevant to a given domain.
In essence, by creating these di erent levels of abstraction, instead of using a single complex classi er, we can construct two classi ers that make simpler decisions: hGC is performed by the Generic Form Classi er (GF C) and hSC by the Domain-Speci c Form Classi er (DSF C).
In addition, the decomposition of the feature space allows the use of learning techniques that are more appropriate for each feature subset.
As we discuss in Sections 3 and 4, an evaluation of di erent learning techniques for these classi ers shows that decision trees [24] present the lowest error rates for determining whether a form is searchable based on structural patterns, whereas SVM [24] is the most e ective technique to identify forms that belong to the given database domain based on their textual content.
More details about these classi ers, how they are constructed and combined are given in Sections 3, 4 and 5.
As a  rst step in the form ltering process we apply the GFC to identify searchable forms.
Empirically, we have observed that some structural characteristics of a form can be a good indicator as to whether the form is searchable or not [3].
See for example, Figure 4, which shows the average number of selection lists, textboxes and checkboxes in a sample set that contains both searchable and non-searchable forms (details about this sample are given below).
This  g-ure suggests that searchable forms have a higher number of selection lists and checkboxes, whereas non-searchable forms have a higher number of textboxes.
The forms in Figure 2 are concrete examples of this trend.
The form on the left is searchable and contains several selection lists, whereas the form on the right is non-searchable and contains a large number of textboxes.
Other structural features of forms that are useful in differentiating searchable and non-searchable forms include: number of hidden tags; number of radio tags; number of  le inputs; number of submit tags; number of image inputs; number of buttons; number of resets; number of password tags; number of textboxes; number of items in selection lists; sum of text sizes in textboxes; submission method (post or get).
Another useful feature is the presence of the string  search  within the form and submit tags.
In fact, the presence of the  search  string within the form and submit tags Na ve Bayes MultiLayer Perceptron
 SVM (degree=1) SVM (degree=2) SVM (degree=3) SVM (degree=4) SVM (degree=5) Error test







 Table 1: Error test rates for GFC.
was the feature which obtained the highest entropy in our feature set.
Note that all of these features can be automatically extracted from Web forms they require no manual pre-processing.
We built classi ers for these features using di erent machine learning techniques: Na ve Bayes, Decision tree (C4.5 algorithm), MultiLayer Perceptron and Support Vector Machine with distinct polynomial kernel degrees (SMO algo-rithm).1 For positive examples we extracted 216 searchable forms from the UIUC repository [30], and we manually gathered 259 non-searchable forms for the negative examples.
We set up the training phase with 10-fold cross validation and split the form set in two thirds to the training set and one third to the testing set.
The error test rates for the di erent techniques are shown in Table 1.
These low error rates indicate that structural features are very e ective to di erentiate between searchable and non-searchable forms.
For HIFI, we selected the C4.5 classi er because it had the lowest error rate.
It is worthy of note that Cope et al. [12] also proposed the use of decision trees to classify searchable forms.
Similar to the GFC, their classi er uses features that can be automatically extracted from forms.
However, because their strategy also takes the textual contents inside the form tags into account, it is domain-speci c.
As a result, a di erent classi er needs to be constructed for each domain.
In contrast, as we discuss in Section 6, the GFC is very e ective in identifying searchable forms in di erent domains.
Because the GFC is domain independent, it can be reused, as is, in many applications.
For example, it can be used to pre-process input forms for form clustering algorithms [4, 19], or to improve the quality of automatically constructed online database directories such as Complete Planet [8].
The GFC is e ective for identifying searchable forms, regardless of their domains.
However, as we discussed in Section 1, even when a focused crawler is used, the set of forms retrieved may include searchable forms from many di erent domains.
Consider, for instance the forms in Figure 5.
These two forms were retrieved by the Form-Focused Crawler (FFC) during a crawl to  nd airfare search forms, but neither belongs to the target Airfare database domain  one is a hotel search form and the other is a rental car search form.
To identify searchable forms that belong to a given domain, as the second step of our form ltering process, we use a more specialized classi er, the DSFC.
The DSFC uses the textual content of a form to determine its domain.
The form content is often a good indicator of the database domain it
 as for constructing the classi ers described in Section 4.
(a) Hotel search (b) Rental car search Figure 5: Searchable forms obtained among Airfare-related Web pages.
contains metadata and data that pertain to the database.
For example, form attribute names often match the names of  elds in the database, and selection lists often contain values that are present in the database.
Other works have used the form contents for both classi- cation and clustering purposes [19, 22].
He et al. [19] used form contents, more precisely the attribute labels, to cluster forms.
They note that forms in a given domain contain a well-de ned and restricted vocabulary.
Hess and Kushmer-ick use both the attribute labels and their values (if present) to classify forms.
However, the e ectiveness of approaches that rely on attribute labels is highly dependent on the ability to extract descriptive labels for form attributes, and this task is hard to automate [19, 25].
It is worthy of note that the experiments reported in both [19] and [22] relied on a manual pre-processing step for extracting the form attribute labels.
To construct a scalable solution that is able to automatically classify thousands of forms, instead of attempting to extract attribute labels, the DSFC uses the textual content within a form the text enclosed by the form tags after the HTML markup is removed.
Since, in essence, the DSFC needs to perform text classi cation, we experimented with two learning techniques that have been found to be e ective for this task: decision trees (C4.5 algorithm) and SVMs (the SMO algorithm).
We evaluated the e ectiveness of these techniques over eight distinct domains.2 For each domain we built a DSFC instance as follows.
First, we performed a focused crawl (using the FFC [3]) and collected all distinct forms in the crawled pages.
Forms with the same structure and located in the same host are considered the same even if they appear in di erent pages.
Then, we used the GFC to  lter out the non-searchable forms.
From this set, we extracted the structured forms and manually selected positive (on average 220 per domain) and negative examples (on average
 form is represented as a vector where each cell represents a stemmed word [1], and the cell value is the frequency of the corresponding term in the form.
These vectors are then used as input to the DSFC instance.
We set up the training phase with 10-fold cross validation and split the form set in two thirds to the training set and one third to the testing set.
Table 2 shows, for the eight domains, the error rates obtained by decision trees and by SVMs using distinct polyno-
Airfare
 Auto Book Hotel Job Movie Music Rental






 SVM(d=1) SVM(d=2) SVM(d=3) SVM(d=4) SVM(d=5)







































 Table 2: Error test rates of DSFC in di erent domains.
mial kernel degrees.
The low error rates reinforce our choice to use the form contents as the basis for classi cation.
Note that SVMs perform better than decision trees.
However, no single polynomial kernel degree is uniformly better for all domains.
For the experimental evaluation described in Section 6, for each domain, we selected the classi er with the lowest error rate.
Figure 6: Hierarchical Composition of Modular Classi ers

 A popular technique to combine classi ers is to compose them in an ensemble.
A set of base classi ers is constructed, and classi cation of new examples is decided by combining individual decisions from the base classi ers (see e.g., [5]).
In contrast, HIFI partitions the feature space and applies different classi ers to the di erent partitions in a sequence.
As illustrated in Figure 6, the domain-independent GFC  rst performs a coarse classi cation and prunes a large number of irrelevant (non-searchable) forms.
The DSFC then works on the smaller set of searchable forms and identi es among them the relevant forms.
The hierarchical composition of classi ers leads to modu-larity: a complex problem is decomposed into simpler sub-components and a monolithic classi er is replaced by a hierarchy of classi ers, each dedicated to a subset of the hypothesis [16, 21].
This has several bene ts.
First and foremost, because the learning task of the DSFC is simpli ed, the overall classi cation process is more accurate and robust.
The DSFC need not consider hypotheses that deal with the high variability present in non-searchable forms, and this simpler hypothesis set leads to improved classi cation accuracy.
As an example, consider Figure 2, which shows two forms with similar content.
Whereas the form on the left is a (relevant) searchable form in the Auto domain, the one on the right is a non-searchable form (irrelevant) for requesting car quotes.
There are also instances of badly designed Web pages in which the form content contains extraneous terms.
Since our form extraction process is automated and all non-HTML terms within the form are considered, a non-searchable form may be incorrectly classi ed if these extraneous terms are representative of the database domain.
Because the GFC takes structural features into account, it is able to accurately prune many irrelevant forms which might otherwise be misclassi ed as relevant by the DSFC.
Another important bene t of the hierarchical composition of classi ers is that we can apply to each partition a learning technique that is best suited for the feature set of the partition: decision trees lead to the lowest error rates when applied to structural features of forms, whereas for the textual contents, SVMs are the most e ective.
In this section, we  rst assess the e ectiveness of the hierarchical composition of the GFC and DSFC using forms retrieved by the FFC in a set of representative database domains.
Then, to evaluate the sensitivity of our approach to the quality of the input set of forms, we study the performance of HIFI using forms retrieved by two crawlers that use distinct focus strategies: the FFC and the best rst focused crawler [10].
Database Domains.
In order to evaluate our solution and assess its generality, we selected domains with di erent characteristics.
The database domains used in our experiments are shown in Table 3.
These domains present high variability in the size, structure, and vocabulary of their forms.
As Table 4 shows, there are striking di erences in form structure across the domains.
While Airfare, Hotel and Rental have a relatively large number of hidden inputs and selection lists, Music and Movie have very few of these types of  elds.
In fact, Music and Movie have a much lower total number of attributes than the other domains.
The textual content of the forms in the di erent domains also have di erent characteristics.
As Table 3 shows, there is a wide variation in the average number of terms for forms in the di erent database domains.
Whereas domains such as Auto and Music have relatively small forms (with an average of 52 and 82 terms, respectively), others such as Airfare and Job have fairly large forms (with an average of 172 and 165 terms, respectively).
These domains also present a wide variation in their vocabulary.
Figure 7 shows the Simpson Index [28] for the di erent domains.
The value of this index represents the probability that two words selected at random from distinct forms in a domain are the same word thus, the higher the value, the more homogeneous the vocabulary is.3 The  gure clearly shows that there is a signi cant variation in vocabulary homogeneity for the di erent domains.
For example, the vocabulary of Auto is substantially more homogeneous than that of Movie.
lary diversity than other measures such as vocabulary size.
GFCDSFCWeb formsSearchableformsIrrelevant formsRelevantformsIrrelevant formsWWW 2007 / Track: SearchSession: Crawlers435Domain Description Airfare Auto Book Hotel Job Movie Music Rental airfare search new and used cars books for sale hotel availability job search movie titles and DVDs music titles and CDs car rental availability # of Forms Avg Form Size















 Table 3: Database domains used in experiments.
The table shows for each domain, the total number of structured forms and the average number of terms in the relevant forms.
Domain Hidden Checkbox
 Airfare
 Auto
 Book Hotel

 Job
 Movie
 Music Rental








 Selection list Textbox















 Table 4: Variability in form structure.
The table shows the average number of di erent form attribute types in each database domain.
Performance Metrics.
To evaluate the performance of the classi ers, we use a confusion matrix which represents the relationship between actual classi cation and predicted classi cation: Actual positive Actual negative Predicted positive True Positive (TP) False Positive(FP) Predicted negative False Negative(FN) True Negative(TN) A commonly used measure of the performance of a classi er is accuracy: accuracy =

 (1) Accuracy is a suitable measure when the input to the clas-si er contains similar proportions of positive and negatives examples.
Consider, for example, an input set consisting of
 labels all items as negative, its accuracy is 90%.
Since during a Web crawl, the large majority of forms retrieved are irrelevant i.e., the forms match the negative examples we use three other measures of performance which better re ect the e ectiveness of a classi er over the set of relevant forms: Recall =

 P recision =

 Specif icity =

 F   measure =
 Recall + P recision (2) (3) (4) (5) Recall shows the number of relevant items retrieved as fraction of all relevant items; precision represents the number of Figure 7: Variability in the homogeneity of form vocabulary across domains.
relevant items as a fraction all the items predicted as positive by the classi er; and speci city is the proportion of actual irrelevant items predicted as irrelevant.
The F-measure is the harmonic mean between precision and recall.
A high F-measure means that both recall and precision have high values a perfect classi cation would result in an F-measure with value equal 1.
The e ectiveness of our approach depends on how the classi ers used for each partition of the search space interact with each other.
To measure the performance of the combination of GFC+DSFC, we performed the following experiment.
First, we ran the FFC for the eight database domains.
Among all the structured and distinct forms gathered by the crawler, we executed the form ltering process.
As described in Section 3, the GFC splits the form space into searchable forms (SF) and non-searchable forms (NSF); and the DSFC classi er further splits the space of searchable forms into predicted relevant forms (PRF) and predicted irrelevant forms (PNRF).
Since for each domain, the FFC retrieves from hundreds to thousands of forms (see Table 3), we randomly selected 20% of the forms in each one of these sets and manually inspected them to verify whether they were correctly classi ed.
As the GFC prunes the search space of forms that serve as input to the DSFC, we are interested in (1) evaluating its e ectiveness in removing the subset of irrelevant forms that are non-searchable (speci city, Equation 4); and (2) verifying whether it misclassi es relevant forms (recall, Equation 2).
The speci city and recall values of GFC in the eight domains are given in Table 5.
Note that these values were measured taking into account only the relevant forms (a subset of searchable forms) and not all searchable forms, which are the target of the GFC.
These numbers show that GFC e ectively partitions the search space: it removes a signi cant percentage of irrelevant forms, which are non-searchable (high speci city), and misclassi es only a few relevant forms (high recall).
The domains in which the GFC obtained the lowest speci city values were Airfare, Hotel and Rental.
Since the GFC is domain independent, and forms in these domains are often co-located in the same sites (e.g., Orbitz and Travelocity), a large percentage of the forms it classi es as searchable belong to a domain other than the target database domain.
As we discuss below, because the DSFC takes the textual content of forms into account, when applied to the set of forms returned by the GFC, the DSFC is able to  lter out forms that do not belong to the target database domain with high accuracy.
Airfare







 Speci city







 Auto Book Hotel Job Movie Music Rental Table 5: E ectiveness of GFC in identifying relevant forms.
Domain Recall Airfare







 Precision Accuracy















 Auto Book Hotel Job Movie Music Rental Table 6: E ectiveness of classi er composition.
Recall Precision Con guration 1 Con guration 2






 Table 7: E ectiveness of two con gurations that use monolithic classi ers.
As expected, the speci city of GFC for searchable forms is much higher than for relevant forms.
For all domains, speci city values were above 90%.
This con rms the ability of the GFC to accurately identify searchable forms.
HIFI =GFC+DSFC.
Table 6 shows the recall, precision and accuracy of the form ltering process which combines the GFC and the DSFC.
The overall accuracy obtained by HIFI is high in all domains.
As discussed above, since a large percentage of the input forms is irrelevant, it is important to also examine the recall and precision.
For most domains both recall and precision are high with precision varying from 0.8 to 0.97 and recall varying from 0.73 to 0.96.
Note that these results were obtained for domains with very different characteristics.
For example, while the Auto domain has small forms and a relatively homogeneous vocabulary, Airfare has big and very heterogeneous forms (see Table 3 and Figure 7).
This indicates that our approach provides an e ective and general mechanism to automatically classify online databases based on their corresponding forms.
Classi er Composition vs. Monolithic Classi er.
To verify whether the combination of classi ers is more e ective than a monolithic classi er, we measured the recall and precision of two con gurations of monolithic classi ers.
Con g-uration 1 uses only the DSFC which is trained as described in Section 4, but executed over the entire input set provided by the focused crawler (not just over searchable forms).
For Con guration 2, we built a new classi er which combines the structural features of the GFC and the form contents.
This new classi er was trained using both searchable and non-searchable forms, and it was executed over all the forms returned by the crawler.
We note that, for both con gura-tions, SVM with polynomial degree 1 obtained the highest accuracy.
Table 7 shows the recall and precision for these two con gurations for the Job domain a similar behavior was observed in other domains.
For Con guration 1, the classi er precision (0.72) is lower than the combination of classi ers (0.95).
Since this classi-(a) F-measure (b) Precision (c) Recall Figure 8: Performance of the HIFI classi cation strategy using forms retrieved by two di erent crawlers: the best rst crawler (BFC) and the form-focused crawler (FFC).
 er is trained only with searchable forms, it performs poorly over the non-searchable forms.
Because the classi er for Con guration 2 learns features of both searchable and non-searchable forms, its model is more speci c.
Although this more speci c model leads to a higher precision (0.94) over the entire input set, it also misclassi es a large number of relevant forms, as one can be seen from the low recall (0.49).
These results reinforce our decision to decompose the search space, and to use classi ers trained with di erent sets of features.
The results presented in the previous sections were obtained using forms retrieved by the FFC.
To assess the sensitivity of HIFI to the quality of the input forms, we evaluate the classi er composition using forms gathered by a di erent focused crawler: the best rst crawler proposed by Chakrabarti et al. [10].
The best rst crawler (BFC) uses a classi er that learns to classify pages as belonging to topics in a taxonomy.
During a search, the crawler only follows links from pages classi ed as being on-topic.
The FFC s search is more focused than that of the BFC.
Like the BFC, form features is completely automated.
In contrast, in our solution, the extraction of Similar to the GFC, Cope et al. [12] try to identify search-able forms [24].
Although they reported high precision and recall for two testbeds (academic and random Web sites), because they construct decision trees based both on structural features and the textual content inside form tags, their approach is domain-dependent, requiring the construction of specialized classi ers for di erent form sets.
In contrast, the GFC is domain-independent it is able to accurately classify forms in di erent domains.
Although Cope s classi er has a domain-speci c component, unlike the DSFC it considers only a subset of the form contents: the form structure and the contents inside the HTML tags.
Thus, its e ectiveness is compromised for forms where the content representative of the database domain lies outside the HTML tags (e.g., descriptive labels for text  elds).
The problem of classifying online databases based on the contents of the forms that serve as entry points to these databases can be seen as an instance of the problem of text classi cation.
Although there is a rich literature on combining text classi ers to obtain higher classi cation accuracy, much of this work has centered around policies for selecting the most appropriate classi er or on strategies to combine the output of the individual classi ers (see [6] for an overview).
In contrast to prior research in combining text classi ers, to obtain higher accuracy, we partition the feature space and combine classi ers in a hierarchical fashion  a distinct classi er is applied to each partition.
In this respect, our approach is similar to the approach proposed by Heiseler et al. [21] to classify images.
While our decision to combine classi ers in a hierarchy was motivated by the need to obtain higher accuracy, for Heiseler et al., performance was a key consideration.
Their application requires the classi cation of a large number of images considering a very large number of features, some of which can be expensive to identify.
The classi er hierarchy they proposed contains a coarse classi er at the root which is used to remove large portions of an image s background (which is easily and cheaply identi able).
The other classi ers that use features that are less common or more expensive to identify are placed in the bottom of the hierarchy.
Our strategy for composing classi ers is also related to the sequential clas-si er model proposed by Even-Zohar and Roth [14], who applied this idea to part-of-speech tagging.
This paper presents a solution to the problem of identifying online databases among a heterogeneous set of Web forms automatically gathered by a focused crawler.
Our approach composes two classi ers in a hierarchical fashion by partitioning the space into structural features and content.
This composition not only allows the construction of simpler classi ers, but it also enables the use of learning techniques that are more e ective for each feature subset.
In addition, since all the features used in the classi cation process can be automatically extracted, our solution is scalable.
Last, but not least, because the proposed form ltering process uses learning techniques, it is general and can be applied to many di erent domains.
The high precision and recall obtained in our experimental evaluation indicate that our approach is a scalable alternative to the problem of online database classi cation.
HIFI can be used as a basic building Figure 9: Percentage of relevant forms among the forms retrieved by the BFC and the FFC.
it uses pages  contents to focus the crawl on a topic, but instead of following all links in a page classi ed as being on-topic, the FFC prioritizes links that are more likely to lead to pages that contain searchable forms.
Figure 8 shows the F-measure, recall and precision obtained by HIFI using forms gathered by the two crawlers.
HIFI performed consistently better using the higher-quality inputs from the FFC.
To give some insight about these results, Figure 9 shows the percentage of relevant forms in the input provided by the two crawlers.
In all domains, the percentage of relevant forms retrieved by the FFC is larger than that of the BFC.
Furthermore, the FFC retrieves between 40% and 220% more relevant forms than the BFC.
Since F-measure, precision and recall are directly proportional to the number of true positives (Equations 3, 2, and 5), it is not surprising that better performance is obtained using the higher-quality input produced by the FFC, that contains both a larger number and a larger percentage of relevant forms.
Note that high values for F-measure, recall and precision were also obtained using the forms obtained by the BFC.
The only exception is the Movie domain.
A possible explanation is that the vocabulary of Movie is very heterogeneous, as one can be seen from its Simpson index (Figure 7).
As a result, the DSFC for Movies is less accurate than for the other domains.
This is re ected in Figure 8, where the lowest F-measure values are for the Movie domain.
The problem is compounded due to the sparseness of this domain: only 2.7% of the forms retrieved by the BFC were relevant a total of 102 relevant forms.
The Music domain, similar to Movie, has a low Simpson index and its DSFC also has lower accuracy.
However, Music is much less sparse than Movie.
Around 17% of the forms retrieved by the BFC were relevant a total of 284 relevant forms.
This explains the relatively higher F-measure for HIFI using BFC in the Music domain.
Rental, on the other hand, is very sparse.
BFC retrieves only 96 relevant forms,
 much more homogeneous than the vocabulary for Movie  its Simpson index is over twice that of Movie.
Our work is closely related to pre-query approaches to form classi cation.
Hess and Kushmerick [22] use a stochastic generative model of a Web service designer creating a form to host a service (e.g., a query interface to an online database), and learn to identify forms in a domain.
Although their results are promising, their solution requires that forms be manually pre-processed to remove irrelevant ample, it can be used to generate sets of homogeneous forms required in form-schema matching and merging [18, 20, 33]; and it can help automate the process of constructing online database collections such as the one described in [15] as well as improve the quality of directories like BrightPlanet [8].
Because HIFI relies on the form content for classi cation purposes, it is not able to reliably identify the domain of simple search forms, whose contents have little or no information related to the database schema and contents.
An interesting direction we plan to pursue in future work is to try and combine our pre-query classi cation strategy with probing-based post-query methods.
