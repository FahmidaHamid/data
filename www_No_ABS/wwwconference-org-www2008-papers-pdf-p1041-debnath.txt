Recommendation systems produce a ranked list of items on which a user might be interested, in the context of her current choice of an item.
Recommendation systems are built for movies, books, communities, news, articles etc.
There are two main approaches to build a recommendation system - collaborative  ltering and content based [3].
Collaborative  ltering computes similarity between two users based on their rating pro le, and recommends items which are highly rated by similar users.
However, quality of collaborative  ltering su ers in case of sparse preference databases.
Content based system on the other hand does not use any preference data and provides recommendation directly based on similarity of items.
Similarity is computed based on item attributes using appropriate distance measures.
We attempt to hybridize collaborative  ltering and content based recommendation for circumventing the di culties of these individual approaches.
Item similarity measure used in content based recommendation is learned from a collaborative social network of users.
Some previous attempts at integrating collaborative  l-tering and content based approach include content boosted collaborative  ltering [3], weighted, mixed, switching and Copyright is held by the author/owner(s).
feature combination of di erent types of recommender system [2].
But none of these talks about producing recommendation to a user without getting her preferences.
We demonstrate the e ectiveness of the proposed system for recommending movies in Internet Movie Database (IMDB) [1].
From the results it is seen that our recommendation is quite in agreement with IMDB recommendation.
In content based recommendation every item is represented by a feature vector or an attribute pro le.
The features hold numeric or nominal values representing certain aspects of the item like color, price etc.
A variety of distance measures between the feature vectors may be used to compute the similarity of two items.
The similarity values are then used to obtain a ranked list of recommended items.
If one considers Euclidian or cosine similarity; implicitly equal importance is asserted on all features.
However, human judgment of similarity between two items often gives di erent weights to di erent attributes.
For example, while choosing a camera, price of a camera may be more important than the body color attribute.
It may be stated that users base their judgments on some latent criteria which is a weighted linear combination of the di erences in individual attribute.
Accordingly, we de ne similarity S between objects Oi and Oj as S(Oi, Oj ) =  1f (A1i, A1j) +  2f (A2i, A2j ) +   +  nf (Ani, Anj) (1) where  n is the weight given to the di erence in value of attribute An between objects Oi and Oj , the di erence given by f (Ani, Anj).
The de nition of f depends on the type of attribute (numeric, nominal, boolean).
We normalize f  s to have value in [0, 1].
In general the weights  1,  2,  ,  n are unknown.
In the next section we describe a method of determining these weights from a social collaborative network.
We have used the above methodology for recommending movie in IMDB database.
A set of 13 features are considered.
The features along with their type, domain and distance measures are shown in Table 1.
All these feature values can be obtained from the IMDB database.
We estimate the feature weights from a social network graph of items.
The underlying principle is to use exist-
Feature Type Domain
 Year String Movie,TV etc.
Integer Integer String String Distance Measure



 (Vmax |V1 V2|)
 Vmax

 (0-10) (  5) <Name> <Name> Drama etc.
College etc.
(<Name>)* France etc.
English etc.
Color, B/W C1 = C2?1 : 0
 <Name>
 Gmax
 Kmax
 Cmax
 Cmax
 Lmax Release Type Rating Vote Director Writer Genre Keyword Cast Country Language Color Company (String)* (String)* (String)* (String)* (String)* String String ing recommendation by users to construct a social network graph with items as nodes.
The graph represents human judgment of similarity between items aggregated over a large population of users.
Optimal feature weights are considered to be those which induce a similarity measure between items best conforming to this social network graph.
We describe below a linear regression framework for determining the optimal feature weights.
Let the items under consideration be denoted by O1, O2,  , Ol, they corresponds to the vertices of our social network.
The edge weight between vertices Oi and Oj , E(Oi, Oj ) = # of users who are interested in both Oi, Oj .
E(Oi, Oj ), suitably normalized, may be considered as human judgment of similarity between Oi, Oj .
Recall that feature vector (content based) similarity between Oi, Oj has been de ned as S(Oi, Oj ) in Eq.
(1).
Equating E(Oi, Oj ) with S(Oi, Oj ) leads to the following set of regression equations.
 i, j = 1..l   i (cid:5)= j,  0 +  1f (A1i, A1j) +  2f (A2i, A2j ) +     +  nf (Ani, Anj ) = E(Oi, Oj ) (2) The values of f (A1i, A1j), f (A2i, A2j ),  , f (Ani, Anj) are known from the data as are the values of E(Oi, Oj ).
Solving the above regression equations provide estimates for the values of  1,  2,  ,  n.
If there are l objects under consideration, it is possible to have lC2 regression equations of the above form.
In the case of movie recommendation we have considered movies as nodes in the social network.
The edge weight between two movies is the number of IMDB reviewers who have reviewed both the movies.
The movie database used in our recommendation system consists of 3   105 random movies downloaded from the IMDB.
The movies voted by less than 5 people or the movies that have not been reviewed by a single person are  ltered out.
The data is then divided into three equal sets.
Each movie is described by 13 features (Table 1).
Our recommendation system is based on the presumption that feature weights are almost universal for di erent sets of users and movies.
To test this presumption we consider dif-Table 2: Feature Weight Values Feature Mean Variance Type Writer Genre Keyword Cast Country Language Company















 having at least one co-reviewer) ferent sets of regression equations and solve for the weights.
We consider the following varieties of regression equations.
I. Equations using only edge weights   1 (i.e. movie pairs II.
Equations using only edge weights   2 .
(Note that this gives a graph which is a sub-graph of the previous graph.)
For the above graphs we construct a set of equations for each of the three (partitioned) datasets having 105 movies.
Thus we get six sets of regression equations which we solve using SPSS package.
It is observed from the weight values obtained from each of the above six sets of regression equations that some of the features have stable weight values, while some features like Director, Rating, Vote, Year, Color have unstable or negative weight.
We remove the features with unstable or negative weights from our regression equations and obtain the following set (Table 2) of stable weights for eight features.
Also note, out of the 8, 3 features namely type, writer and company are particularly important.
These features along with their weights are used to obtain the recommendations.
The proposed algorithm is compared with pure content based method (considering equal weights for all features) and IMDB recommendations.
Performance is measured using the classical Recall measure, considering IMDB recommendation as benchmark.
The experiment has been done on 10 di erent movies.
The proposed method achieves an average recall of 0.29.
Where as, the pure content based method achieves a recall of 0.24 with IMDB.
Thus the proposed method agrees well with IMDB recommendation and in this regard it outperforms pure content based method.
This demonstrates the e ectiveness of feature weighting.
A hybridization of content based and collaborative  lter-ing based recommendation is proposed.
The weights of different attributes of an item are computed from the collaborative social network using regression analysis.
Further studies on other weight estimation techniques like sparse regression and isometric projection are being considered.
Also more rigorous performance evaluation based on human judgment will be undertaken.
