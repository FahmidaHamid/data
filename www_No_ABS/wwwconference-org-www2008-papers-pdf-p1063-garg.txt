Flickr (http://www. ickr.com) is a popular photo sharing site which hosts about 2 billion images.
Users can upload and share their pictures, and they can also search among the public pictures.
Search is not content-based, e.g., you cannot ask for  all pictures showing a jaguar .
Rather Flickr o ers keyword search:  nd all pictures containing the term  jaguar  in the title or in the description or which have this tag .
Titles are often not very useful, as they are typically very short and/or not descriptive, e.g.,  freedom  or  love .
Similarly, the descriptions usually do not describe the picture, but tend to be more of a commentary or poetic nature, e.g., praising the beauty of something or containing a related poem.
Tags are usually the best resource for  nding or organizing pictures, both personal ones and pictures taken by Copyright is held by the author/owner(s).
others, as tags tend to capture the relevant keywords.
Encouraging users to add more quality tags thus increases the overall value of the system.
In this work, we describe algorithms which help to semi-automate the tagging process by suggesting relevant tags to the user, who can then choose to add them (by clicking) or to ignore them (by adding a di erent tag manually).
More concretely, we propose algorithms for the following personalized tag suggestion problem: Given (i) the identity of a user, (ii) an initial (small or even empty) set of tags, as well as (iii) the tagging history of all (or many) users, suggest a ranked list of related tags to the user.
The initial set of tags we refer to as a  query .
This problem is independent of any particular application, but we only evaluated our algorithms in the context of Flickr.
We consider it most applicable in an interactive setting, where the user adds/selects tags one after another, and the system presents an updated choice to the user at each step.
The personalization component helps to (i)  nd specialized tags, such as names of friends or places, and to (ii) disambiguate the query, by suggesting  car  to a car lover, when the query is  jaguar .
Flickr itself o ers a simple service which tries to suggest tags: when a user wants to tag a picture, she can select  Choose from your tags  and is then presented with a subset of tags she used in the past.
This list is sorted lexicographically and the items displayed seem to be a mix of tags used both very recently and very frequently by the user.
The set is independent of the query, i.e., the tags already entered by the user for the given picture.
This approach is similar to our Method 1.
Automatically assigning/suggesting tags to blog posts [3,
 text,  nding similar posts and hence related tags is considerably easier than for pictures.
Similarly, automatic tagging of web pages can be improved/personalized, if the system has access to the surfer s desktop [1].
In settings where several users collaboratively tag the same items, such as for social bookmarking sites, yet other techniques can be applied [5].
Algorithms for mining association rules [2] are also relevant.
But they (i) are comparably slow, (ii) would not give any result if the initial set of tags does not occur in any picture, and (iii) would not generate a ranked result list.
Still, we might explore adaptations of those techniques in the future.
All of the following algorithms take as input an instance of the aforementioned problem and output a ranked list of tags, along with a weight wt for each tag t. Weights w(a) t
 can thus be easily linearly combined, assuming that and w(b) weights are normalized to make them comparable.
( (cid:2) (cid:3) t = nu(t)/ Let u be the user asking for tag suggestions.
Let nu(t) be the number of times a user u has used tag t in the past.
Simply using w(1) t nu(t)2), gives us our  rst method, which we will use as a baseline.
If a user has used  sky  9 times and  john  4 times before, it suggests  sky  before  john , regardless of what the user has already entered.
Method 1 (or variants using the recency of a tag), which is similar to Flickr s approach, is a natural candidate to use at the beginning when T (q), the set of tags present in the query, is still empty.
( t (cid:2) (cid:3) (cid:3) t = w(cid:2)(2) t / Let T (p) be the set of tags of a picture p. Let P (u) be the set of pictures for user u.
Method 2  rst computes a weight for each picture p   P (u) and each tag t   T (p) as wp(t) = |T (p) T (q)| (and = 0 if p /  P (u) or t /  T (p)).
The weight for a tag t is then given by w(cid:2)(2) p P (u) wp(t), t = t w(cid:2)(2)
 normalized to w(2) ).
This method gives a higher weight to  john , if the user has already entered  man , and if  man  and  john  were used together in the past.
Due to space constraints, this method can only be outlined.
It proceeds in two phases.
First, it identi es a set of promising groups1.
It does this by building a group-tag matrix and by using cosine similarities both on the user and the group pro les directly (for a query independent user-group similarity) and on the original query which is expanded by Method 2 (for a query-group similarity).
Once a small set of promising groups has been identi ed, it then uses Method 2 for each of these groups to get a list of tags to suggest.
Given a set of pictures, which have been tagged by users with r > k tags, we do the following for each picture in the set.
First, we remove it from the tag history, so that the system does not know about this combination of tags being used by the particular user.
Then we give the  rst k tags (along with the identity of the user) to the algorithm to evaluate, which has to produce a ranked list of tags.
To evaluate the quality of the result list, one can then compute precision-recall measures/graphs, where the remaining r  k tags are treated as the only relevant tags.
This setup gives an underestimate of the quality of a system, as it assumes that each user has exhaustively tagged her pictures, so that any additional tag is considered irrelevant by her.
We downloaded roughly 60M publicly accessible pictures for 80K groups.
To  lter out noise and to reduce the size of the data, we removed tags used less than 50 times.
These tags were, however, not removed from the pictures on which we ran the evaluation, so that a perfect recall was impossible.
We tested the three algorithms on two sets of pictures: (i) 200 pictures with 4-8 given tags and (ii) 200 pictures with
 two tags of each picture, and then produced a ranked list of
 ual users, and groups gave better experimental results.
related tags.
For each of the 400 pictures, we also asked a volunteer to evaluate the relevance of about 50 tags, obtained by combining the  rst 20 results of the three methods, excluding tags present in the original picture.
The volunteer used a conservative approach and, e.g., deliberately marked  ears  as irrelevant for a standard portrait or  Europe  for an arbitrary picture taken in a European country.
Results for 200 pictures with 4-8 tags .24 (.41) .12 (.25) .08 (.17) .05 (.11) .42 (.51) .19 (.24) .11 (.15) .06 (.09) Method 1 Method 2 Method 3 .85 M2+.15 M3 .30 (.36) .14 (.20) .09 (.13) .05 (.08) Results for 200 pictures with 10+ tags Method 1 Method 2 Method 3 .85 M2+.15 M3 .55 (.60) .35 (.40) .25 (.29) .17 (.22) .41 (.56) .19 (.29) .11 (.19) .06 (.12) .68 (.73) .49 (.57) .35 (.42) .22 (.29) .67 (.73) .48 (.54) .33 (.39) .21 (.26) .43 (.57) .30 (.40) .21 (.30) .15 (.22)







 Table 1: Precision at tag position 1, 5, 10 and 20 for all three methods and a combination of two schemes.
The numbers in parentheses include the additional relevance information from the user study.
Numbers in bold indicate the best performing method.
A combination of Method 2 and 3 gives an improvement of
 numbers are higher for the second set has two reasons.
First, there are more relevant tags to be found.
Even with the user evaluation, certain tags such as  vacation  or  friends  were, lacking background information, conservatively chosen as ir-relevant.Second, users who add more tags to an individual picture usually have a better tagging history, so that all three methods automatically work better.
Overall, Method 3 bene ts the most from the user study, as it suggests relevant tags outside the user s vocabulary.
Although the improvements of the combined scheme over Method 2 are not dramatic, they are certainly noticable.
Currently, we are working on an improved use of the  external knowledge  from groups.
