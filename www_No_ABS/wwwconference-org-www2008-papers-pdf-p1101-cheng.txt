More and more RDF data have been published on the Semantic Web, and searching for entities (concepts and objects) on the Semantic Web is in demand.
To serve it, we developed the Falcons1 system.
At the time of writing, more than 7 million well-formed RDF documents, containing 250 million RDF statements, have been discovered by Falcons, and 4,400 ontologies have been identi ed among them.
About 30 million Semantic Web entities have been indexed, and about 2 million of them are concepts (classes or properties).
This poster presents the services provided by the Falcons system and its supporting technical features.
Falcons provides keyword-based search for Semantic Web entities.
In the search results page, for each entity, its types and labels are presented for users to quickly understand its denotation.
We also present the number of RDF documents where each entity is used, to show its popularity.
We associate each entity with a link to the page listing the RDF documents that de ne and use it.
http://iws.seu.edu.cn/services/falcons/.
Copyright is held by the author/owner(s).
Figure 1: A screenshot of Falcons Concept Search.
Figure 2: A screenshot of Falcons Object Search.
Semantic Web developers need to search existing ontologies for reuse in their data.
To serve it, Falcons not only presents the classes and properties that match the query terms, but also dynamically recommends ontologies.
Once an ontology is selected, as depicted in Fig. 1, the results will be re ned to only include the classes and properties in that ontology.
Such interaction mode enables users to not only understand speci c classes and properties but also obtain a general view of ontologies.
Semantic Web developers and ordinary users also need to search for the objects on the Semantic Web.
To serve it, Falcons presents the objects that match the query terms, and also dynamically recommends several types of objects that the user is probably searching for.
Once a type is se-
popularity of ontologies.
The ontologies that contain widely instantiated classes and properties will be more likely to be recommended.
We also index each ontology to its classes and properties.
So, combined with the inverted index from terms to concepts, users can be served with only those matched concepts in a speci c ontology.
To obtain the candidate classes for recommendation, it is impractical to directly build an index from terms to classes because some classes may have too many instances as well as too many terms to be indexed.
Instead, we iterate over the search results on the  y to collect the classes of the resulting objects stored in the index.
Then, these classes are ranked based on the coverage of their instances in the results.
The top-ranked classes are selected, dynamically grouped by their names, and recommended to users.
We also index each class to its instances.
So, combined with the inverted index from terms to objects, users can be served with only those matched objects of a speci c type.
At the time of writing, the object search service has just been enhanced to allow users to navigate class hierarchies for query restriction.
This new feature is enabled by a way of class subsumption reasoning on multiple vocabularies and an improved technique for recommending classes.
RDF statements from di erent data sources are stored and indexed.
For each entity, a set of statements about it is extracted and ranked according to the popularity of the entities in these statements.
The MMR technique [1] is used to rerank these statements, i.e., the statements are selected into the summary one by one, and once a statement is selected, the ranking values of the remaining statements with a similar predicate (from the same ontology) will be decreased.
Such method can improve the diversity of the summaries.
Falcons is a keyword-based search system for concepts and objects on the Semantic Web, and is equipped with entity summarization for browsing.
Future work includes improving the manipulation of concept spaces for a better user experience in searching and browsing the Semantic Web.
This work is supported by the NSFC under Grant 60773106.
We are also grateful to Honghan Wu and Xiang Zhang for their work on the system.
