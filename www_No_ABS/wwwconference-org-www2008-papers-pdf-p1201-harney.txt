Web service compositions (WSCs) are an important area of study in services oriented computing.
They offer the potential for automatically formulating processes in an ef cient and timely manner.
WSCs are predominantly modeled as being static, where the participating services are assumed to exhibit  xed quality of service (QoS) parameters during the composition and execution.
However, in practice, WSC environments are often volatile   QoS of participating services may change during the composition.
Therefore, WSCs must compose in the presence of this volatility.
Previous approaches [?, ?]
associate expiration times with the service parameters.
When the parameters of the component services expire, the WSC issues a query to gather the updated information.
If the new parameter values are different from the previous ones, the WSC backtracks to the step in the composition where the service with the revised parameters is used.
A signi cant limitation of these approaches is that some of the backtracks are redundant   changes in the parameter values do not necessitate changes in the composition.
As excessive backtracking leads to time-consuming compositions, we may improve on these approaches by reducing the amount of backtracking.
We introduce a new method for managing volatility during composition, which we call the informed-presumptive approach.
The method predicts whether the newly queried parameter values will cause signi cant changes in the composition.
If the composition is Copyright is held by the author/owner(s).
Prashant Doshi LSDIS Lab, Dept.
of Computer Science University of Georgia, GA 30602 pdoshi@cs.uga.edu expected to change due to the revised parameters, then the informed-presumptive will backtrack to the point in the composition where the queried service occurs.
Otherwise, it ignores the changed parameter value, as its impact on the composition is negligible.
Thus, we seek to  nd a range of revised values that are expected to induce a change in the composition.
Using the technique of gradient descent, we  nd the ranges of values with minimal computational overhead.
In using the informed-presumptive, we form compositions in less time compared to previous state-of-the-art strategies, by eliminating backtracks that are not required.
We empirically demonstrate the speed up using a simulated volatile environment.
For a composition problem containing states, S, and component services, A, we  nd the service(s) to be invoked at each state s   S.
Let  A(s)   A be the choice of services available at each state.
The composition  nds the optimal service(s) that maximizes the value function:    (s) = argmax a   A(s) V a (1)   In Eq.
?
?,   is the optimal policy which maps each state to the   : S   A; In de ning optimal service(s) to invoke at that state,   the value function, V a, we borrow from [?
], and use a weighted summation of the QoS parameters of the service, a, and sum over all services in the composition.
We use the normalized cost,  C a, and availability  Ava.
Let (cid:3)pa denote the revised parameter value vector for the service, a: (cid:3)pa def= [  C (cid:4)a,  Av (cid:4)a] (2) (cid:4)a are the revised cost and availability obtained where  C by querying service a.
(Of course, (cid:3)pa can be extended to account for other QoS parameters as well.)
(cid:4)a and  Av As a change in the value function indicates a change in the composition, we seek those revised parameter vectors for each service that bring a change in the value function.
Let   be the original pol-be the revised policy given the new parameter vector, icy and   then we  nd all (cid:3)pa for which:     ((cid:3)pa)   V  ((cid:3)pa) = 0 V   (3)   V  ((cid:3)pa) is the expected value of the original composition,  , in the presence of the revised parameter vector, (cid:3)pa, of service a, while ((cid:3)pa) is the value of the composition following the optimal pol-V     .
The parameter vectors, (cid:3)pa, that satisfy Eq.
??
are those for icy   which no backtracking is needed.
We may view the difference in Eq.
??
as the error in using the original composition given the revised parameter vector, (cid:3)pa, and
 Eager Presumptive Informed-Presumptive






 Average Composition Times Lazy Eager Presumptive Informed-Presumptive






 t s p e
 e m
 n o i i t i s o p m o
 t s p e
 e m
 n o i i t i s o p m o
 Lazy Eager Presumptive Informed-Presumptive






 t s p e
 e m
 n o i i t i s o p m o





 Change Likelihood (a)






 Change Likelihood (b)








 Change Likelihood (c) Figure 1: The average composition time for the four strategies with a volatility ratio of (a)1, (b).5, (c).33.
denote the difference as E((cid:3)pa).
This allows us to model the problem of  nding the vectors satisfying Eq.
??
as a gradient descent where we descend down the error surface, E((cid:3)pa), until we reach the minimal plateau (E((cid:3)pa) = 0).
For performing the gradient descent, we update (cid:3)pa in the following way: (cid:3)pa   (cid:3)pa +  (cid:3)pa (4) where  (cid:3)pa =  E((cid:3)pa) (5) Here,   is the step size, 0       1.
The negative sign indicates that we take a step in the direction of the reducing gradient.
For our application, the de nition for  E( pa) is the vector:  E((cid:3)pa) = [  E((cid:3)pa)    Ca , (6) Fortunately, Theorem ??
simpli es the task of  nding  E((cid:3)pa).
THEOREM 1.
As V a is a linear function of the QoS parameters  E((cid:3)pa)    Ava ] of a service, a, the gradient  E((cid:3)pa) is constant.
Theorem ??
allows us to perform gradient descent with minimal computational overhead, as we show later.
Our experimental evaluation focuses on comparing composition times when using the informed-presumptive approach and the previously existing strategies.
These are:  The eager strategy, which on service expiration, issues a query to the service for the revised information.
It suspends the WSC until the revised information is received and backtracks if there is a difference in the QoS value.
  The lazy strategy, which on service expiration, issues a query and continues the WSC until completion, at which point the revised information is processed.
It backtracks if there is a difference in the QoS value.
  The presumptive strategy, which on service expiration, issues a query and continues the WSC until the revised information is received, It backtracks if there is a difference in QoS value.
Among these strategies, the presumptive approach was shown to perform the best.
For our experiments, we utilized a travel planning scenario in a simulated volatile environment, and implemented the above strategies in addition to the informed-presumptive.
Each component of a travel plan (ie.
booking a plane ticket, reserving a hotel room, and renting a car) is a single step in the composition.
At each step, we gave a choice of 10 vendor Web services, with varying cost and availability values.
Let the time to compose a step in the composition (without any backtracks) be ts comp, the expiration time for a service a be ta exp, and the query lag time for Qlag.
We use two measurements of volatility, (a) the a service be ta volatility ratio, t , which signi es how often a service expires during the composition of a single step, and (b) the likelihood that the QoS parameter of a service will change upon expiration.
s comp ta exp

 Figure ??
shows the results of our experiments for volatility ratios 1, 0.5, and 0.33.
In Figure ??
(a), we see that when services often expire during composition, the informed-presumptive approach shows lower composition times on average than the other strategies.
However, at a low likelihood of change (  20 percent), the informed-presumptive performs slightly worse as precision errors due to overstepping in the gradient descent become visible.
In Fig.
??
(b), the informed-presumptive has a signi cantly better average composition time than the others.
For lower volatility levels, such as 0.33 (Figure ?
?c), the informed-presumptive continues to outperform the strategies, although the services expire less often.
The improved composition times of the informed-presumptive are achieved by eliminating unnecessary backtracks employed by the other strategies.
We have introduced a new approach for managing WSC in volatile environments that outperforms previous state-of-the-art composition strategies.
We show that a signi cant time speedup may be gained by predicting whether changed parameters induce changes in the composition, thus eliminating unnecessary backtracks.
When complex value functions and dependencies are introduced to the composition, performing gradient descent is likely to become a time-consuming task.
Thus, our future work will explore implementing our approach on more complex compositions.
