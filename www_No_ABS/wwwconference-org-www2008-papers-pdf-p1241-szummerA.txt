Behavioral classi cation involves employing cues from user behavior to classify entities on the web.
This is a promising approach for media that is di cult to classify based on content, for example, multimedia such as images, music or mixed web pages, or even plain text when the categories involve high-level understanding (e.g.
satire or humor).
Sometimes the class of interest is related to a user activity, so that similar usage corresponds to similar class.
We present a method for exploiting user browsing activity to classify web pages.
In particular, we take user click behavior, and demonstrate how to employ it to classify pages as adult (inappropriate for minors) or not.
When a user types a query and then clicks a search result, they create a query-URL association.
By logging a large number of click events, the search engine can amass a large number of query-URL pairs.
These can be viewed as a bipartite graph, where each query is adjacent to one or more URLs and each URL is adjacent to one or more queries.
Our method exploits the structure of this graph.
We implicitly look for clusters of nodes (representing queries or URLs) that share clicks to/from each other.
We assume Copyright is held by the author/owner(s).
that nodes that cluster well are likely to belong to the same underlying category.
The implicit clustering is done via a Markov random walk on the graph.
The walk captures the transitivity of class similarity on the graph: if A is co-clicked with B and B is co-clicked with C, then A is also likely to be related to C. Random walks have previously proved to be e ective for clustering [3] and semi-supervised learning [2] of data points in metric spaces.
They have recently been deployed for ranking results based on click data [1].
This poster shows how to perform classi cation using the random walk model, and applies it to an  adult   ltering problem, using manually labeled items that were selected because they were di cult borderline cases for a text-based adult classi er.
We present evaluation results for the two methods.
We construct a graph whose nodes V range over the union of the documents and the queries.
The edges E correspond to user clicks, with weights given by click counts Cjk, associating node j to k.
We de ne transition probabilities Pt+1|t(k | j) from j to k by normalizing the click counts out of node j, so Pt+1|t(k | j) = Cjk/Pi Cji, where i ranges over all nodes.
The notation Pt2|t1 (k | j) will denote the transition probability from node j at step t1 to node k at time step t2.
We are now given a set of labeled seed nodes i   L, and wish to classify a given node k. We assume the following model for labeling the node based on the seeds.
Interpret the node k as a sample from a random walk that ended at k after t steps.
Infer what seed nodes i the walk may have started from; i.e. consider the backward random walk.
All starting nodes i have a label parameter Q(y | i).
Assign a label to the end node k according to the weighted average of its starting node distributions (ranging over all nodes, labeled and unlabeled L   U ).
P (y | k) = Xi L U Q(y | i)P0|t(i | k).
(1) If all nodes were labeled, the label parameters could be set directly as Q(y | i) =  (y,  yi).
When most nodes have noisy labels or no labels, the label parameters Q(y | i) are unknown, and need to be estimated.
We shall propose two methods to estimate the parameters.
In the  rst method, we simply set Q(y | i) =  (y,  yi) for
 interprets the random walk probability as a distance, this is akin to a nearest neighbor classi er using the random walk similarity measure.
The previous method is not robust to noise in the labels of training nodes.
Moreover, it may require long random walks at test time, as each test node must be reached from at least one training node to be classi ed.
Here we formulate a robust method that  rst estimates parameters for all nodes; the estimation objective maximizes the average classi cation margin  k for labeled training nodes [2], yielding the linear program max {Q(y|i)}, { k}
 |L| Xk L  k s.t.
P ( yk|k)    k
 Q(y | i) = 1 Xy  k   L (2a) (2b) (2c)  i   L   U ,  y.
(2d) The parameters Q(y | i) are then used as labels in a random walk ending at the node we want to classify.
The key result is that the classi er has a closed form solution which involves two rounds of random walk: f (k) = Xi L U sign Xm L  ymP0|t(i | m)!
P0|t(i | k).
(3) This procedure can be seen as a  rst round of estimating labels for all nodes from the few labeled nodes  ym, then followed by a second round of assigning smoothed labels to the test nodes.
Because of the closed form solution, training is computationally much cheaper than using expectation maximization or traditional large margin criteria.
Since our click datasets are large, we compute the random walks in an e cient way as follows.
We represent the transitions as a sparse matrix A.
For a backward walk, we encode the distribution at step t as a vector qj with a single unit entry corresponding to the query node j.
Then we calculate P0|t(k | j) = [ 1 A(.
.
.
(A(Aqj)))]k, in order of the parentheses, and where Zj normalizes the result to sum to one over k. This is e cient because these matrix operations are sparse.
Zj

 Our experimental setting is image search, using a sample of 2 weeks of image search query-URL click pairs.
The URL at each node is actually the web page containing the clicked image.
Our labels are whether the page is considered inappropriate for minors due to adult content.
The labeled set is not a random sample of the graph.
Rather, the labeled set consists of di cult cases where a text-based classi er was uncertain.
Our hope is that the behavior-based classi er can resolve some of this gray area.
The graph has 346K queries, 2.5M URLs and 3.2M edges.
There are 4700 positive labels and 3000 negative labels.
We randomly selected 1000 of the labeled nodes to be training seeds, and 5000 to be testing labels, equally split between the classes.
Table 1: Accuracy for behavioral adult classi ers.
Method Baseline Random Walk: Direct Method Random Walk: Average Margin Accuracy


 We built a baseline classi er that assigned nodes to the closest class, as measured by the number of edges to the nearest labeled node.
If two classes were equally close to a node, the tie was broken by choosing the class with the most numerous nodes at that distance.
We compared that to random walks with tuning parameters set similarly as in [1], namely backwards random walks with 10 steps, without self-transitions.
Table 1 summarizes the results.
Random chance performance is 50% in this experiment.
We see that the random walk classi ers signi cantly outperform the baseline system.
The di erence between the direct parameter settings and the average margin criterion is fairly small, although still signi cant.
We noted that the average margin e ectively did twice as long a random walk due to its two rounds; therefore we also tried the direct method with twice as many steps (20), which brought its performance up to 79.6%, however, this made it twice as expensive computationally as the average margin method.
We have described a behavioral classi cation method for use on the bipartite query-URL click graph.
The classi er uses a backwards random walk from each label.
Parameters can be set using a direct method or label noise can be reduced using average margin estimation.
We compared these to a baseline shortest-path classi er.
Behavioral classi cation is a general method that should be useful in cases where particular user behaviors correspond to a class of interest.
One could also apply these classi- cation algorithms to other Web classi cation tasks, such as detecting detrimental content (weapons, alcohol, drugs), commercial intent, dominant location of queries, and others.
