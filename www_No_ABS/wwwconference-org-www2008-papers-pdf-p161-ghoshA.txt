Much of the work on auctions for online advertising assume that a bidder has an intrinsic value for winning an auction: given that a bidder is declared a winner of an ad Copyright is held by the International World Wide Web Conference Committee (IW3C2).
Distribution of these papers is limited to classroom use, and personal use by others.
Mohammad Mahdian Yahoo!
Research
 Santa Clara, CA 95054 mahdian@yahoo-inc.com slot, he derives some private utility, which is una ected by the number or set of other winners.
However, this is not necessarily true, especially in the context of advertising: advertisers compete for users  attention, and the attention a particular winning advertiser receives clearly depends on the set of all winners.
In this paper, we are interested in the problem of mechanism design in a setting with externali-ties, i.e., when a winner s utility depends on the set of other winners.
The problem of mechanism design with externalities can be motivated in multiple settings in the context of online advertising, for instance, in the setting of sponsored search (e.g., Google s Adwords or Yahoo! s Search Marketing) or ad placement on content pages (e.g., Google s Adsense or Yahoo! s Content Match).
In this paper we focus on a setting commonly known as online lead generation, or the pay-per-lead model [11].
The objective of online lead generation is to sell credible leads (in the form of personal information of a potential customer) to companies, or advertisers, interested in such leads.
The advertisers then contact the potential customer directly to o er quotes and information about their service.
This model of advertising is currently most popular among  nancial  rms that o er mortgages, insurance companies, auto dealers interested in potential buyers of new cars, and the distance education industry1.
According to the PricewaterhouseCoopers  IAB Revenue Report for year 2006 [12], lead generation revenues accounted for 8 percent of the 2006 full year revenues or $1.3 billion, up from the
 having been the initial motivation of the present work, focusing on the lead generation model has the advantage that it simpli es the discussion of externalities by abstracting away aspects of the problem relating to the speci c placement of the ads on a page.
We will brie y discuss such issues and their interplay with the externality problem at the end of this paper.
The main problem faced by a lead generation company that has acquired a lead is the following tradeo : if the lead is sent to fewer advertisers, the value to each advertiser will be higher since they are competing with fewer other advertisers for the potential customer.
Further, the value to an advertiser might also depend speci cally on which other advertisers obtain the lead, not just how many others: a
 work of  lead generation  is online dating services.
However, since currently the standard in this industry is based on  at-fee subscription and not pay-for-performance, our models might not be directly applicable.
very likely to o er a better deal to the user decreases the value of the lead much more than a less competitive advertiser, or an advertiser who is o ering a di erent service (e.g., a Toyota dealer might decrease the value to a Honda dealer more than a Ford dealer does).
In any case, the utility to an advertiser who buys a lead depends on other buyers of the same lead.
In addition, typically a lead can only be sold to a limited number of advertisers, as speci ed in the privacy policy of the website [11].
In the most general and abstract form, the problem we are interested in is the following: there are n bidders, each with a utility function ui : 2{1,...,n} 7  R, where ui(S) is the utility that bidder i derives when the set of winners is S   {1, .
.
.
, n}.
It is reasonable to assume that ui(S) is zero if i /  S. The problem is to design an incentive compatible mechanism to maximize welfare.
Such a mechanism would select the subset of bidders that maximizes
 i S v(S) = ui(S).
VCG payments can be used to induce truthful reporting if the optimal subset can be found: every bidder i is charged the di erence between the value of the optimal set when i is removed from the set of bidders and v(S)   ui(S), which is the value derived by all remaining winners in the current solution.
Since specifying a utility function of the form above takes exponential space in the number of bidders, we are interested in investigating models for utility functions that are both realistic in the context of online advertising, and also allow compact representation.
We build such a model by looking at the choice problem from the advertising audience s perspective.
Our model assumes that customers have (possibly interdependent) valuations for di erent advertisers (these valuations might be a function of the quote the customer receives from the advertisers in a lead generation business, or the perception of the quality of the product offered by the advertiser) and also for an outside option.
When presented with a number of choices, they pick the advertiser whom they have the highest valuation for, or no advertiser if their valuation of the outside option is greater than the valuations of all advertisers presented in the set.
This model is de ned in more detail in the next section.
We will study the computational complexity of the winner determination problem in this model, and prove that in the most general case, if the distributions of the values are given explicitly, the winner determination problem is hard to approximate within a constant factor.
On the other hand, we will give an approximation algorithm that solves this problem within a factor that is logarithmic in the ratio of the maximum to the minimum bid.
Furthermore, in several special cases, most notably in the case that distributions are single-peaked, the winner determination problem can be solved exactly in polynomial time.
We will prove that these algorithms, combined with a VCG-style payment scheme, give rise to dominant-strategy incentive compatible mechanisms.
Finally, we discuss alternative models for externalities, and directions for future work.
Related work.
Auctions with externalities have been studied in the economics literature, the earliest related work being that of Jehiel, Moldovanu and Stacchetti [7], where a loser s value depends on the identity of the winner.
The problem of mechanism design with allocative externalities is also studied by Jehiel and Moldovanu [5], and Jehiel, Moldovanu and Stacchetti [8]; Jehiel and Moldovanu [6] study mechanism design with both allocative and informational externalities.
However, none of these papers address computational issues arising from the mechanism design problem.
To the best of our knowledge, this is the  rst theoretical work that speci cally addresses the problem of externalities in online advertising.
Limited experimental evidence for the hypothesis that the click-through rate of ads depend on surrounding ads is provided in the work of Joachims et al. [9].
In this section, we de ne a model for externalities among advertisers that is the focus of this paper.
Our model is based on the intuition that each advertiser has a private value for capturing the business of the user (the advertising audience).
The user, on the other hand, gets exposed to a number of ads, and chooses at most one of these ads based on her perception of the quality of the advertiser.
For example, in the case of the lead generation business, the user receives quotes from the advertisers who receive the lead, and probably will choose the advertiser who gives her the lowest quote, or none of the advertisers, if she receives a better quote through another medium.
More formally, suppose there are n advertisers numbered 1, .
.
.
, n, each with a private value vi (which is the value ad vertiser i derives when he is chosen by a user).
The quality of advertiser i (from the perspective of the user) is denoted by qi.
Furthermore, let q0 denote the quality of the best outside option.
These quality parameters qi are random variables, drawn from a joint probability distribution Q.
Intuitively, considering qi s as random variables (as opposed to deterministic values) captures the fact that users do not all make the same choices among the advertisers.
Also, in general the qi s need not be independent, since the choices of users are often dictated by the same general principles.
For example, knowing that a user perceives Ford autos as superior to Toy-otas increases the likelihood that she also prefers Chevy to Honda.
When a set S of advertisers is chosen, the user picks the advertiser with the largest quality qi in S, if the quality of this advertiser is greater than that of the outside option.
This advertiser then derives a value of vi; all other advertisers derive a value of 0.
So the expected value when a set S of advertisers is chosen is v(S) = viPr[ j   S   {0} : qi   qj],
 i S where the probability is over a random draw of (q0, q1, .
.
.
, qn) from Q.
For simplicity, we assume that qi s are always distinct, and therefore we do not need to specify how ties are broken.
The winner determination problem in this model is to choose a set S of at most a given number k of advertisers to maximize v(S).
Note that v(S) is not monotone in S: adding an advertiser with low value but high quality can actually cause a net decrease in the value of the set.
The winner determination problem can be written as the follow-
maximizexi s.t.
Pn Pn i=1 vixiPr[  j = 0, .
.
.
, n : qi   qjxj] i=1 xi   k, xi   {0, 1}, x0 = 1.
i = 1, .
.
.
, n, (1) Before we can start talking about the computational complexity of the winner determination problem, we need to In particular, there specify how the input is represented.
are many ways the distribution Q can be represented.
In this paper, we mainly consider an explicit representation of Q, i.e., when the distribution has a  nite support and all elements of the support of this distribution are listed as part of the input (as explained below).
This is perhaps the simplest way to represent the distribution, and our hardness result in the next section (showing that the winner determination problem is hard to approximate for this representation) clearly carries over to stronger representations, such as models where Q is given by an oracle.
Observe that in our model, the actual values of the quality parameters qi do not matter; all that matters is the relative ordering of the qualities.
Speci cally, the only real information we use from the distribution is the probability of each ranking of the bidders  qualities and the quality of the outside option.
In other words, we can assume that there are a  nite number of di erent user types, and each user type j is given by a real number which indicates the probability that a random user is of type j, and a permutation of the n + 1 options {0, .
.
.
, n} (with 0 representing the outside option and 1, .
.
.
, n representing the advertisers).
Note that the ordering of advertisers that occur after the outside option in a permutation is irrelevant, and therefore can be omitted.
To summarize, the externality problem with an explicitly given distribution can be formulated as follows.
Winner Determination Problem with Externalities: Input: - Integers n, m, and k, - a value vi for each i = 1, .
.
.
, n, - a probability pj for each j = 1, .
.
.
, m withPm j=1 pj = 1, and - a permutation  j of {0, .
.
.
, n} for each j = 1, .
.
.
, m.
Output: A subset S of {1, .
.
.
, n} with |S|   k that maximizes v(S) := pj viI(  l   S   {0} :  j(i)    j(l)), mX j=1
 i S where I(  l   S   {0} :  j(i)    j(l)) denotes the indicator variable for the event that i is the highest element in permutation  j of all members of S   0.
In the next section, we will show a strong hardness result for the above problem.
In Section 4 we will give an approximation algorithm, and in Section 5 we prove that the problem is solvable in polynomial time if preferences  j are single-peaked, and also in another special case of the problem with implicitly given distributions.
We show that the winner determination problem de ned in the previous section, even with no cardinality constraints (i.e., k = n), is NP-hard, and hard to approximate.
The proof is based on a reduction from the independent set problem in graphs.
Recall that in the independent set problem, we are given a graph G and the objective is to  nd a maximum-cardinality subset S of vertices with no edge between any two vertices of S. H astad [14] proved that this problem cannot be approximated in polynomial time to within a factor of n1  for any  > 0, unless NP = ZPP.
Theorem 1.
The winner determination problem with ex-ternalities is hard to approximate in polynomial time within a factor n1  for any  > 0, unless NP = ZPP.
Pn Proof.
Given an instance G of the independent set problem, we map it to an instance of the winner determination problem with externalities as follows.
Let n = m = k = |V (G)|, and assume the nodes in the graph G are numbered
 vertiser i with value vi = Li, where L is a su ciently large number (as we will see, it is enough to take L = n2).
Also, for each node i, we create a user type i with probability pi = c/Li, where c is a normalizing constant that ensures i=1 pi = 1.
The permutation  i corresponding to user type i is con-:= {j : j < i and ij   E(G)}   structed as follows.
Let N i denote the set of neighbors of i in G that have an index   less than i.
The permutation  i ranks the elements of N i in an arbitrary order at the top, followed by i, followed by the outside option 0 (recall that the ordering of elements after the outside option is not important).
This completes the de nition of the instance of the winner determination problem.
Now, we show that if the size of the maximum independent set in the graph G is t, then the value of the solution of the above instance of the winner determination problem is between ct and ct + cn L .
Let I denote the maximum independent set of G (|I| = t).
First, we prove that the value of the solution to the winner determination problem is at least ct. To show this, it is enough to take S = I.
Since I is an independent set, for every i   S, the  rst element of  i that is in S is i.
Therefore, for every such i, users of type i contribute a total value of pi   vi = c to the objective function.
Hence, the value of the set S is precisely v(S) = ct.
Next, we prove that no set S in the instance of the winner determination problem has value more than ct + cn L .
To show this, take the optimal set S in the winner determination problem, and de ne an independent set I in the graph as follows: start with I =  , and process vertices of S in increasing order of their index.
For every vertex i   S, if no neighbor of i is added to I so far, add i to I.
Clearly, at the end of this procedure, we obtain an independent set I of G.
We show that the value of the set S is at most c|I| + cn L .
To see this, note that for every element i that is in S but not in I, the vertex i must have a neighbor j   S with j < i.
Consider such a j with the smallest index.
By de nition, j appears before i in  i.
Therefore, the contribution of each such user type i to v(S) is at most pivj   c/L.
For every i   I, the contribution of i to v(S) is at most pivi = c.
Summing up these contributions, we obtain v(S)   c|I|+ cn
 Since I is an independent set, we get v(S)   ct + cn

 of the winner determination problem divided by c is within (1   o(1)) of the size the maximum independent set of G.
Thus, by the hardness of the independent set problem [14], the winner determination problem cannot be approximated within a factor of n1  for any  > 0, unless NP = ZPP.
The above theorem rules out the possibility of  nding an algorithm for the winner determination problem with any approximation factor that is a reasonable function of n.
However, note that the instances constructed in the above hardness result contain advertisers whose values di er by a large factor (n2n).
This raises the question of whether one can approximate the winner determination problem within a factor that depends on the spread between the largest and the smallest values.
The answer to this question is indeed positive, as we will see in the next section.
We now present an approximation algorithm for the winner determination problem which can be used to design an incentive compatible mechanism for the auction problem with externalities.
The hardness result in the previous section rules out any approximation that is better than a linear factor in the number of advertisers; our approximation is therefore in terms of the spread of the advertiser values: we show that the winner determination problem can be approximated to within a factor of e2 an upper bound on the ratio between the highest value and the lowest value an advertiser could have.
e 1 (dln Re + 1), where R is We begin with the following lemma, which shows that the problem can be solved approximately when all values are close to each other.
Lemma 1.
The winner determination problem can be ape e 1 R, where R is an upper proximated to within a factor bound on the ratio between the highest value and the lowest value an advertiser could have.
Proof.
First suppose that v1 = .
.
.
= vn, i.e., all advertiser values are equal.
Then the problem of winner determination with externalities is exactly a weighted version of the classical max k-coverage problem [15]: the elements are the m user types with weights pj (j = 1, .
.
.
, m), the sets are the advertisers i = 1, .
.
.
, n, and an advertiser i covers a user type j if i appears in  j before 0, i.e., if user type j prefers i over the outside option.
The greedy approximation algorithm for the maximum k-coverage problem can be easily generalized to solve the weighted version: the algorithm proceeds in iterations, in each iteration picking an advertiser that covers a set of previously uncovered user types of maximum total weight.
It is not hard to see that this algorithm achieves an approximation factor of e/(e 1) for the weighted maximum k-coverage problem [15].
The winner determination problem can be approximated to within the same factor when all values are equal.
If advertisers have unequal values, we can obtain a e e 1 R by simply ignoring the values and solving the factor weighted max-coverage problem.
We will now build on this observation to obtain a randomized algorithm with a ratio that is logarithmic in R. Then we will show how this algorithm can be turned into a monotone algorithm (a property that is needed in order to achieve incentive compatibility), and how it can be derandomized.
For a given subset S   {1, .
.
.
, n}, denote by OP Tk(S) the value of the optimal solution to the weighted max-k-coverage problem restricted to the subset of advertisers S, Pk(S) the value of the solution returned by the greedy algorithm to the weighted max k-coverage problem, and denote by S  k(S) the subset of advertisers from S chosen by the greedy algorithm.
Assume vmin is a known lower bound, and vminR is a known upper bound on the value of an advertiser.
We will show later that our derandomized algorithm works even if we do not know the values of vmin and R. Divide advertisers into buckets 1 through L, where L = dln Re and bucket Bl consists of advertisers with values vi   [el 1vmin, elvmin).
Algorithm A1:   Randomly choose one of the buckets B1, .
.
.
, BL, say Bl.
  Solve the weighted max k-coverage problem with input k(Bl) be the set of advertisers returned by the Bl; let S  greedy algorithm.
  Return S  k(Bl) as the set of winners.
Theorem 2.
Algorithm A1 approximates the winner determination problem to within a factor of e2 e 1dln Re.
Proof.
Let SOL1 denote the expected welfare from the solution chosen by the above algorithm:
 l=1 vminel 1Pk(Bl),

 (2) where Pk(Bl) is the weight of the solution chosen by the greedy algorithm for max k-coverage, with input restricted to the set of advertisers with values in [el 1vmin, elvmin], as de ned before.
The welfare from the optimal set of advertisers for the winner determination problem SOP T is {j: i0 SOP T  {0},  j (i) j (i0)} pj is the total weight of the permutations where i is ranked above all other elements in SOP T and the outside option.
Since Pk(Bl) is the solution returned by the greedy algorithm for the maximum k-coverage problem restricted to advertisers in Bl, and SOP T   Bl is a solution for this problem of value at leastP P (i, SOP T ), we have
 i SOP T  Bl i SOP T  Bl P (i, SOP T )   e e   1 Pk(Bl).
Combining (2) and (3) with this, we get OP T   e2L e   1 i.e., an approximation factor of e2
 e 1dln Re.
i SOP T



 where P (i, SOP T ) =P l=1 l=1 = viP (i, SOP T )
 vminel X i SOP T  Bl i SOP T  Bl viP (i, SOP T ) P (i, SOP T ), (3)
 Tardos [1]) that in a setting with one-dimensional types, in order to design an incentive compatible mechanism, one needs an allocation algorithm that is monotone: the probability of winning should not decrease if an advertiser s value increases.
The above algorithm does not have this property: for example, if advertiser i is the only advertiser in an interval Bl, she wins with probability 1/L independent of her position in the permutations, whereas she may not be chosen as a winner in her new bucket if her value increases.
The following modi cation ensures that the allocation algorithm is monotone.
De ne the (overlapping) buckets Bl = {i : vi   vminel 1}, i.e., Bl = Bl .
.
. BL is the union of the buckets Bj from l to L. Denote by Pk(Bl) the value of the greedy solution of the weighted max k-coverage problem restricted to advertisers in Bl.
Algorithm A2:   Randomly choose one of the buckets B1, .
.
.
, BL, say Bl.
  Solve the weighted max-k-coverage on Bl using the k(Bl) be the set of advertisers greedy algorithm; let S  returned by the greedy algorithm.
k(Bl) as the set of winners.
  Return S  Theorem 3.
The algorithm A2 is monotone, and approximates the winner determination problem to within a factor e 1dln Re.
of Proof.
The proof of the approximation ratio follows sim-e2 ply from Theorem 2 and noting that Pk(Bl)   Pk(Bl), since Bl   Bl.
To prove the monotonicity, note that for any bucket Bl and any advertiser i, if this advertiser is in Bl, after increasing the value vi, she still remains in this bucket.
Therefore, conditioned on any value of l, increasing vi (while holding everything else constant) cannot remove i from Bl and therefore cannot decrease i s chance for being included in the solution.
Finally, we show that our algorithm can be derandom-ized while maintaining the monotonicity property.
The idea of derandomization is easy: instead of picking a random bucket, check all buckets and pick one that gives the highest value.
However, one needs to be careful as this transformation can sometimes turn a monotone algorithm into a non-monotone one.
In our case, we can use properties of the greedy maximum k-coverage algorithm to prove that the algorithm remains monotone.
In addition to decreasing uncertainty, one advantage of the derandomized algorithm is that it can be implemented without knowledge of the values of vmin or even R.2 In order
 tion, having a prior knowledge of vmin and R is not important, since these values can be computed from the input.
However, doing so can violate the monotonicity property; for example, if the advertiser that has the minimum vi increases her value, this changes the structure of the buckets and could result in decreasing her chance of getting selected.
to do this, for every integer l, we de ne the bucket Bl as the set of advertisers of value at least el (Bl = {i : vi   el}).
By the de nition of R, there are at most dln Re + 1 nonempty distinct buckets.
We can now de ne the deterministic algorithm as follows: Algorithm A3:   Run the greedy algorithm for the max-k-coverage problem on the buckets Bl for all l.
  Choose bucket Bl  such that   l = arg max Bl v12l 1Pk(Bl).
  Return S  k(Bl  ) as the set of winners.
Theorem 4.
The algorithm A3 is monotone, and approximates the winner determination problem to within a factor e 1 (dln Re + 1), where R is an upper bound on the ratio of between the highest value and the lowest value an advertiser could have.
e2 i   [el+ i > vi is such that v+ Proof.
The approximation ratio follows from Theorem 3 and the fact that the maximum of a set of numbers is not less than their average.
We now prove that the algorithm A3 is montone.
Suppose that bidder i is a winner, and has value vi   [el, el+1), i.e., i is in bucket Bl and every bucket before that.
Since she is a winner, ejPk(Bj) is maximized for some j = l    l. Suppose v+ , el++1).
We need to show that after increasing i s value to v+ i , i is still a winner.
Note that P (Bl0 ) is unchanged for all l0   l, since Bl0 is unchanged for these sets, and the values of bidders in Bl0 do not a ect the value of P (Bl0 ), or the set of bidders corresponding to P (Bl0 ).
For the sets Bl0 with l < l0   l+, the only addition is the bidder i.
Since the algorithm used to compute P (Bl0 ) is the deterministic greedy algorithm for weighted max-k coverage [15], P (Bl0 ) changes only if the algorithm chooses i in the winning set.
Thus if P (Bl0 )   P (Bl  ), i is chosen as a winner in Bl0 .
Therefore, the allocation algorithm is monotone.
The above theorem, together with the theorem of Archer and Tardos [1] implies that there is a dominant-strategy incentive-compatible mechanism for ad auctions with exter-nalities that can approximate the social welfare to within a factor of e2 e 1 (dln Re + 1) of the optimum.
