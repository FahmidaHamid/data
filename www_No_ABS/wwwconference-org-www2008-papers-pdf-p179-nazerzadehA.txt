Currently, the main two charging models in the online advertising industry are cost-per-impression (CPM) and cost-per-click (CPC).
In the CPM model, the advertisers pay the publisher for the impression of their ads.
CPM is commonly used in traditional media (e.g.
magazines and television) or banner advertising and is more suitable when the goal of the advertiser is to increase brand awareness.
A more attractive and more popular charging model in online advertising is the CPC model in which the advertisers pay the publisher only when a user clicks on their ads.
In the last few years, there has been a tremendous shift towards the CPC charging model.
CPC is adopted by search engines Copyright is held by the International World Wide Web Conference Committee (IW3C2).
Distribution of these papers is limited to classroom use, and personal use by others.
such as Google or Yahoo!
for the placement of ads next to search results (also known as sponsored search) and on the website of third-party publishers.
In this paper we will focus on another natural and widely advocated charging scheme known as the Cost-Per-Action or Cost-Per-Acquisition (CPA) model.
In this model, instead of paying per click, the advertiser pays only when a user takes a speci c action (e.g.
 lls out a form) or completes a transaction.
Recently, several companies like Google, eBay, Amazon, Advertising.com, and Snap.com have started to sell advertising in this way.
CPA models can be the ideal charging scheme, especially for small and risk averse advertisers.
We will brie y describe a few advantages of this charging scheme over CPC and refer the reader to [18] for a more detailed discussion.
One of the drawbacks of the CPC scheme is that it requires the advertisers to submit their bids before observing the pro ts generated by the users clicking on their ads.
Learning the expected value of each click, and therefore the right bid for the ad, is a prohibitively di cult task especially in the context of sponsored search in which the advertisers typically bid for thousands of keywords.
CPA eliminates this problem because it allows the advertisers to report their payo  after observing the user s action.
Another drawback of the CPC scheme is its vulnerability to click fraud.
Click fraud refers to clicks generated by someone or something with no genuine interest in the advertisement.
Such clicks can be generated by the publisher of the content who has an interest in receiving a share of the revenue of the ad or by a rival who wishes to increase the cost of advertising for the advertiser.
Click fraud is considered by many experts to be the biggest challenge facing the online advertising industry [13, 10, 23, 20].
CPA schemes are less vulnerable because generating a fraudulent action is typically more costly than generating a fraudulent click.
For example, an advertiser can de ne the action as a sale and pay the publisher only when the ad yields pro t1.
On the other hand, there is a fundamental di erence between CPA and CPC charging models.
A click on the ad can be observed by both advertiser and publisher.
However, the action of the user is hidden from the publisher and is observable only by the advertiser.
Although the publisher can require the advertisers to install a software that will monitor actions that take place on their web site, even moderately sophisticated advertisers can  nd a way to manipulate the software if they  nd it su ciently pro table.
enterprize, but not impossible (e.g., using a stolen credit).
porting of the advertisers in the CPA scheme?
Does CPA create an incentive for the advertisers to misreport the number of actions or their payo s for the actions?
The main result of this paper is to give a negative answer to these questions.
We design a mechanism that, asymptotically and under reasonable assumptions, removes the incentives of the advertisers to misreport their payo s.
At the same time, our mechanism has the same asymptotic e ciency and hence revenue as the currently used CPC mechanisms.
We will use techniques in learning and mechanism design to obtain this result.
In the next section, we will formally describe our model in mechanism design terminology (see [21].)
We will refer to advertisers as agents and to the impression of an ad as an item.
For simplicity of exposition only, we assume only one advertisement slot per page.
In section 6 we outline how to extend our results to the case where more than one advertisement can be displayed in each page.
Although our work is essentially motivated by online advertising, we believe that the application of our mechanism is not limited this domain.
We study the following problem: there are a number of self-interested agents competing for identical items sold repeatedly at times t = 1, 2,    .
At each time t, a mechanism allocates the item to one of the agents.
Agents discover their utility for the good only if it is allocated to them.
If agent i receives the good at time t, she discovers utility uit (denominated in money) for it and reports (not necessarily truthfully) the realized utility to the mechanism.
Then, the mechanism determines how much the agent has to pay for receiving the item.
We allow the utility of an agent to change over time.
For this environment we are interested in auction mechanisms which have the following four properties.
alized utilities.
not too small compared to a second price auction.
an a-priori knowledge of the distribution of uit s.
This feature is motivated by the Wilson doctrine [24] 2.
The precise manner in which these properties are formalized is described in section 2.
We will build our mechanisms on a sampling-based learning algorithm.
The learning algorithm is used to estimate the expected utility of the agents, and consists of two alternating phases: exploration and exploitation.
During an exploration phase, the item is allocated for free to a randomly chosen agent.
During an exploitation phase, the mechanism allocates the item to the agent with the highest estimated expected utility.
After each allocation, the agent who has received the item, discovers her utility and reports it to the mechanism.
Subsequently, the mechanism updates the estimate of utilities and determines the payment.
assumptions.
We characterize a class of learning algorithms that ensure that the corresponding mechanism has the four desired properties.
The main di culty in obtaining this result is the following: since there is uncertainty about the utilities, it is possible that in some periods the item is allocated to an agent who does not have the highest utility in that period.
Hence, the natural second-highest price payment rule would violate individual rationality.
On the other hand, if the mechanism does not charge an agent because her reported utility after the allocation is low, it gives her an incentive to shade her reported utility down.
Our mechanism solves these problems by using an adaptive, cumulative pricing scheme.
We illustrate our results by identifying simple mechanisms that have the desired properties.
We demonstrate these mechanisms for the case in which the uit s are independent and identically-distributed random variables as well as the case where their expected values evolve like independent re ected Brownian motions.
In these cases the mechanism is actually ex-post individually rational.
In our proposed mechanism, the agents do not have to bid for the items.
This is advantageous when the bidders themselves are unaware of their utility values.
However, in some cases, an agent might have a better estimate of her utility for the item than our mechanism.
For this reason, we describe how we can slightly modify our mechanism to allow those agents to bid directly.
There is a large number of interesting results on using machine learning techniques in mechanism design.
We only brie y survey the main techniques and ideas and compare them with the approach of this paper.
Most of these works, like [5, 8, ?, 17], consider one-shot games or repeated auctions in which the agents leave the environment after they received an item.
In our setting we may allocates items to an agent several times and hence, we need to consider the strategic behavior of the agents over time.
There is also a big literature on regret minimization or expert algorithms.
In our context, these algorithms are applicable even if the utilities of the agents are changing arbitrarily.
However, the e ciency (and therefore the revenue) of these algorithms is comparable to the mechanisms that allocates the item to the single best agent (expert) (e.g.
see [16]).
Our goal is more ambitious: our e ciency is close the most e cient allocation which might allocate the item to di erent agents at di erent times.
On the other hand, we focus on utility values that change smoothly (e.g.
like a Brownian motion).
In a  nitely repeated version of the environment considered here, Athey and Segal [2] construct an e cient, budget balanced, mechanism where truthful revelation in each period is Bayesian incentive compatible.
Bapna and Weber [4] consider the in nite horizon version of [2] and propose a class of incentive compatible mechanisms based on the Gittins index (see [11]).
Taking a di erent approach, Bergemann and V alim aki [6] and Cavallo et al. [9] propose an incentive compatible generalization of the Vickrey-Clark-Groves mechanism based on the marginal contribution of each agent for this environment.
All these mechanisms need the exact solution of the underlying optimization problems, and therefore require complete information about the prior of the utilities
 the utilities of the agents is not stationary over time.
This violates the last of our desiderata.
For a comprehensive survey in dynamic mechanism design literature see [22].
In the context of sponsored search, attention has focused on ways of estimating click through rates.
Gonen and Pavlov [12] give a mechanism which learns the click-through rates via sampling and show that truthful bidding is, with high probability, a (weakly) dominant strategy in this mechanism.
Along this line, Wortman et al. [25] introduced an exploration scheme for learning advertisers  click-through rates in sponsored search which maintains the equilibrium of the system.
In these works, unlike ours, the distribution of the utilities of agents are assumed to be  xed over time.
Immorlica et al. [14], and later Mahdian and Tomak [18], examine the vulnerability of various procedures for estimating click through, and identify a class of click through learning algorithms in which fraudulent clicks cannot increase the expected payment per impression by more than o(1).
This is under the assumption that the slot of an agent is  xed and the bids of other agents remain constant overtime.
In contrast, we study conditions which guarantee incentive compatibility and e ciency, while the utility of (all) agents may evolve over time.
Suppose n agents competing in each period for a single item.
The item is sold repeatedly at time t = 1, 2,  .
Denote by uit the nonnegative utility of agent i for the item at time t. Utilities are denominated in a common monetary scale.
The utilities of agents may evolve over time according to a stochastic process.
We assume that for i 6= j, the evolution of uit and ujt are independent stochastic processes.
We also de ne  it = E[uit|ui1,  , ui,t 1].
Throughout this paper, expectations are taken conditioned on the complete history.
For simplicity of notation, we now omit those terms that denote such a conditioning.
With notational convention, it follows, for example, that E[uit] = E[ it].
Here the second expectation is taken over all possible histories.
Let M be a mechanism used to sell the items.
At each time, M allocates the item to one of the agents.
Let i be the agent who has received the item at time t. De ne xit to be the variable indicating the allocation of the item to i at time t. After the allocation, agent i observes her utility, uit, and then reports rit, as her utility for the item, to the mechanism.
Note that we do not require an agent to know her utility for possessing the item in advance of acquiring it.
The mechanism then determines the payment, denoted by pit.
Definition 1.
An agent i is truthful if rit = uit, for all time xit = 1, t > 0.
Our goal is to design a mechanism which has the following properties.
We assume n, the number of agents, is constant.
Individual Rationality: A mechanism is ex-post individually rational if for any time T > 0 and any agent 1   i   n, the total payment of agent i does not ex ceed the sum of her reports: TXt=1 xitrit   pit > 0.
M is asymptotically ex-ante individually rational if: lim inf

 TXt=1 xit it   pit]   0.
Incentive Compatibility: This property implies that truthfulness de nes an asymptotic Bayesian Nash equilibrium.
Consider agent i and suppose all agents except i are truthful.
Let Ui(T ) be the expected total pro t of agent i, if agent i is truthful between time 1 and T .
Also, let eUi(T ) be the maximum of expected pro t of agent i under any other strategy.
Asymptotic incentive compatibility requires that eUi(T )   Ui(T ) = o(Ui(T )).
E ciency: An ex-ante e cient mechanism allocates the item to an agent in argmaxi{ it} at each time t (and for each history).
The total social welfare obtained by an ex-ante e cient mechanism up to time T is t=1 maxi{ it}].
Let W (T ) be the expected welfare of mechanism M between time 1 and T , when all agents are truthful, i.e.,

 TXt=1 xit it] nXi=1 Then, M is asymptotically ex-ante e cient if:
 TXt=1 i { it}]   W (T ) = o(W (T )).
max

 We build our mechanism on top of a learning algorithm that estimates the expected utility of the agents.
We refrain from an explicit description of the learning algorithm.
Rather, we describe su cient conditions for a learning algorithm that can be extended to a mechanism with all the properties we seek (see section 3.1).
In section 4 and 5 we give two examples of environments where learning algorithms satisfying these su cient conditions exist.
The mechanism consists of two phases: explore and exploit.
During the explore phase, with probability  (t),   : N   [0, 1], the item is allocated for free to a randomly chosen agent.
During the exploit phase, the mechanism allocates the item to the agent with the highest estimated expected utility.
Afterwards, the agent reports her utility to the mechanism and the mechanism determines the payment.
We  rst formalize our assumptions about the learning algorithm and then we discuss the payment scheme.
The mechanism is given in Figure 1.
The learning algorithm, samples uit s at rate  (t), and based on the history of the reports of agent i, returns an estimate of  it.
Letb it(T ) be the estimate of the algorithm for  it conditional on the history of the reports up to time T .
The history of the reports of agent i up to time T is the sequence of the reported values and times of observation of uit up to but not including time T .
Note that we allow T > t. Thus, information at time T > t can be used to revise an estimate of  it made at some earlier time.
We assume that increasing the number of samples only increases the
 With probability  (t), explore: Uniformly at random, allocate the item to an agent i, 1   i   n.
pit   0 With probability 1    (t), exploit: Randomly allocate the item to an agent i   argmaxi{b it(t)}.
pit  Pt 1 k=1 yik min{b k(t),b ik(k)}  Pt 1 k=1 pik rit   the report of agent i.
pjt   0, j 6= i Figure 1: Mechanism M accuracy of the estimations, i.e.
and times T1   T2: for any truthful agent i, (1) In the inequality above, and in the rest of the paper, the E[|b it(T1)    it|]   E[|b it(T2)    it|].
the random choices of the mechanism.
For simplicity of notation, we omit those terms that denote such a conditioning.
To describe the payments recall that  t is the second high-expectations of b it are taken over the evolution of uit s and est  it and letb t(T ) = maxj6=i{b jt(T )}, where i is the agent who received the item at time t. We de ne yit to be the indicator variable of the allocation of the item to agent i during an exploit phase.
The payment of agent i at time t, denoted pit, is determined so that: pik = tXk=1 t 1Xk=1 yik min{b k(t),b ik(k)}.
An agent only pays for items that are allocated to her during the exploit phase, up to but not including time t. At time t, the payment of agent i for the item she received at time k < t is min{b k(t),b ik(k)}.
The  rst term is the reminiscence of the second highest pricing scheme.
The second term, under some reasonable conditions, leads to individually rationality.
Since the estimations of learning algorithm for the utilities of agents become more precise over time, our adaptive cumulative payment scheme allows it to correct for errors in the past.
We start with a condition that guarantees asymptotic ex-ante individual rationality and asymptotic incentive compatibility.
Let lit be the last time up to time t that the item is allocated to agent i within an exploit phase.
If i has not been allocated any item yet, lit is de ned to be zero.
Also, truthful up to time t.
de ne  t = maxi{|b it(t)    it|}, assuming all agents were Theorem 1.
If for the learning algorithm, for all 1   i   n, and T > 0: (C1) E[max1 t T{ it} +PT t=1  (t) it]) then mechanism M is asymptotically ex-ante individually rational and incentive compatible.
t=1  t] = o(E[PT We outline the proof  rst.
As we prove in Lemma 2, by condition (C1), the expected pro t of a truthful agent up to time T is at least ( 1 t=1  (t) it].
Also, the expected total error in the estimates of the payments up t=1  t]).
We prove that the total utility an agent could obtain by deviating from the truthful strategy, between time 1 and T , is bounded by t=1  t]).
Hence, the claim follows n   o(1))E[PT to time T is bounded by O(E[PT O(max1 t T{ it} + E[PT Similar to other applications of learning algorithms, we can observe a natural trade-o  between exploitation and exploration rates in our context: higher exploration rates lead to more accurate estimates of the utilities of the agents, at the cost of e ciency.
Condition (C1) provides us with a lower bound on the exploration rate.
by condition (C1).
Lemma 2.
If condition (C1) holds, then the expected pro t of a truthful agent i up to time T , Ui(T ), is at least: (
 n   o(1))E[ TXt=1  (t) it].
Proof.
The items that agent i receives during the explore phase are free.
The expected total utility of agent i from these items up to time T is 1 t=1  (t) it].
Let CT = {t < liT|yit = 1, if i is truthful} be the subset of periods that agent i is charged for the item she received within the period.
n E[PT Ui(T ) = E[ xituit   pit] TXt=1 xituit] + E[Xt CT = E[Xt / CT TXt=1 +E[Xt CT  (t) it]  
 n
 uit   pit] ( it   min{b t(T ),b it(t)})] (2)
 E[( it   min{b t(T ),b it(t)})I(t   CT )]   E[( it  b it(t))I(t   CT )]    E[| it  b it(t)|]    E[ t] Substituting into inequality (2), by condition (C1): Ui(T )   =
 n
 n

 TXt=1 TXt=1  (t) it]   E[  t] TXt=1 TXt=1  (t) it]   o(E[  (t) it]) (3) Lemma 2 yields asymptotic ex-Proof of Theorem 1: ante individual rationality.
We show that truthfulness is asymptotically a best response when all other agents are truthful.
Fix an agent i intending to deviate and let S be the strategy she deviates to.
Fixing the evolution of all ujt s, 1   j   n, and all random choices of the mechanism, i.e. the steps in the explore phase and the randomly chosen agents, let DT be the times that i receives the item under strategy S during the exploit phase before time liT , i.e.
DT = {t < liT|yit = 1, if the strategy of i is S}.
Similarly, let CT = {t < liT|yit = 1, if i is truthful}.
Also, letb 0it, and b 0t correspond to the estimates of the mechanism when the strategy of i is S. We  rst bound the expected pro t of i, under strategy S, during the exploit phase:
 TXt=1 yituit   pit] E[max   E[Xt DT t T { it}] = E[ Xt DT \CT E[ Xt DT  CT t T { it}]  it   min{b 0t(T ),b 0it(t)}] +  it   min{b 0t(T ),b 0it(t)}] +  it   min{b 0t(T ),b 0it(t)}] + E[max (4) (5) The term E[maxt T{ it}] bounds the outstanding payment of agent i; recall that the agent has not paid for the last allocated item.
than O( t): For time t   1, we examine two cases:
 crease the  current price , min{b 0t(T ),b 0it(t)}, by more min{b 0t(T ),b 0it(t)}  min{b 0t(T ),b 0t(t)}    t   max{ t  b 0t(T ),  t  b 0t(t)}    t   ( t  b 0t(T ))+   ( t  b 0t(t))+ Recall thatb 0t(T ) = maxj6=i{b 0it(T )} and all other agent are truthful.
Hence, taking expectation from both where (z)+ = max{z, 0}.
sides, by (1): (6)   E[ tI(t   DT   CT )]   E[2 t]
 E[min{b 0t(T ),b 0it(t)}I(t   DT   CT )]   E[( t   ( t  b 0t(T ))+   ( t  b 0t(t))+)I(t   DT   CT )] pro t ,  it   min{b 0t(T ),b 0it(t)}, by more than O( t):  it   min{b 0t(T ),b 0it(t)}    it   min{b 0t(T ),b 0t(t)}   ( it  b it(t)) + (b it(t)    t) + max{ t  b 0t(T ),  t  b 0t(t)}   2 t + ( t  b 0t(T ))+ +( t  b 0t(t))+ E[( it   min{b 0t(T ),b 0it(t)})I(t   DT   CT )]   E[2 tI(t   DT   CT )] + Taking expectation from both sides, by (1): E[(( t  b 0t(T ))+ + ( t  b 0t(t))+)I(t   DT   CT )]   E[4 t] (7) Substituting inequalities (6) and (7) into (5):
 TXt=1 yituit   pit]   E[
 t T { it}]  it    t] TXt=1 +E[ Xt DT  CT TXt=1 E[Xt CT

 t T { it}] +  it    t]   E[ Xt CT \DT (8)  it    t] Substituting into (8): E[ t    it]   E[2 t] For t   CT , since b it(t)  b t(t), we have: TXt=1 yituit   pit]   8E[
 TXt=1 +E[Xt CT  t] + E[max t T { it}]  it    t] With algebraic manipulation, using (1), we get:
 TXt=1 yituit   pit]   O(E[ TXt=1 +E[Xt CT  t] + E[max t T { it}])  it   min{b t(T ),b it(t)}] By condition (C1), we get the inequality below which completes the proof:
 TXt=1 yituit   pit]   o(E[  (t) it]) TXt=1 +E[Xt CT and the last inequality follows by (C1).
The expected utility of the truthful strategy and S during the explore phase  it   min{b t(T ),b it(t)}]
 totically incentive compatible.
In the next theorem we show if the loss in e ciency during exploration asymptotically goes to zero, then by Condition (C1) the mechanism is asymptotically ex-ante e cient.
Theorem 3.
If for the learning algorithm, in addition to (C1), the following condition holds
 t=1  (t) maxi{ it}] = o(E[PT then, M is asymptotically ex-ante e cient.
t=1 maxi{ it}]) expected loss in this case is equal to E[PT Proof.
M may fail to be ex-ante e cient for two reasons.
First one is the loss in welfare during the exploration when the item is allocated randomly to one of advertisers.
The t=1  (t) maxi{ it}].
Another reason is the mistakes during exploitation.
The error in estimation can lead to allocation to an agent who does not value the item the most.
At time t, in the worst case, the item might be allocated to an agent whose expected utility is at most 2 t less than the highest expected utility.
Therefore, the expected e ciency loss during exploration is t=1  t]).
Since, for the expected welfare of M between time 1 and T , denoted by W (T ), we have: bounded by O(E[PT
 TXt=1 max i { it}]   W (T ) TXt=1 But, condition (C1) implies:
 ( t +  (t) max i { it})]) (9)
 TXt=1  t] = o(E[ =  (E[ nXi=1  (t) it}])  (t) max i { it}]) TXt=1 TXt=1 Plugging into (9):
 TXt=1 i { it}]   W (T ) = O(E[ max  (t) max i { it}]) TXt=1 = o(W (T )) The last equality is followed by (C2) and implies asymptotic ex-ante e ciency.
While Condition (C1) gives a lower bound on the exploration rate, Condition (C2) gives an upper bound.
In the next section, we will show with two examples how conditions (C1) and (C2) can be used to adjust the exploration rate of a learning algorithm in order to obtain e ciency and incentive compatibility.
Remark 1.
In Theorem 3 we showed that under some assumptions, the welfare obtained by the mechanism is asymptotically equivalent to e cient mechanism that every time allocates the item to the agent with the highest expected utility.
We can give similar conditions to (C2) to guarantee that the revenue of the mechanism is also asymptotically equal to the revenue of the e cient mechanism that every time charges the winning agent the second highest expected utility.
To avoid repetition, we refrain from explaining this condition in details.
In mechanism M no agent explicitly bids for an item.
Whether an agent receives an item or not depends on the history of their reported utilities and the estimates that M forms from them.
This may be advantageous when the bidders themselves are unaware of what their utilities will be.
However, when agents may posses a better estimate of their utilities we would like to make use of that.
For this reason we describe how to modify M so as to allow agents to bid for an item.
If time t occurs during an exploit phase let Bt be the set of the agents who bid at this time.
The mechanism bids on the behalf of all agent i /  Bt.
Denote by bit the bid of agent i   Bt for the item at time t. The modi cation of M random to one of the agents in arg maxi bit.
sets bit = b it(t), for i /  B.
Then, the item is allocated at ond highest value in A. Letb t(T ) to be equal to maxj6=i bjk.
let A = {bjt|j   Bt}   { jt|, j /  Bt}.
De ne  t as the sec-The payment of agent i will be If i is the agent who received the item at time t, pit   t 1Xk=1 yik min{b k(t), bik}   pik.
t 1Xk=1 To incorporate the fact that bidders can bid for an item, we must modify the de nition of truthfulness.
Definition 2.
Agent i is truthful if: 1. rit = uit, for all time xit = 1, t   1.
Note that item 2 does not require that agent i bid their actual utility only that their bid be closer to the mark than the estimate.
With this modi cation in de nition, Theorems 1 and 3 continue to hold.
In this section, we assume that for each i, uit s are independent and identically-distributed random variables.
For simplicity, we de ne  i = E[uit], t > 0.
Without loss of generality, we also assume 0 <  i   1.
In this environment, the learning algorithm we use is an  greedy algorithm for the multi-armed bandit problem3.
Let Call the mechanism based on this learning algorithm M(iid).
Lemma 4.
If all agents are truthful, then, under M(iid) E[ t] = O(
  t1  ).
nit =Pt 1 k=1 xit.
For    (0, 1), we de ne: xit nit = t 1Xk=1 b it(T ) = ((PT
  (t) = min{1, nt  ln1+ t} k=1 xikrik)/niT , niT > 0 niT = 0
 We show that M(iid), for     1 3 , satis es all the desired properties we discussed in the previous section.
Moreover, it satis es a stronger notion of individual rationality.
M(iid) satis es ex-post individual rationality if for any agent i, and for all T   1: TXt=1 pit   xitrit TXt=1 Theorem 5.
M(iid) is ex-post individually rational.
Also,
 for 0      1 ble and ex-ante e cient.
Proof.
We  rst prove ex-post individual rationality.
It is su cient to prove it only for the periods that agent i has received the item within an exploit phase.
For T , such that yiT = 1, we have: pit = TXt=1   T 1Xt=1 yit min{b t(T ),b it(t)} T 1Xt=1 T 1Xt=1 yitb t(T )   yitb iT (T ) T 1Xt=1   nitb iT (T ) = xitrit The third inequality follows because the item is allocated to i at time T which implies b iT (T )  b t(T ).
We complete the proof by showing that conditions (C1) and (C2) hold.
Note that  i   1.
By lemma 4, for    1

 expected value of the error of these estimates at time t is o(t
 We begin analyzing the mechanism by stating some well-known properties of re ected Brownian motions (see [7]).
Proposition 6.
Let [Wt, t   0] be a re ected Brownian motion with mean zero and variance  2; the re ection barrier is 0.
Assume the value of Wt at time t is equal to y: E[y] =  ( t 2) (12) For T > 0, let z = Wt+T .
For the probability density function of z   y we have: Pr[(z   y)   dx]   r 2 Pr[|z   y|   x]   r 8T  2 E[|z   y|I(|z   y|   x)]   r 8T  2  T  2 e
 x      x2
  x2
 e  x2
 e (13) (14) (15) Corollary 7.
The expected value of the maximum of  iT , 1   i   n, is  ( T ).
Note that in the corollary above n and   are constant.
Now, similar to Lemma 4, we bound E[ T ].
The proof is given in appendix B.
Lemma 8.
Suppose under M(B) all agents are truthful until time T , then, E[ T ] = O(T 
 Now we are ready to prove the main theorem of this sec-tion:
 T 1Xt=1  t] = O(T

  (t) i).
TXt=1 Theorem 9.
M(B) is ex-post individually rational.
Also,
 for 0      1 and ex-ante e cient.
Therefore, (C1) holds.
The welfare of any mechanism between time 1 and T is t=1  t +  t] = o(T ) bounded by T .
For any  > 0, E[1 +PT 1 which implies (C2).
In this section, we assume for each i, 1   i   n, the evolution of  it is a re ected Brownian motion with mean zero and variance  2 i ; the re ection barrier is 0.
In addition, i    2, for some constant  .
we assume  i0 = 0, and  2 The mechanism observes the values of  it at discrete times t = 1, 2,   .
In this environment our learning algorithm estimates the re ected Brownian motion using a mean zero martingale.
We de ne lit is de ned as the last time up to time t that the item is allocated to agent i.
This includes both explore and exploit phases.
If i has not been allocated any item yet, lit is zero.
 (t) = min{1, nt  ln2+2 t} b it(T ) = 8><>: rilit rili,t 1 rili,T t < T t = T t > T (10) (11) Call this mechanism M(B).
For simplicity, we assume that the advertiser reports the exact value of  it.
It is not di cult to verify that the results in this section hold as long as the Proof.
We  rst prove ex-post individual rationality.
It is su cient to prove it only for the periods that agent i has received the item within an exploit phase.
For T , such that yiT = 1, we have: pit = TXt=1     T 1Xt=1 T 1Xt=1 TXt=1 yit min{b t(T ),b it(t)} yitb it(t) = T 1Xt=1 yitrili,t 1 xitrit.
We complete the proof by showing the conditions (C1) and (C2) hold.
By (12), the expected utility of each agent at time t from random exploration is  ( t 2t  ln1+ t) =  (t 2   ln1+ t).
Therefore, the expected utility up to time T from explo-
ration is  (T
 E[max t T { iT } +  t] = O(T 1+ 
 T 1Xt=1 For    1



 are  ( T ).
Therefore, the expected welfare of an e cient
 mechanism between time 1 and T is  (T 1, we have:
  (T




 By condition (C2), M(B) is asymptotically ex-ante e -cient.
To apply this model to sponsored search we treat each item as a bundle of search queries.
Each time step is de ned by the arrival of m queries.
The mechanism allocates all m queries to an advertiser and after that, the advertiser reports the average utility for these queries.
The payment pit is now the price per item, i.e. the advertiser pays mpit for the bundle of queries.
The value of m is chosen such that  it can be estimated with high accuracy.
In this section we discuss some extensions of the mechanisms.
Multiple Slots.
To modify M so that it can accommodate multiple slots we borrow from Gonen and Pavlov [12], who assume there exist a set of conditional distributions which determine the conditional probability that the ad in slot j1 is clicked conditional on the ad in slot j2 being clicked.
During the exploit phase, M allocates the slots to the advertisers with the highest expected utility, and the prices are determined according to Holmstrom s lemma ([19], see also [1]) The estimates of the utilities are updated based on the reports, using the conditional distribution.
Delayed Reports.
In some applications, the value of receiving the item is realized at some later date.
For example, a user clicks on an ad and visits the website of the advertiser.
A couple of days later, she returns to the website and completes a transaction.
It is not di cult to adjust the mechanism to accommodate this setting by allowing the advertiser to report with a delay or change her report later.
Creating Multiple Identities.
When a new advertiser joins the system, in order to learn her utility value our mechanism gives it a few items for free in the explore phase.
Therefore our mechanism is vulnerable to advertisers who can create several identities and join the system.
It is not clear whether creating a new identity is cheap in our context because the tra c generated by advertising should eventually be routed to a legitimate business.
Still, one way to avoid this problem is to charge users without a reliable history using CPC.
Acknowledgment.
We would like to thank Arash Asad-pour, Peter Glynn, Ashish Goel, Ramesh Johari, and Thomas Weber for fruitful discussions.
The second author acknowledges the support from NSF and a gift from Google.
