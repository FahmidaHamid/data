The word  search  in the context of email usually refers to content-based search for messages (or email threads) relevant to a particular query.
Although there has been work on  nding  experts  in an email corpus, no email service or client we are aware of supports such useful queries/tasks like: sent me a message about a week ago?     Who are the people I still need to reply to?     What was the name of the male colleague, who  rst    Which friends have I not written to for a long time?     Sort all my contacts according to the number of mes   Which email threads only involve friends?     Which messages were sent by colleagues in the last sages sent or received.  week exclusively to me?  Copyright is held by the author/owner(s).
   Find  fun  messages sent by a friend.  Our contributions are the following: We show which additional useful information, besides the date and the names and email addresses of the sender and recipients, can be easily and e ciently obtained from email headers for the purpose of answering such questions.
We explain how abstract concepts can be approximately mapped to concrete queries involving the derived information.
Finally, we discuss how our approach can be applied to create new ways to (i) search for email messages, to (ii)  lter email messages and to (iii) improve content-based ranking schemes for email messages.
We have built a fully functional and freely available prototype [5], in the form of a Thunderbird1 extension, which o ers all the mentioned powerful people search capabilities.
There has been work on extracting social networks and social features from email [3, 4].
Although it is also in the scope of  people-centric email analysis , it does not address improved people or email search.
Concerning people search beyond the ordinary, the work on  nding experts [1, 2], using more involved data mining techniques, is also related.
Still, it fails to address any of the example questions given at the beginning.
Xobni [6] builds simple statistics for each user, e.g., number of messages sent and received, which are used to show the distribution of message exchanges over the time of the day.
It also gives for each person a list of related people, based on co-occurrences of people in the list of recipients, which can be easily integrated into our approach.
However, Xobni does not o er any of our novel people or message search capabilities.
In this section we explain how even without any computationally expensive data mining techniques new and powerful email search capabilities can be obtained by extracting useful information from email headers.
A single pass over all the email headers (both sent and received) is used to build compact summaries for each person that the user ever had any incoming or outgoing email communication with.
As of now, we treat each email address as a person.
In particular, we do not address the problem of single persons using several addresses or a single email alias being used by several people.
1http://www.mozilla.com/thunderbird/ the speci ed  from  email address, is used to detect if a certain message was sent to or from the user.
If the user puts herself on CC, then she is assumed to be the sender and she is removed from the list of recipients.
In addition, we also use the  from  email address provided to detect the domain of a user whenever she does not use a free email provider like gmail, yahoo, or hotmail.
This is in particular helpful since it allows for identifying colleagues, i.e., people within the same domain, ignoring free email providers.
For each person we compute a pro le including the following data  elds: the number of messages sent to/received from, the date of the  rst/last message sent to/received, whether a free email provider is used (using a list of the most common such services), whether emails are sent to a colleague or not, and whether the last message sent to/received had a single recipient.
Similar  elds such as the number of people involved or if there are any attachments can be computed at the same time for each email thread.
All these  elds are easy to update incrementally, when new messages arrive.
In addition to these summaries which are directly generated from the message headers, we use as an additional information source a name directory that allows us to  lter email contacts based on the gender.
Overall, it is su cient to store about a dozen  elds for each person or email thread.
Concepts such as  a person I need to reply to  can be approximated fairly well by the following  lter: (i) a person with a non-free email provider (otherwise it is most probably just a friend), (ii) where the last message was sent by the person (otherwise I have replied already), (iii) with whom I have had at least 1 full message exchange (otherwise the person might just be a pseudo-account, to whom one cannot even write).
Similarly, adequate approximations for concepts such as  friend  or even  ex-boy/girl-friend  can be found.
The same approach also works for messages where, e.g., a  fun  message was probably sent to various people, including several with nonprofessional email addresses, and it contains an attachment.
Currently, our prede ned  translations  were chosen manually but, given a labeled training set, they could be tuned with standard machine learning techniques.
Such  translations  are only required for ease of use, as the average user cannot be expected to enter (and understand) the corresponding low-level query, involving several data  elds.
In this section we explain how the extracted information can be used to o er new search features, both for people search and for message search.
Standard people search capabilities only allow the user to search for people (or rather their email address) by name.
If you do not know a person s name or want to sort your contacts by certain characteristics (number of messages sent or received, gender, colleague, ...), then no system we are aware of lets you to do this.
Following the approach from Section 3, we built a fully functional prototype [5], which computes per-person pro les and supports queries on this data.
Standard email retrieval systems only rank the results either by content-based (keyword) relevance or by meta information such as the date of the message.
The search scope can be restricted by requiring a particular sender, but a user cannot limit her search to messages sent by a colleague, sent to more than 4 people, or sent by a female person.
The information discussed in Section 3 makes this possible.
It can be used as a  hard  search criterion, but it can also be used di erently: First, it can be used to allow the user to sort the result messages (or all messages) according to the  elds, such as gender of the sender or the number of recipients for a message.
And second, it can be incorporated in the ranking itself, e.g., giving a higher relevance score to messages sent by a colleague or sent by someone, whom the user communicates with on a regular basis.
Our current approach uses only information derived from email headers without requiring any full text analysis.
Given su cient computational resources, the precision of approximations of concepts such as  a person I need to reply to  or  a fun message  could be improved further by analyzing the message body.
For instance, if a message merely consists of  Ok.  or  Thanks.  it does not necessitate a response and if contains a link to a web site such as Youtube it is more likely to be a  fun  message.
As a  rst step in this direction, we plan to use the  subject  header to improve the detection of friends, even among colleagues, as they are more likely to send party invitations or to forward repeatedly forwarded messages.
Given that email is clearly the current medium of communication, it is surprising how many  obvious  improvements to the way we handle our email communication are possible.
Especially in the setting of a modern work environment, any tool which can give even a small productivity gain or which allows people to better understand their own email patterns, should be expected to have a signi cant impact.
We hope that we could contribute to this development by pointing out promising directions for improvements.
