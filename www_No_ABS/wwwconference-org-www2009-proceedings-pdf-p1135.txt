The increasing complexity of today s business world is being reflected in today s business applications.
Today, there is a need for a system where business and domain experts can collaborate to create these complex systems.
With the prevalence of tools like blogs and wikis, we now have the ability to create a platform where multiple stakeholders can collaborate over a system s design.
These tools however lack the capability of capturing the inherent intelligence within a system.
Hence, what is required is a system which not only provides a collaborative platform but also captures the inherent intelligence.
In this paper we propose a system built on semantic technologies, which is used to capture the process definitions of a system and translate them into programming constructs.
Every business modeling process requires business analysts and domain experts collaborate in designing a system which caters to a set of specifications.
These specifications are captured in a requirements document and verified by various stakeholders.
Traditionally the system requirements document has been a static document capturing the requirements of a client or a customer.
This document is verified based on set functional and systematical Copyright is held by the author/owner(s).
parameters.
The process of defining requirements and its verification operates in a feedback loop till a final design document is arrived at.
By using semantic wiki and business process modeling, we intend to reduce the number of iterations in the process of creating the final design document.
Our system also goes a step further by generating the actual code which will make up the business objects of the system.
According to Decker [1], wikis offer a flexible platform for asynchronous collaborative support of active stakeholder participation in requirements engineering and it also makes it easy to integrate different stakeholders  views.
The need to capture semantics is also brought out in this approach.
Lohmann et al. [2] use the SoftWiki Ontology for Requirements Engineering (SWORE) for the semantics but the semantics are not from business perspective.
There are other efforts like the Semantic Business Processes Management Working Group [3] whose major objective is the mechanization of Business Process Management using Semantic Web techniques and especially Semantic Web Services.
Our approach proposes the use of Semantic Web techniques by the Business expert/analyst at the system requirements definition phase itself.
We have also used Semantic MediaWiki [4] to prototype our concept.
With the widespread use of Web 2.0 tools like Blogs and Wikis, knowledge workers are well equipped to leverage these tools as part of their daily work.
We have built our collaborative business modeling system not only on Web 2.0 technologies but have also incorporated semantic technologies and web services.
We hope to position this system as a valuable tool for the enterprise knowledge worker.
This system is primarily aimed at business domain experts and business analysts the requirements of a business application and then translating these requirements into code.
Collaborative Business Modeling is the process by which the various stakeholders involved in the development of a system use a single business process development platform to design the system.
The modeling process can be defined as such.
The collaborative modeling process consists of the following steps:
 for capturing Requirements document using natural the System language wiki Requirements document using semantic wiki constructs.
to RDF.
All
 exported the processes, entities and relationships are exported as RDF files.
These RDF files are then converted to BPEL using a RDF to BPEL translator which we have developed.
processes are linked together to define the complete system.
BPMN modeler.
The final step is to pass the BPEL to a BPEL engine for generating the interface definition code.
An example in the form of an enterprise travel request application captured on Semantic Wiki is shown in Fig.1 and Fig.2 shows the semantic constructs of this system.
Figure 1 Semantic Wiki capturing requirements Figure 2 Semantic Wiki constructs The semantic markup is converted to RDF by the Semantic Wiki.
The RDF generated by the Semantic Wiki is then converted to BPEL.
This is done by the RDF to BPEL translator.
The translator parses the RDF to create a parse tree and a lookup table.
Standard schematics use a static global lookup table whereas datatypes and processes require a dynamic lookup table.
RDF Datatypes are encapsulated by the RDF properties and when converted they are transformed into BPEL partnerLinks and processes.
Sample BPEL obtained from Eclipse BPEL is shown in Fig. 3 for the business system described earlier.
The BPEL obtained from the translator is verified using a BPM modeler.
The BPMN version of the system is given in Fig.4.
Once the visual verification process is complete, the BPEL is ready to be used by a BPEL-Engine like Microsoft BizTalk Server.
Figure 3 BPEL obtained from RDF to BPEL translator Figure 4 BPMN for sample scenario

 This paper describes a system which is used for collaborative BPM of complex enterprise applications.
By integrating business process tools and semantic intelligence into Web 2.0 applications we are able to capture business requirements, enhance it with intelligence and transform into it programmable business logic.
