Submit a query  John Smith  to Google, and the top 100 returned Web pages may refer to at least 10 namesakes.
One major challenge is how to locate all the information about a speci c  John Smith  quickly.
An ideal Web people search engine would return a list of clustered pages, and each of these clusters pertains to one speci c  John Smith .
Then the user might select the target  John Smith  and directly access all his relevant information.
However, most popular search engines leave this di cult task to users.
Various approaches have been proposed to address Web people search and related challenges, including Vector Space Model for entity coreferencing, and clustering techniques in Web people name resolution [3].
There are also a few commercial people search engines including Wink (www.wink.com) and Spock (www.spock.com).
Nevertheless, the increasing growth of Internet makes people search a big challenge.
We have observed that people tag information, such as locations and email addresses, appears to be informative, and a combination of such tags can almost identify a unique target people.
Based on this observation, we propose a novel weighted-graph based framework which makes full use of the extracted tag information and can be used to solve the problem of both disambiguating and tagging Web people names.
The contributions of this work include: a) A novel weighted graph representation was proposed to model the relationships between tags; b) An e ective graph clustering algo-Copyright is held by the author/owner(s).
rithm was devised to disambiguate and tag people names; c) An extensive performance study was conducted, which shows that the proposed framework achieves much better performance than previous approaches.
In the rest of the work, we outline our framework in Section 2, evaluate it in Section 3, and conclude this paper in Section 4.
Given a people name as query, let document corpus D = {d1, d2, .
.
.
, dk} be the top k returned results from a search engine.
After preprocessing, we extract seven types of tags T = {people name, organization, location, email address, phone number, date, occupation} from chunk windows around the query name in each cleaned document d   D. A =
 i=1 Ti, is a union of seven tag sets where Ti contains the non-repetitive tags with the type ti   T .
Regarding a people name, the proposed framework views the tag corpus A as an undirected labeled graph G=(V,E), where the node set V = {v1, v2, .
.
.}
is a set of unique tags, and each edge (vi, vj )   E represents that the tags corresponding to vi and vj co-occur in a same document in D. We de ne the tags occurring in multiple documents as bridge-tags, and the maximal clique subgraph containing all tags in a single document as a micro-cluster.
Figure 1 shows an example of tag graph, where nodes 3, 4 and 5 each corresponds to a bridge-tag, and there are in total four micro-clusters.
Additionally, we also compute a weight for each node and each edge as follows.
Node Weighting.
The seven types of tags have di er-ent characteristics when surrounding the people name.
For phone number is shared by two namesakes, but two namesakes could be related to the same organization or location.
This observation leads us to assign di erent type weights to nodes with di erent tag types.
Intuitively, an ideal tag type should have the following property that each of its tags is uniquely associated with one namesake, while the more the number of distinct tags of one type for each namesake w.r.t.
a query name, the less this tag type contributes in name disambiguation.
In this work, we assign a type weight to each node according to the following heuristic: the higher the number of unique tags of a certain type, the smaller the weight of each node with this tag type.
Thus, the tag weighting function is de ned as Formula (1).
Each tag type weight in the given corpus D is obtained by dividing the number of all unique tags by the number of unique tags with the corresponding type in T , and then taking the logarithm of that quotient.
Finally, each weight is normalized using the sum of weights of all seven types.
typedweight(v) = log2
 |Ti|
 j=1 log2
 |Tj | (1) Where v denotes any tag with the type ti   T .
|A| is the number of non-repetitive tags in D, and |Ti| is the number of unique tags of the type  ti .
Edge Weighting.
Assuming the conditional independence between any two unique tags, we have the joint probability for two connected nodes v and w, p(vw) = p(v)p(w), then the edge between v and w, is weighted as Formula (2).
edgeweight(v, w) = n
 i=1 pi(v)pi(w) (2) where n is the number of documents in which tags v and w co-occur, pi(v) is the probability distribution obtained from the frequency of tag v divided by the total number of all tag occurrences in the ith document di.
We then develop a two-step clustering approach for the problem of name disambiguation.
The  rst step is to simply identify the complete set of micro-clusters (i.e., the maximal clique subgraphs).
The second step is to use a single link clustering method to further cluster the set of micro-clusters generated from the previous step into a  nal set of macro-clusters.
Following we propose a new method to de ne the similarity between two intermediate clusters.
In our method, each micro-cluster M is stored as a vector of   tags M .
The similarity between any two micro-clusters, ConnectivityStrength, is estimated using cosine distance.
If the ConnectivityStrength is above a prede ned threshold, the tags in these clusters are considered to mention the same people entity and are merged into one cluster.
Di erently from the TF/IDF formula, the weight of any   M is de ned by the following Cohesion formula.
tag v in Cohesion(v,   M ) = typeweight(v)+ P m j=1 typeweight(wj ) m + m
 j=1 edgeweight(v, wj ) (3) Formula (3) computes the importance of tag v to the micro-cluster M .
It consists of three parts, the typeweight of tag v itself, the average typeweight of all the other tags in M , and the sum of edgeweights of all the edges starting from v and ending at other nodes in M .
Compared with TF/IDF, which is a weight derived from term frequency and inverse document frequency, the Cohesion formula considers the connectivity of any bridge-tag with other tags in a micro-cluster based on both type weight and tag frequency, which is more e ective in people disambiguation.
The output of the above clustering algorithm is a set of tag clusters, each of which represents a unique people entity.
Tags with higher Cohesion weight in a cluster are selected to describe the corresponding namesake e ectively.
For demonstration purpose, Table 1 shows the tag clusters generated by our approach for three namesakes regarding the query name of  Marcy Jackson .
Table 1: An Example of Tag Clusters Marcy Jackson1 Marcy Jackson2 Marcy Jackson3 marcy.jackson@montgomerycollege.edu, Maryland Motor Vehicle Administration, Driver Education, Wheel Guidelines, 240-683-2589, .
.
.
Jackkeou@aol.com, Tallahassee, 850-894-0835 editor, Wilton High School, Middlebury College, the World Languages Department, the University of Michigan, Veronica Foster, .
.
.
We evaluated our Cohesion weight based clustering algorithm in comparison with the top 5 best systems in [2].
We used the same dataset as the one in [2].
The measures used in the experiments are FEB (the Extended B-cubed measure based on P recision and Recall) and FP I (the harmonic mean of P urity and Inverse Purity) [1].
The threshold for ConnectivityStrength used in clustering was empirically estimated based on the training data.
The experimental results show that our proposed approach achieves much better overall performance (measured by FEB and FP I ) in name disambiguation than the state-of-the-art systems.
In addition, as shown in Section 2.3, our approach has another advantage, that is, it can output a set of selected tags to describe each cluster (corresponding to a namesake).
This paper proposes a novel weighted-graph based framework that utilizes extracted tags to both disambiguate and tag Web people names.
Specially, we consider type weights for tags and propose a new way (i.e., Cohesion) to measure the importance of a tag in an unsupervised clustering algorithm.
Experimental results show that the proposed approach outperforms all the solutions in a recent Web people search task [2].
In the future, we plan to apply the proposed framework in a real Web people search system.
This work was supported in part by National Natural Science Foundation of China under grant No.
60833003, a research award from Google, Inc., the Guangdong Provincial Government, and State Education Ministry of China under Grant No.
0712226-100097.
