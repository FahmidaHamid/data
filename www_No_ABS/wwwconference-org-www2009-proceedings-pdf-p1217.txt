User created content, in the form of Star ratings, Tags, user Recommendations, user Attention and Text reviews/comments (henceforth, STRAT) is increasingly large & important part of the web [1,2].
Many sites now enable users to create such content and use this to rank content, do collaborative filtering.
Such data is increasingly a critical success factor in the web2.0 business model.
However, the user who creates this content often does not control or benefit from it.
The lack of user s retaining & controlling their content means that if for e.g.
my friends want to know which businesses I have positively reviewed on the web, there is no easy way for them to find this information.
Relying on the experience of one s social network is critical human behavior since trustworthiness of the advisor is a critical factor.
People often use the knowledge from their social networks to assess, interpret & trust comments from others.
We identify the following challenges in capturing and utilizing STRAT content: (1) STRAT content is captured only on websites which are designed to accept such content e.g.
Amazon.com - in other cases, such content is not captured even if the user is willing Copyright is held by the author/owner(s).
to provide it.
(2) When STRAT content is captured by the destination web site, it is owned by the web site and not the user.
This means that the users do not control the content they create thus raising privacy issues.
(3) When STRAT content is captured by the destination web site, it is often statistically aggregated by the destination site and not stored as a uniquely addressable entity.
Furthermore, the destination site often does not maintain the  link  between the individual STRAT content and the user who provided it.
(4) STRAT content rarely contains hyperlinks one consequence of this is that search engines which are strongly dependent on the hyperlink structure are not influenced by this form of user created content.
Our end-goal is to enable users to be control the content they create and support social queries like  what did P say about E , or  which books did my friends review favorably  [1,2].
their social circle.
However none of

 Some web sites enable users to own the content they create for e.g.
Amazon.com allows users to view all reviews she has given, YouTube allows users to create personal playlists & favorites lists.
Social bookmarking sites like digg.com allow users to create & share collections of bookmarks.
Review specific sites (Epinions, Zagat) allow users to give feedback on various products.
Social networking sites enable users to share their reviews with these approaches enable the two important features of our proposed solution: (a) user s control access to their content and (b) opinionated queries over social network.
Our solution to this problem is to enable users to retain with them a  link  to the content they create.
This user-retained link provides a foundation to new ways of navigating user created content - both by the creator and her social network.
In subsequent sections we describe the two key innovations of our solution (a) a new kind of link on the web which goes from a user to the content they have created thus allowing users to retain links to the content they create on different websites & (b) techniques for users to search their social networks using these links.
We introduce a concept called MEB (ME-on-the-weB) that connects the creator with her created content and its subject (what is this content about).
User created content will be one of STRAT type and the subject of the content will typically be a pointer to the website on which the user is giving her comment (typically a URL).
Thus, a MEB conceptually is a tuple of the form {user, subject_url, {John@gmail, Amazon.com/HarryPotter,  This is a good book }.
user_created_
 e.g.
ids then define how the query is routed to the target meb-cloud.
In a peer-to-peer implementation of this search, V will be an email-id.
When the user types in a query (specifies V &  ), an email is sent to the email-ids specified in V. If the query is allowed as per access-policies, the receiving client triggers a search operation over the user s MEB clouds based on  .
Finally, the handler collects the results of the search operation and returns them via the same communication channel on which the request was received (email in this case).
At the queried end, the results may be presented in an appropriate interface.
We note the potential delay incurred as a function of the communication channel used.
As another alternative implementation, V contains a social networking page URL.
In this case, the query will be routed to an application installed on the user s social networking page (e.g.
Facebook Apps).
This application will then carry out the handler functions described above.
Further, we envision combining MEB search results with web search results.
One approach may be to modify the link analysis algorithms on graphs for e.g.
Hubs & Authorities [3] to include the authority conferred to a web page by a MEB-page.
We can transfer the influence of a MEB page based on its creator - the notion here is that the meb pages may have a very low link-based score but the querier may value highly a friend s opinion.
Formally, for each page p in (web+meb) search results, we >< px calculate the following iteratively (a) authority score, = weighted sum of to p: values of pages pointing   x yw q >< Epqq ) ,(:   >< px   z Eqpq (: ),   p: .
What we need now is to determine and (b) hub score, sum y p >< of = values y q >< >< py q >< of pages pointing to q >< p >< = >< py = weighted the social weight matrix W (Z will be the transpose of W).
We have working prototypes to demonstrate MEB creation, sstorage & search over social networks.
We are in the process of implementing using mebs to improve web search.
We would like to thank Geetha Manjunath for her valuable inputs.
