With the  ourish of the Web 2.0 applications, people are getting more and more interactive and sociable.
Finding people with high authority and sociality, referred to as staring people discover, is very important.
Previously, this problem has been separately studied.
For example, expert  nd-ing [1] tries to discover experts on a given query.
While staring people discovery aims to  nd the persons with not only extensive knowledge but also strong social links.
In this paper, we formally de ne the problem of staring people discovery and propose a novel method to solve this problem.
Given the information of a set of persons, our method extract a sub set of these persons which can represent the main information of both the persons and the relationships between them.
We call the extracted persons as staring people.
The problem of staring people discovery is relevant to, but di erent from, graph summarization [4], where the goal is to generate an abstractive representation of the graph data.
Copyright is held by the author/owner(s).
Generally, the social network can be modeled as a graph[2], in which the vertices indicate persons and the edges indicate the relationships between vertices.
In this paper, we take the coauthor graph as an example.
In a coauthor graph, each vertex indicates an author, and each undirected edge indicates two authors collaborated on some papers.
The goal of discovery the  staring authors  is to identify the authors who are the reliable and active researchers in some domain.
That means they should have published many papers and collaborated with many other researchers as well.
Given a domain, we use the number of publications in this domain and the number of all publications as the pro le of an author.
And use the coauthor times as the weight of the edge.
Figure 1 shows an example of a graph in  Data Mining  domain and the staring authors discovered.
The circle nodes indicate the authors and only the red(dark) nodes are staring authors.
The  rst number bound with the author is the number of publication about  Data Mining  and the second is the number of all publications.
Table 1 lists some notations used in this paper.
Figure 1: A coauthor graph and discovery result.
vi   V ei,j E ni ti ci,j Di,j   Table 1: Notations a graph constructed by vertices V and edges E the i-th author the edge between author vi and author vj the number of the author vi s publications in domain the number of all publications of author vi the coauthor times of author vi and author vj the nearest distance of author vi and vj (in spite of c) the ratio of staring authors to all authors xi   {0, 1} whether author vi is a staring author.
 nd that the following rules must be obeyed:
 to a prede ned expectation as possible.
The expectation can be either a  xed number or a ratio of string authors to all authors.
In this paper, we use the second one and denote it as  .
Thus, The nearest distance between the normal authors and the staring authors should be as low as possible.
process.
(a) If ni > nj, then author vi should be selected as a staring author  rst.
(b) If ni = nj and ci > cj, then author vi should be selected as a staring author  rst.
(c) when xi = 1 thus author vi is a staring author, if ci,j > ci,k, then author vj should be selected as a staring author  rst.
The staring author discovery problem can be formalized as

 a programming problem which  nd a bitwise vector (x1, x2,   ) best matching the previous rules.
We can de ne a objective function for each rule, and then  nd the solution which optimizes the objective functions.
The objective functions are: (cid:2) (cid:3) 10|(cid:3) xi=0 minj(cid:2)=i and xj =1 (Di,j   1) i xi    (cid:2)V (cid:2)|  (cid:2)V (cid:2) (cid:3) (cid:4) i [xi = 0] [xi = xk = 1 (cid:3)= xj, ci,j > ci,k]+ min f1(x1, x2,   ) = min f2(xi, x2,   ) = min f3(xi, x2,   ) = (1    ) (cid:4) i(cid:2)=j(cid:2)=k   [ni > nj, xi = 0 (cid:3)= xj] + [ni = nj, ci > cj, xi = 0 (cid:3)= xj] i(cid:2)=j where [true] = 1 and [f alse] = 0 and     [0, 1].
Note that the objective functions are hard to be optimized simultaneously.
We can either use multi-objective programming method or multilevel programming method to break this limitation.
For multi-objective programming (MOP)[3], the objective functions are combined into a criterion function using the weighted sum method.
And then, we aim to optimize the new criterion function.
This solution can be formalized as:     3(cid:4) min i=1  ifi(x1, x2,    ) s.t.
xi   {0, 1}, i = 1, 2,   , (cid:2)V (cid:2) The weight parameters  i can be set empirically or estimated by minimizing the error on a set of training data.
For multilevel programming (MLP)[3], we assume that the objective functions have di erent priorities.
Thus, we can optimize the objective functions one by one according to the priorities.
The MLP solution can be formalized as:     min f1(x1, x2,   ) min f3(x1, x2,    ) s.t.  s.t.      min f2(x1, x2,    ) s.t.
xi   {0, 1}, i = 1, 2,     ,(cid:2)V (cid:2) Both MOP and MLP solutions are di cult to solve precisely.
We propose to use the genetic algorithm to calculate the approximate results.
In the genetic algorithm, the bitwise encoding method is used to encode a solution x = (x1, x2,    ).
To evaluate our proposed methods, we generated 308 graphs according to the papers published from 2003 to 2008 in SIGKDD, SIGMOD, VLDB, etc.
And three Ph.D. students annotated the staring authors in these graphs.
The annotation results were combined by the voting method.
Then, the combined result were used as the benchmark.
Some of the them are publicly available.
1 And we use precision and recall to evaluate the discovery results.
We implemented the proposed method and conducted experiments on the 308 graphs.
50 of them were randomly selected as the training data.
And the parameters   and  i were tuned on the training graphs.
Then, with these parameters, we evaluated both MOP and MLP solutions on the other 258 graphs.
The evaluation results are listed in table 2.
Method

 Table 2: Experimental results Precision Recall Max Min .6312 .9180 .9576 .7471 Average Max Min .7615 .8407 .8731 .9137 .8391 .8931 Average .8032 .8661

 We investigate the problem of  nding the most authoritative and sociable persons in social networks in this paper.
More speci cally, we use the coauthor network as an example, and formalize this problem as two types of goal optimization programming problems.
And we propose using the genetic algorithm to solve them.
Experimental results indicate that our solution can properly identify the most representative and well-known authors out of the coauthor network.
Please mention that the proposed solution is quite general.
It can be applied to many other applications besides staring author discovery, such as staring blogger discovery, excellent survey paper discovery.
