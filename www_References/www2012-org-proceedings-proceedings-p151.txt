[1] S. Agarwal, J. Dunagan, N. Jain, S. Saroiu, and

A. Wolman. Volley: Automated Data Placement for
Geo-Distributed Cloud Services. In NSDI, 2010.

[2] B. Ager, F. Schneider, J. Kim, and A. Feldmann.

Revisiting Cacheability in Times of User Generated
Content. In Global Internet, 2010.

[3] F. Benevenuto, T. Rodrigues, M. Cha, and V. Almeida.

Characterizing User Behavior in Online Social Networks. In
IMC, 2009.

[4] Burstable Billing.

http://en.wikipedia.org/wiki/Burstable billing.

[5] R. Crane and D. Sornette. Robust dynamic classes revealed

by measuring the response function of a social system.
Proceedings of the National Academy of Sciences,
105(41):15649–15653, 2008.

[6] L. Devroye. Non-uniform random variate generation, 1986.
[7] R. I. M. Dunbar. Neocortex Size as a Constraint on Group

Size in Primates. Journal of Human Evolution,
22(6):469–493, 1992.

[8] V. Erramilli, X. Yang, and P. Rodriguez. Explore what-if

scenarios with SONG: Social Network Write Generator.
http://arxiv.org/abs/1102.0699, 2011.

[9] Facebook. Facebook Ranked Second Largest Video Site.

http://vator.tv/news/2010-09-30-facebook-ranked-second-
largest-video-site.

[10] Facebook. Facebook User Statistics.

http://www.facebook.com/press/info.php?statistics.

[11] Forrester Consulting. The Future of Data Center Wide

Area Networking.
http://www.inﬁneta.com/news/news releases/press release:
5585,15851,446.

[12] M. R. Garey and D. S. Johnson. Computers and

Intractability: A Guide to the Theory of NP-Completeness.
W. H. Freeman & Co., New York, NY, USA, 1979.

[13] S. A. Golder, D. M. Wilkinson, and B. A. Huberman.

Rhythms of Social Interaction: Messaging Within a
Massive Online Network. In C&T, 2007.

[14] J. Hamilton. Inter-Datacenter Replication and

Geo-Redundancy.
http://perspectives.mvdirona.com/2010/05/10/
InterDatacenterReplicationGeoRedundancy.aspx.

[15] highscalability.com. YouTube Architecture.

http://highscalability.com/youtube-architecture.

[16] C. Huang, A. Wang, J. Li, and K. W. Ross. Measuring and

Evaluating Large-Scale CDNs. In IMC, 2008.

[17] T. Karagiannis, C. Gkantsidis, D. Narayanan, and

A. Rowstron. Hermes: Clustering Users in Large-Scale
E-mail services. In SoCC, 2010.

[18] N. Kennedy. Facebook’s Photo Storage Rewrite.

http://www.niallkennedy.com/blog/2009/04/facebook-
haystack.html.

[19] D. Knowledge. Facebook data center faq.

http://www.datacenterknowledge.com/the-facebook-data-
center-faq/.

[20] H. Kwak, C. Lee, H. Park, and S. Moon. What is Twitter,

a Social Network or a News Media? In WWW, 2010.

[21] N. Laoutaris, M. Sirivianos, X. Yang, and P. Rodriguez.

Inter-Datacenter Bulk Transfers with NetStitcher. In
SIGCOMM, 2011.

[22] D. Liben-Nowell, J. Novak, R. Kumar, P. Raghavan, and

A. Tomkins. Geographic Routing in Social Networks.
Proceedings of the National Academy of Sciences,
102:11623–11628, 2005.

[23] G. Linden. Marissa Mayer at Web 2.0.

http://glinden.blogspot.com/2006/11/marissa-mayer-at-
web-20.html.

[24] D. S. Menasche, A. A. Rocha, B. Li, D. Towsley, and

A. Venkataramani. Content Availability and Bundling in
Swarming Systems. In CoNEXT, 2009.

[25] R. S. Peterson and E. G. Sirer. AntFarm: Eﬃcient Content

Distribution with Managed Swarms. In NSDI, 2009.

[26] J. M. Pujol, V. Erramilli, and P. Rodriguez. Divide and

Conquer: Partitioning Online Social Networks.
http://arxiv.org/abs/0905.4918, 2009.

[27] J. M. Pujol, V. Erramilli, G. Siganos, X. Yang,

N. Laoutaris, P. Chhabra, and P. Rodriguez. The Little
Engines that Could: Scaling Online Social Networks. In
SIGCOMM, 2010.

[28] N. Sastry, E. Yoneki, and J. Crowcroft. Buzztraq:
Predicting Geographical Access Patterns of Social
Cascades Using Social Networks. In SNS, 2009.

[29] S. Scellato, C. Mascolo, M. Musolesi, and J. Crowcroft.

Track Globally, Deliver Locally: Improving Content
Delivery Networks by Tracking Geographic Social
Cascades. In WWW, 2011.

[30] F. Schneider, A. Feldmann, B. Krishnamurthy, and

W. Willinger. Understanding Online Social Network Usage
from a Network Perspective. In IMC, 2009.

[31] R. W. Sinnott. Virtues of the Haversine. Sky and

Telescope, 68:159, 1984.

[32] R. Torres, A. Finamore, J. Kim, M. Mellia, M. M. Munafo,
and S. Rao. Dissecting Video Server Selection Strategies in
the YouTube CDN. Technical Report TR-ECE-11-02,
Purdue University, 2011.

[33] Twitter. Growing Around the World.

http://blog.twitter.com/2010/04/growing-around-
world.html.

[34] Equinix. http://www.equinix.com/.
[35] Facebook Hosts More Photos than Flickr and Photobucket.

http://www.tothepc.com/archives/facebook-hosts-more-
photos-than-ﬂickr-photobucket/.

[36] M. P. Wittie, V. Pejovic, L. Deek, K. C. Almeroth, and

B. Y. Zhao. Exploiting Locality of Interest in Online Social
Networks. In CoNEXT, 2010.

[37] YouTube CDN Architecture. Private Communication,

Content Delivery Platform, Google.

WWW 2012 – Session: Web PerformanceApril 16–20, 2012, Lyon, France159(cid:8)

APPENDIX
We brieﬂy review the model we use for generating synthetic
reads. Let Xi(t) denote the number of reads produced by
user i, 1 ≤ i ≤ N with N the total number of users at a
∀i Xi(t). The time can vary
time instant t, where X(t) =
from seconds to weeks. The description X(t),∀t gives the
time series aggregated over all users. We need to account for
two diﬀerent time-scales - the ﬁrst time scale spans multiple
hours or days and we note the presence of diurnal trends.
The second time scale spans seconds to a couple of hours
where the mean and the variance are fairly stable. For the
ﬁrst time scale, we can have a model for the mean mt of the
time series that varies with time in a predictable way. For
the second time scale, we can have a stochastic component.
The model then is

√

amtWt

X(t) = mt +

(6)
where mt is function of time and Wt is a stochastic compo-
nent which can be a zero-mean, ﬁnite variance process and
a is a parameter called ‘peakedness’ (with the units:reads-
secs) that accounts for magnitude of ﬂuctuations.

The main method for generating synthetic reads is as fol-
lows: ﬁrst generate mt using Fourier series by ﬁrst extracting
the largest Fourier coeﬃcients of the write time-series, then
add appropriately scaled noise, by estimating a, to the di-
urnal trend at each time bin (in our case, seconds). For our
day and week datasets, we used the top 5 Fourier coeﬃ-
cients to generate the diurnal pattern and used WGN with
an appropriate scale parameter to generate reads. The gen-
erated time series contains the number of reads in a given
time bin.

WWW 2012 – Session: Web PerformanceApril 16–20, 2012, Lyon, France160
