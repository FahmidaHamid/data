
[1] Advanced Network Architecture Group. Spoofer

Project. http://spoofer.csail.mit.edu/index.php,
2012.

[2] Alexa Web Information Company. Top Sites.

http://www.alexa.com/topsites, 2012.

[3] S. Antonatos, P. Akritidis, V. T. Lam, and K. G.

Anagnostakis. Puppetnets: Misusing Web Browsers as
a Distributed Attack Infrastructure.
ACM Transactions on Information and System
Security, 12(2):12:1–12:15, Dec. 2008.

[4] F. Baker and P. Savola. Ingress Filtering for

Multihomed Networks. RFC 3704 (Best Current
Practice), Mar. 2004.

[5] A. Barth. The Web Origin Concept. RFC 6454

(Proposed Standard), Dec. 2011.

[6] S. M. Bellovin. Security Problems in the TCP/IP
Protocol Suite. Computer Communication Review,
19(2):32–48, Apr. 1989.

[7] S. M. Bellovin. A Look Back at ”Security Problems in

the TCP/IP Protocol Suite”. In ACSAC, pages
229–249. IEEE Computer Society, 2004.

[8] R. Beverly, A. Berger, Y. Hyun, and K. C. Claﬀy.

Understanding the Eﬃcacy of Deployed Internet
Source Address Validation Filtering. In A. Feldmann
and L. Mathy, editors, Internet Measurement
Conference, pages 356–369. ACM, 2009.

[9] W. Eddy. TCP SYN Flooding Attacks and Common

Mitigations. RFC 4987 (Informational), Aug. 2007.

[10] T. Ehrenkranz and J. Li. On the State of IP Spooﬁng

Defense. ACM Transactions on Internet Technology
(TOIT), 9(2):6:1–6:29, 2009.

[11] P. Ferguson and D. Senie. Network Ingress Filtering:
Defeating Denial of Service Attacks which Employ IP
Source Address Spooﬁng. RFC 2827, May 2000.

[12] R. Fielding, J. Gettys, J. Mogul, H. Frystyk,

L. Masinter, P. Leach, and T. Berners-Lee. Hypertext
Transfer Protocol – HTTP/1.1. RFC 2616 (Draft
Standard), June 1999. Updated by RFCs 2817, 5785,
6266.

[13] Y. Gilad and A. Herzberg. Oﬀ-Path Attacking the

Web. In USENIX Workshop on Oﬀensive
Technologies, pages 41 – 52, 2012.

[14] F. Gont and S. Bellovin. Defending against Sequence

Number Attacks. RFC 6528 (Proposed Standard),
Feb. 2012.

[15] T. Jim, N. Swamy, and M. Hicks. Defeating Script

Injection Attacks with Browser-Enforced Embedded
Policies. In C. L. Williamson, M. E. Zurko, P. F.
Patel-Schneider, and P. J. Shenoy, editors, Proceedings
of the 16th International Conference on World Wide
Web, pages 601–610. ACM, 2007.

[16] D. Kaminsky. Black Ops of TCP/IP. In Black Hat

conference, Aug. 2011.
http://dankaminsky.com/2011/08/05/bo2k11.

[17] T. Killalea. Recommended Internet Service Provider

Security Services and Procedures. RFC 3013 (Best
Current Practice), Nov. 2000.

[18] A. Klein. Divide and Conquer: HTTP Response

Splitting, Web Cache Poisoning Attacks, and Related
Topics. White Paper, 2004.

[19] A. Klein. Web Cache Poisoning Attacks. In

Encyclopedia of Cryptography and Security (2nd Ed.),
pages 1373–1373. 2011.

[20] klm. Remote Blind TCP/IP Spooﬁng. Phrack

magazine, 2007.

[21] M. Larsen and F. Gont. Recommendations for

Transport-Protocol Port Randomization. RFC 6056
(Best Current Practice), Jan. 2011.

[22] J. Lemon. Resisting SYN Flood DoS Attacks with a
SYN Cache. In S. J. Leﬄer, editor, BSDCon, pages
89–97. USENIX, 2002.

[23] R. T. Morris. A Weakness in the 4.2BSD Unix

TCP/IP Software. Technical report, AT&T Bell
Laboratories, Feb. 1985.

[24] Paul Peteﬁsh, Eric Sheridan, and Dave Wichers.

Cross-Site Request Forgery Prevention Cheat Sheet.
https://www.owasp.org/index.php/Cross-Site_
Request_Forgery_(CSRF)_Prevention_Cheat_Sheet,
2011.

[25] J. Postel. Transmission Control Protocol. RFC 793

(Standard), Sept. 1981.

[26] Z. Qian and Z. M. Mao. Oﬀ-Path TCP Sequence

Number Inference Attack. In IEEE Symposium on
Security and Privacy, pages 347–361, 2012.

[27] Z. Qian, Z. M. Mao, and Y. Xie. Collaborative TCP

Sequence Number Inference Attack: How to Crack
Sequence Number Under a Second. In Proceedings of
ACM Conference on Computer and Communications
Security, CCS ’12, pages 593–604, New York, NY,
USA, 2012. ACM.

[28] J. Ruderman. Same Origin Policy for JavaScript.

https://developer.mozilla.org/En/Same_origin_
policy_for_JavaScript, 2001.

[29] T. Shimomura and J. Markoﬀ. Takedown: The Pursuit

and Capture of Kevin Mitnick, America’s Most
Wanted Computer Outlaw - by the Man Who Did It.
Hyperion Press, 1st edition, 1995.

[30] S. Stamm, B. Sterne, and G. Markham. Reining in the

Web with Content Security Policy. In M. Rappa,
P. Jones, J. Freire, and S. Chakrabarti, editors,
Proceedings of the 19th International Conference on
World Wide Web, pages 921–930. ACM, 2010.

[31] The Open Web Application Security Project. Cache

Poisoning.
www.owasp.org/index.php/Cache_Poisoning, 2009.

[32] The Open Web Application Security Project.

Cross-Site Request Forgery. https://www.owasp.org/
index.php/Cross-Site_Request_Forgery_(CSRF),
2010.

[33] J. Touch. Defending TCP Against Spooﬁng Attacks.

RFC 4953 (Informational), July 2007.

[34] P. Watson. Slipping in the Window: TCP Reset

Attacks. Presented at CanSecWest, 2004.

[35] M. Zalewski. Strange Attractors and TCP/IP

Sequence Number Analysis.
http://lcamtuf.coredump.cx/newtcp/, 2001.

[36] M. Zalewski. The Tangled Web: A Guide to Securing

Modern Web Applications. No Starch Press, San
Francisco, CA, USA, 1st edition, 2011.

445
