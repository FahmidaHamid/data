[1] L. Backstrom and J. Leskovec. Supervised random
walks: Predicting and recommending links in social
networks. WSDM, 2011.

[2] B. Bahmani, A. Chowdhury, and A. Goel. Fast

incremental and personalized PageRank. VLDB, 2010.

[3] Y. Bu, B. Howe, M. Balazinska, and M. Ernst.

HaLoop: Eﬃcient iterative data processing on large
clusters. VLDB, 2010.

[4] R. Chen, M. Yang, X. Weng, B. Choi, B. He, and

X. Li. Improving large graph processing on partitioned
graphs in the cloud. SoCC, 2012.

[5] F. Chierichetti, R. Kumar, S. Lattanzi,

M. Mitzenmacher, A. Panconesi, and P. Raghavan. On
compressing social networks. KDD, 2009.

[6] J. Dean and S. Ghemawat. MapReduce: Simpliﬁed

data processing on large clusters. OSDI, 2004.

[7] J. Ekanayake, H. Li, B. Zhang, T. Gunarathne, S.-H.

Bae, J. Qiu, and G. Fox. Twister: A runtime for
iterative MapReduce. MAPREDUCE Workshop, 2010.

[8] D. Fogaras, B. R´acz, K. Csalog´any, and T. Sarl´os.

Towards scaling fully personalized PageRank:
Algorithms, lower bounds, and experiments. Internet
Mathematics, 2(3):333–358, 2005.

[9] A. Gates, O. Natkovich, S. Chopra, P. Kamath,

S. Narayanamurthy, C. Olston, B. Reed, S. Srinivasan,
and U. Srivastava. Building a high-level dataﬂow
system on top of MapReduce: The Pig experience.
VLDB, 2009.

[10] M. Hasan and M. Zaki. A survey of link prediction in

social networks. In C. Aggarwal, editor, Social
Network Data Analytics. Springer, 2011.

[11] J. Huang, D. Abadi, and K. Ren. Scalable SPARQL

querying of large RDF graphs. VLDB, 2011.
[12] G. Karypis and V. Kumar. Multilevel k-way

partitioning scheme for irregular graphs. Journal of
Parallel and Distributed Computing, 48:96–129, 1998.

[13] J. Kleinberg. Authoritative sources in a hyperlinked

environment. Journal of the ACM, 46(5):604–632,
1999.

[14] R. Kohavi, R. Henne, and D. Sommerﬁeld. Practical

guide to controlled experiments on the web: Listen to
your customers not to the HiPPO. SIGKDD, 2007.

[15] G. Lee, J. Lin, C. Liu, A. Lorek, and D. Ryaboy. The

uniﬁed logging infrastructure for data analytics at
Twitter. VLDB, 2012.

[16] F. Leibert, J. Mannix, J. Lin, and B. Hamadani.
Automatic management of partitioned, replicated
search services. SoCC, 2011.

[17] R. Lempel and S. Moran. SALSA: The Stochastic

Approach for Link-Structure Analysis. ACM
Transactions on Information Systems, 19(2):131–160,
2001.

[18] J. Leskovec, K. Lang, A. Dasgupta, and M. Mahoney.

Community structure in large networks: natural
cluster sizes and the absence of large well-deﬁned
clusters. Internet Mathematics, 6(1):29–123, 2009.

[19] J. Lin. MapReduce is good enough? If all you have is

a hammer, throw away everything that’s not a nail!
arXiv:1209.2191, 2012.

[20] J. Lin and C. Dyer. Data-Intensive Text Processing

with MapReduce. Morgan & Claypool Publishers, 2010.

[21] J. Lin and A. Kolcz. Large-scale machine learning at

Twitter. SIGMOD, 2012.

[22] J. Lin and M. Schatz. Design patterns for eﬃcient
graph algorithms in MapReduce. MLG Workshop,
2010.

[23] Y. Low, J. Gonzalez, A. Kyrola, D. Bickson,

C. Guestrin, and J. Hellerstein. GraphLab: A new
parallel framework for machine learning. UAI, 2010.

[24] Y. Low, J. Gonzalez, A. Kyrola, D. Bickson,
C. Guestrin, and J. Hellerstein. Distributed
GraphLab: A framework for machine learning and
data mining in the cloud. VLDB, 2012.

[25] G. Malewicz, M. Austern, A. Bik, J. Dehnert, I. Horn,

N. Leiser, and G. Czajkowski. Pregel: A system for
large-scale graph processing. SIGMOD, 2010.
[26] J. Mondal and A. Deshpande. Managing large

dynamic graphs eﬃciently. SIGMOD, 2012.

[27] C. Olston, B. Reed, U. Srivastava, R. Kumar, and

A. Tomkins. Pig Latin: A not-so-foreign language for
data processing. SIGMOD, 2008.

[28] L. Page, S. Brin, R. Motwani, and T. Winograd. The

PageRank citation ranking: Bringing order to the
Web. Technical report, Stanford University, 1999.

[29] L. Valiant. A bridging model for parallel computation.

Communications of the ACM, 33(8):103–111, 1990.

[30] R. Zadeh and A. Goel. Dimension independent
similarity computation. arXiv:1206.2082, 2012.

[31] Y. Zhang, Q. Gao, L. Gao, and C. Wang. PrIter: A

distributed framework for prioritized iterative
computations. SoCC, 2011.

514
