
[1] Convergence. http://convergence.io/.
[2] Perspectives Project.

http://perspectives-project.org/.

[3] The Monkeysphere Project.

http://web.monkeysphere.info/, 2010.

[4] Certiﬁcate Patrol. https://addons.mozilla.org/en-

US/firefox/addon/certificate-patrol/, 2011.

[5] Public Key Pinning.

http://www.imperialviolet.org/2011/05/04/pinning.html, May
2011.

[6] Public Key Pinning Extension for HTTP.

http://tools.ietf.org/html/draft-ietf-websec-key-pinning-01,
Dec. 2011.

688[7] D. Cooper, S. Santesson, S. Farrell, S. Boeyen, R. Housley,

and W. Polk. Internet X.509 Public Key Infrastructure
Certiﬁcate and Certiﬁcate Revocation List (CRL) Proﬁle.
Technical report, RFC 5280 (Proposed Standard) Internet
Engineering Task Force, 2008.

[8] M. M. Correia and M. Tok. DNS-based Authentication of

Named Entities (DANE). Technical report, Universidade do
Porto, 2011–2012.

[9] P. Eckersley. Sovereign Key Cryptography for Internet

Domains. https://git.eff.org/?p=sovereign-keys.
git;a=blob;f=sovereign-key-design.txt;hb=HEAD.

http://threatpost.com/en_us/blogs/phony-web-
certificates-issued-google-yahoo-\skype-
others-032311, Mar. 2011.

[28] C. Soghoian and S. Stamm. Certiﬁed Lies: Detecting and
Defeating Government Interception Attacks against SSL.
http://files.cloudprivacy.net/ssl-mitm.pdf,
2010.

[29] E. Stark, L.-S. Huang, D. Israni, C. Jackson, and D. Boneh.

The case for prefetching and prevalidating TLS server
certiﬁcates. In Proceedings of the 19th Network and
Distributed System Security Symposium, 2012.

[10] P. Eckersley. A Syrian Man-In-The-Middle Attack against

[30] T. Sterling. Second ﬁrm warns of concern after Dutch hack.

Facebook.
https://www.eff.org/deeplinks/2011/05/syrian-
man-middle-against-facebook, May 2011.

[11] P. Eckersley. Iranian hackers obtain fraudulent HTTPS

certiﬁcates: How close to a Web security meltdown did we
get?
https://www.eff.org/deeplinks/2011/03/iranian-
hackers-obtain-fraudulent-https, Mar. 2011.

[12] S. Egelman, L. F. Cranor, and J. Hong. You’ve Been Warned:

An Empirical Study of the Effectiveness of Web Browser
Phishing Warnings. In Proceedings of the SIGCHI
conference on Human factors in computing systems (CHI),
2008.

[13] Electronic Frontier Foundation. SSL Observatory.

https://www.eff.org/observatory.

[14] N. Falliere, L. O. Murchu, and E. Chien. W32.Stuxnet

Dossier. Technical report, Symantec Corporation, 2011.

[15] S. Haber and W. S. Stornetta. How to time-stamp a digital

document. In Advances in Cryptology, CRYPTO, 1990.

[16] J. Hodges, C. Jackson, and A. Barth. HTTP Strict Transport

Security (HSTS). RFC 6797 (Proposed Standard), Nov.
2012.

[17] T. H.-J. Kim, V. Gligor, and A. Perrig. GeoPKI: Converting
Spatial Trust into Certiﬁcate Trust. In Proceedings of the 9th
European PKI Workshop (EuroPKI), Sep 2012.

[18] T. H.-J. Kim, L.-S. Huang, A. Perrig, C. Jackson, and

V. Gligor. Transparent Key Integrity (TKI): A Proposal for a
Public-Key Validation Infrastructure. Technical Report
CMU-CyLab-12-016, Carnegie Mellon University, July
2012.

[19] B. Laurie and E. Kasper. Revocation Transparency.

http://sump2.links.org/files/
RevocationTransparency.pdf.

[20] B. Laurie and A. Langley. Certiﬁcate Authority Transparency

and Auditability. http://www.links.org/files/
CertificateAuthorityTransparencyandAuditability.
pdf, 2011.

[21] B. Laurie, A. Langley, and E. Kasper. Certiﬁcate

Transparency certiﬁcate-transparency-draft.
http://www.links.org/files/sunlight.html, Mar.
2012.

[22] B. Laurie, A. Langley, and E. Kasper. Certiﬁcate

Transparency. http://tools.ietf.org/html/draft-
laurie-pki-sunlight-07, Jan. 2013.

[23] M. Marlinspike. More Tricks For Defeating SSL In Practice.

In Blackhat, 2009.

[24] M. Marlinspike. SSL And The Future Of Authenticity.
http://blog.thoughtcrime.org/ssl-and-the-
future-of-authenticity, Apr 2011.

[25] M. Marlinspike and T. Perrin. Trust Assertions for

Certiﬁciate Keys. http://tack.io/draft.html, May
2012.

[26] M. Myers, R. Ankney, A. Malpani, S. Galperin, and

C. Adams. X.509 Internet Public Key Infrastructure Online
Certiﬁcate Status Protocol - OCSP. Technical report, RFC
2560 (Proposed Standard) Internet Engineering Task Force,
1999.

[27] P. Roberts. Phony SSL Certiﬁcates issued for Google, Yahoo,

Skype, Others.

http://news.yahoo.com/second-firm-warns-
concern-dutch-hack-215940770.html, 2011.

[31] J. Sunshine, S. Egelman, H. Almuhimedi, N. Atri, and L. F.
Cranor. Crying Wolf: An Empirical Study of SSL Warning
Effectiveness. In Proceedings of the USENIX Security
Symposium, 2009.

[32] E. Topalovic, B. Saeta, L.-S. Huang, C. Jackson, and

D. Boneh. Towards Short-Lived Certiﬁcates. In Web 2.0
Security and Privacy, May 2012.

[33] D. Wendlandt, D. G. Andersen, and A. Perrig. Perspectives:

Improving SSH-style Host Authentication with Multi-Path
Probing. In Proceedings of USENIX Annual Technical
Conference, June 2008.

[34] X. Zhang, H.-C. Hsiao, G. Hasker, H. Chan, A. Perrig, and
D. Andersen. SCION: Scalability, control, and isolation on
next-generation networks. In Proceedings of IEEE
Symposium on Security and Privacy, May 2011.

APPENDIX

A. MULTIPLE CA SIGNATURES

The X.509 certiﬁcate format was speciﬁed to contain exactly one
CA signature. We discuss below two approaches to support multi-
ple signatures for X.509 certiﬁcates.
Insert signatures into X.509 extensions. In X.509, the signature
is computed from all ﬁelds in the certiﬁcate, except the signature al-
gorithm identiﬁer and the signature value itself. Therefore, we can-
not simply inject X.509 extensions into a signed certiﬁcate, since
the existing signature would not match.

Suppose that we want a total of N different CA signatures. A
workaround is to (1) get N − 1 CAs to independently compute sig-
natures from the original certiﬁcate, (2) insert the N − 1 signatures
along with the additional signer information into custom X.509 ex-
tensions (instead of the signature ﬁeld) of the original certiﬁcate,
and then (3) get the last CA to sign the updated certiﬁcate (includ-
ing N − 1 signatures) and put the ﬁnal signature into the signature
ﬁeld.
Send a dummy certiﬁcate over the TLS handshake. Without
changing X.509 or existing CAs, the server can get signed certiﬁ-
cates from each CA independently. However, sending multiple cer-
tiﬁcates for the same public key (signed by different CAs) is highly
redundant. This overhead can be reduced if we extract the signa-
tures along with the signer information, signature algorithm, etc.,
and store them into custom extension ﬁelds in an empty certiﬁ-
cate at the end of an original certiﬁcate chain. An AKI-enabled
browser can parse this dummy certiﬁcate for multiple signatures,
while legacy SSL clients may ignore the dummy certiﬁcate and still
be able to validate the certiﬁcate chain with a single CA signature.

689
