[1] Alfred V. Aho, Ravi Sethi, and Jeffrey D. Ullman.

Compilers: Principles, Techniques and Tools.
Addison-Wesley Publishing Company, 1988.

363Table 11: Effect of zipping original and optimized ﬁles

Doc.

original size

1
2
3
4
5
6
7

Average

126759
63912
21893
21648
45014
330859
23451

gzip
alone

9887 (7.8%)
5901 (9.2%)
4608 (21.0%)
4784 (22.1%)
8321 (18.5%)
10568 (3.2%)
4495 (19.2%)

gzip

gzip after
optimization % difference
31.5
6769 (5.3%)
18.5
4809 (7.5%)
11.8
4063 (18.6%)
4061 (18.8%)
15.1
4.8
7921 (17.6%)
19.8
8474 (2.6%)
47.8
2348 (10.0%)
21.3

bzip2
alone

8902 (7.0%)
5728 (9.0%)
4503 (20.6%)
4711 (21.8%)
7197 (16.0%)
4915 (1.5%)
4113 (17.5%)

bzip2

bzip2 after
optimization % difference
31.3
6119 (4.8%)
18.0
4669 (7.3%)
10.4
4034 (18.4%)
4049 (18.7%)
14.1
1.7
7073 (15.7%)
–4.4
5129 (1.6%)
44.6
2277 (9.7%)
16.5

Table 12: Time to compress or uncompress Document 1, 1000
times

Compression Tool Time

bzip2
bunzip2
gzip
gunzip

381s
79s
46s
23s

[2] Alfred V. Aho and Jeffrey D. Ullman. Principles of Parsing,

Translation and Compiling. Englewood Cliffs, N.J.,
Prentice-Hall, 1972.

[3] Perry Cheng, Tom Murphy, Charlie Smart, Dave Swasey, and
Joe Vanderwaart. Tycon Mismatch 2001 ICFP Programming
Competition Entry, 2001.
http://www-2.cs.cmu.edu/˜tom7/icfp2001/.

[4] Damien Doligez, Luc Maranget, and Pierre Weis. 2001 ICFP

Programming Competition 2001, 2001. http://
cristal.inria.fr/ICFP2001/prog- contest/.

[5] Glasgow Haskell compiler.

http://www.haskell.org/ghc/.

[6] Joshua Goodman. Global thresholding and multiple-pass

parsing. In Proceedings of the 2nd Conference on Empirical
Methods in Natural Language Processing, pages 11–25,
1997.

[7] Graham Hutton and Erik Meijer. Monadic parser

combinators. Technical report, University of Nottingham,
NOTTCS-TR-96-4, 1996.

[8] Simon Peyton Jones. Why use Haskell. haskell.org, 2001.

http://www.haskell.org/aboutHaskell.html.
[9] Daniel Jurafsky and James H. Martin. Speech and Language

Processing. Prentice-Hall Inc., 2000.

[10] Insider Labs. Space Agent: Web Site Optimization, 2003.
http://www.insiderlabs.com/spaceagent/.

[11] N. Jesper Larsson and Alistair Moffat. Off-line

dictionary-based compression. Proceedings of the IEEE,
88(11):1772–1732, 2000.

[12] B.T. Lowerre. The Harpy Speech Recognition System. PhD

thesis, Carnegie Mellon University, Pittsburgh, PA, 1968.

[13] mozilla.org. Mozilla Layout Engine, 2003.

http://www.mozilla.org/newlayout/.

[14] Craig G. Nevill-Manning and Ian H. Witten. Identifying

hierarchical structure in sequences: A linear-time approach.
Journal of Artiﬁcial Intelligence Research, 7:67–82, 1997.
[15] John Peterson and Olaf Chitil. Haskell: A purely functional

language. haskell.org, 2003.
http://www.haskell.org.

[16] Dave Raggett. HTML Tidy Documentation. W3C, 2002.
http://tidy.sourceforge.net/docs/api/.

[17] Dave Raggett. Clean up your Web pages with HTML TIDY.

W3C, 2003.
http://www.w3.org/People/Raggett/tidy/.
[18] Thomas Rokicki. Tom Rokicki’s 2001 ICFP Programming

Competition Entry, 2001.
http://thomas.rokicki.com/icfp2001/.

[19] Chung-Chieh Shan and Dylan Thurston. Markup

optimization by probabilistic parsing.
http://www.digitas.harvard.edu/˜ken/
icfp2001/d2-a4.pdf, 2001.

[20] VSE. Optimize your Web Page with VSE Web Site Turbo.

vse-online.com, 2003.
http://vse-online.com/web-site-turbo/.

[21] W3C. Cascading Style Sheets, Level 2 CSS2 Speciﬁcation,

1998. http://www.w3.org/TR/REC-CSS2/.

[22] J. Ziv and A. Lempel. Compression of individual sequences
via variable rate encoding. IEEE T. Information Theory IT,
24 (5):530–536, 1978.

364
