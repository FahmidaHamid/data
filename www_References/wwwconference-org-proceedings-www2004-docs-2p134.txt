[1] Business Process Execution Language for Web Services Java

Run Time (BPWS4J).
http://www.alphaworks.ibm.com/tech/bpws4j.

[2] Business Process Execution Language for Web Services

Version 1.1.
http://www.ibm.com/developerworks/library/ws-bpel/.

[3] Enterprise Java Beans Speciﬁcation (EJB) 2.1.

http://java.sun.com/products/ejb/.

[4] OASIS Business Transaction Protocol, Committee

Speciﬁcation 1.0.
http://www.oasis-open.org/business-transaction.

[5] A. Arkin, S. Askary, S. Fordin, W. Jekeli, K. Kawaguchi,

D. Orchard, S. Pogliani, K. Riemer, S. Struble,
P.Takaci-Nagy, I. Trickovic, and S. Zimek. Web Service
Choreography Interface (WSCI) 1.0.
http://wwws.sun.com/software/xml/developers/wsci/, 2002.
[6] B. Benatallah, M. Dumas, M. C. Fauvet, F. Rabhi, and Q. Z.

Sheng. Overview of Some Patterns for Architecting and
Managing Composite Web Services. In ACM SIGecam
Exchanges, volume 3.3, pages 9–16, 2002.

[7] F. Cabrera, G. Copeland, B. Cox, T. Freund, J. Klein,

T. Storey, and S. Thatte. Web Services Transaction
(WS-Transaction). http://www-
106.ibm.com/developerworks/webservices/library/ws-
transpec/.

[8] D. W. Cheung, E. Lo, C. Y. Ng, and T. Lee. Web Services

Oriented Data Processing and Integration. In Proceedings of
the Twelfth International World Wide Web Conference,
Budapest, Hungery, May 2003.

[9] E. Christensen, F. Curbera, G. Meredith, and

S. Weerawarana. Web Services Description Language
(WSDL) 1.1. http://www.w3.org/TR/wsdl, March 2001.

[10] S. Graham, S. Simeonov, T. Boubez, G. Daniels, D. Davis,
Y. Nakamura, and R. Neyama. Building Web Services with
Java: Making sense of XML, SOAP, WSDL and UDDI. Sams;
ISBN:0672321815, 2001.

[11] S. D. Gribble, E. A. Brewer, J. M. Hellerstein, and D. Culler.

Scalable, Distributed Data Structures for Internet Service
Construction. In Proceedings of the Symposium on
Operating Systems Design and Implementation(OSDI2000),
October 2000.

[12] M. U. Kamath and K. Ramamritham. Pragmatic Issues in
Coordinated Execution and Failure Handling of Workﬂow
Control Architectures. Computer Science Technical Report
98-28, University of Massachusetts, August 1998.

[13] R. Khalaf, N. Mukhi, and S. Weerawarana. Service-Oriented

Composition in BPEL4WS. In Proceedings of the Twelfth

142BPEL4WS construct

description

Control Flow Constructs

notation

sequence
switch
while
pick
flow
link
throw

variable

invoke

invoke

receive

reply
assign
catch

sequential ﬂow
conditional ﬂow
iterative ﬂow
non-deterministic conditional ﬂow
concurrent ﬂow similar to cobegin-coend
wait-notify type of synchronization
throws an exception

Data Structures

sequence $
switch $
while $
pick $
flow $

$ end-sequence
$ end-switch
$ end-while
$ end-pick
$ end-flow

source(linkId), target(linkId)
throw(faultName)

variables include a set of parts analogous to ﬁelds variableName% part1, part2, $

Activities

$ partn&

synchronous (blocking) invocation on a parter P,
sending data from an input variable in and
receiving the response in the output variable out
asynchronous (oneway, nonblocking) invocation
on a parter P, sending data using an input
variable in (no response variable)
blocking receive of data from a partner P into
a variable var
send response to a partner P from a variable var
assignment
handles an exception

invoke(P, in, out )

invoke(P, in )

receive(P, var)

reply(P, var)
var1.p1 = var2.p2
catch(faultName)

Figure 11: BPEL constructs and notations

International World Wide Web Conference, Budapest,
Hungery, May 2003.

[14] D. Liu, K.H.Law, and G. Wiederhold. Analysis of Integration
Models for Service Composition. In Proceedings of the third
international workshop on Software performance, Rome,
Italy, July 2002.

[15] P. Muth, D. Wodtke, J. Weissenfels, D. A. Kotz, and

G. Weikum. From Centralized Workﬂow Speciﬁcation to
Distributed Workﬂow Execution. Journal of Intelligent
Information Systems (JIIS), 10(2), 1998.

[16] M. G. Nanda, S. Chandra, and V. Sarkar. Decentralizing

Composite Web Services. In Proceedings of Workshop on
Compilers for Parallel Computing, January 2003.

[17] M. G. Nanda and N. Karnik. Synchronization Analysis for
Decentralizing Composite Web Services. In Proceedings of
the ACM Symposium on Applied Computing(SAC),
Melbourne, FL, October 2003.

[18] S. Paul, E. Park, and J. Chaar. RainMan: A Workﬂow System

For The Internet. In Proc. Usenix Symposium on Internet
Technologies and Systems, California, December 1997.

[19] F. Ranno, S. K. Shrivastava, and S. Wheater. A System for

Specifying and Coordinating the Execution of Reliable
Distributed Applications. In International Working
Conference on Distributed Applications and Interoperable
Systems (DIAS’97), September 1997.

[20] I. R. T. Mikalsen, S. Tai. Transactional Attitudes: Reliable

Composition of Autonomous Web Services. In Proceedings
of Workshop on Dependable Middleware-based Systems,
June 2002.

[21] W. M. van der Aalst. Workﬂow Veriﬁcation: Finding

Control-Flow Errors Using Petri-Net-Based Techniques. In
Business Process Management, pages 161–183, 2000.

[22] M. Welsh, D. Culler, and E. Brewer. SEDA: An Architecture

for Scalable, Well-Conditioned Internet Services. In
Proceedings of 18th ACM Symposium on Operating Systems
Principles(SOSP’01), Canada, October 2001.

[23] M. Welsh, S. Gribble, E. Brewer, and D. Culler. A Design
Framework for Highly Concurrent Systems. CS Technical
Report UCB/CSD-00-1108, University of California,
Berkeley, October 2000.

[24] A. Yew, A. Strand, A. Liotta, and G. Pavlou. Aggregation of

Composite Location-Aware Services for Mobile Cellular
Networks. In Proceedings of 14th IFIP/IEEE International
Workshop on Distributed Systems: Operations and
Management, Germany, October 2003.

143$
$
$
$
$
$

