[1]  Brusilovsky,  P.

inclusion  of  adaptivity  (changing

the

(2001).  Adaptive  Hypermedia,  User

Modeling and User-Adapted Interaction, Vol. 11, No. 1-2,
pp. 87-110.

[2]  Ceri, S., Fraternali, P., Bongio, A., Brambilla, M., Comai,
S.,  and  Matera,  M.  (2003).  Designing  data-intensive  Web
applications, Morgan Kaufman.

[3]  Vdovjak,  R.,  Frasincar,  F.,  Houben,  G.J.,  and  Barna,  P.
(2003). Engineering Semantic Web Information Systems in
Hera, JWE, Vol. 2, No. 1&2, pp. 3-26, Rinton Press.



Figure 3: HPG "advanced" user interface screen shot

The  core  of  HPG  is  a  Java-based  application  that  allows  the
designer  to  quickly  construct  and  customize  a  hypermedia
presentation  based  on  an  AM  and  a  set  of  RDF  input  data
(Conceptual Model Instance, CMI), by carrying out a number of
transformation steps. Each step takes one or more RDF(S) files
as input and uses an XSLT stylesheet to construct an RDF file,
or  in  case  of  the  last  step,  a  presentation  suited  to  the  userâ€™s
platform  (HTML  or  WML).  For  carrying  out  the  XSLT
transformations, we use the Saxon interpreter3. Figure 3 shows a
screenshot of HPG's  methodology demonstrator where one can
view  every  input,  output,  and  intermediary  file  used  by  the
system,  as  well  as  the  XSLT  stylesheets.  In  addition  to  this
"advanced"  interface,  HPG  provides  a  wizard  interface  for
regular  users.  The  different  steps  of  the  generation  process
(corresponding to the numbers in Figure 3) are as follows:
1.  The  user  starts  by  selecting  a  CM  or  creating  a  new  one.
The lists of CMIs and AMs will be filtered so that they only
contain the files based on the selected CM.

2.  The user then selects an existing AM or creates a new one
(based  on  the  selected  CM)  using  HPG's  graphical  AM
Builder.


3 http://saxon.sourceforge.net

243
