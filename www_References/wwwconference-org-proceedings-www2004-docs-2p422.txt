[1]  Google, AdWords, https://adwords.google.com/.
[2]  Attardi G., Esuli A., Simi M., Best Bets: Thousands queries

in search of a client, TR-04-07, Università di Pisa, 2004.

[3]  Belkin N. J., Croft W. B. Information Filtering and
Information Retrieval: two sides of the same coin?
Communications of the ACM, 35(12), 29–38, 1992.
[4]  Yan T.W. and Garcia-Molina H., Index structure for
Information Filtering under the Boolean Model. ACM
Transaction on Database Systems, 19(2), 332–364, 1994.

3.  BEST BETS SEARCH
Besides  Information  Filtering,  retrieval  systems  that  invert  the
direction  of  search  are  useful  in  those  cases  where  information
providers  wish  an  active  role  in  selecting  to  which  consumers
their contents is delivered. As in IF, it is natural to express such
selection criteria through a fully fledged query language.
In  a  Best  Bets  application  a  user/customer  or  his  needs  can  be
represented  as a short-lived document that collects some aspects
about him or about his activity context, e.g. input keywords to a
search engine, navigation history or the document being browsed.
Contents  material  is  stored  in  a  collection,  where  each  item  is
paired  with  a  query  for  identifying  its  intended  target.  When  a
user  faces  the  system,  all  queries  that  match  his  description  are
selected  and  their  associated  contents  are  presented  to  the  user
ordered by a ranking measure (Figure 2).
Best  Bets  fit  a  retrieval  model  where  the  collection  D  =  Q  ×  C
consists of pairs ‹q, c›, where q ∈ Q is a query and c ∈ C is the
associated  document  to  be  retrieved  when  the  query  matches  a
given  input  document  d.  Queries  in  Q  represent  target  selection
criteria  for  the  items  in  C.  For  example,  in  an  advertising
application,  d  may  be  a  user  profile  expressed  as  a  list  of
keywords;  Q  contains  queries  expressing  criteria  for  selecting
potentially interested users for advertised products contained in C.
The  Best  Bets  task  consists  in  retrieving  all  or  the  best  k
documents coupled to queries matching a given document d, i.e.

BestBets(d, D) = {c ∈ C | ‹q, c› ∈ QuerySearch(d, D)}
BestBetsTop(k, d, D) = top k elements in


sort(BestBets(d, D), rank(., d))





Best  Bets differ from IF since queries are associated to contents
rather  than  to  users,  so  documents  have  their  own  selection
criteria and compete with each other through ranking, rather than
being all delivered after a successful match.
In IF, as in IR, users determine with their queries (or profiles they
control)  the  documents  they  want  to  receive;  in  Best  Bets  the
producers devise queries to select customers for their documents.
In IF profiles are matched with the document contents, so queries
can  discriminate  only  on  what  is  present  in  them.  Best  Bets
queries  instead  may  contain  criteria  that  are  totally  unrelated  to
the terms in the document: for instance a document about a pop
singer might be paired to a query with the word “Mars”, betting
that interest in astronomy is more frequent in youngsters.

423
