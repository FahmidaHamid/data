[1] Estimating the size of a population.

http://www.rsscse.org.uk/ts/gtb/johnson.pdf.

[2] Facebook statistics.

http://www.facebook.com/press/info.php?statistics.

[3] Z. Bar-Yossef and M. Gurevich. Eﬃcient search engine

measurements. In Proc. of the 16th intl. conf. on
World Wide Web (WWW’07), pages 401–410, Banﬀ,
Alberta, Canada, 2007.

[4] Z. Bar-Yossef and M. Gurevich. Random sampling
from a search engine’s index. J. ACM, 55(5), 2008.

[5] K. Bharat and A. Broder. A technique for measuring

the relative size and overlap of public Web search
engines. Comput. Netw. ISDN Syst., 30(1-7):379–388,
1998.

[6] A. Chao. Estimating the population size for

capture-recapture data with unequal catchability. In
Biometrics, Dec. 1987.

[7] M. Finkelstein, H. G. Tucker, and J. A. Veeh.

Conﬁdence intervals for the number of unseen types.
Statistics & Probability Letters, 37(4):423–430, Mar.
1998.

[8] M. Gjoka, M. Kurant, C. T. Butts, and

A. Markopoulou. Walking in Facebook: A Case Study
of Unbiased Sampling of OSNs. In Proc. of IEEE
INFOCOM ’10, San Diego, CA, Mar. 2010.

[9] S. Han Hee, C. Tae Won, D. Vacha, Z. Yin, and

Q. Lili. Scalable proximity estimation and link
prediction in online social networks. In Proc. of the
9th ACM SIGCOMM conf. on Internet Measurement
(IMC’09), pages 322–335, Chicago, IL, 2009.

[10] R. Huggins, H.-C. Yang, A. Chao, and P. S. F. Yip.

Population size estimation using local sample coverage
for open populations. Journal of Statistical Planning
and Inference, 113(2):699 – 714, 2003.

[11] D. E. Knuth. Estimating the eﬃciency of backtrack

programs. Technical report, Stanford, CA, 1974.

[12] Y. Koren, S. C. North, and C. Volinsky. Measuring

and extracting proximity in networks. In Proc. of the
12th ACM SIGKDD Intl. Conf. on Knowledge
Discovery and Data mining (KDD’06), pages 245–255,
Philadelphia, PA, 2006.

[13] M. Kurant, M. Gjoka, C. T. Butts, and

A. Markopoulou. Walking on a Graph with a
Magnifying Glass. In Proc. of ACM SIGMETRICS
’11, San Jose, CA, Jun. 2011.

[14] L. Lovasz. Random walks on graphs. a survey.

Combinatorics, 1993.

[15] A. Marchetti-Spaccamela. On the estimate of the size

of a directed graph. In J. van Leeuwen, editor,
Graph-Theoretic Concepts in Computer Science,
volume 344 of Lecture Notes in Computer Science,
pages 317–326. Springer Berlin / Heidelberg, 1989.

[16] A. Mislove, M. Marcon, K. P. Gummadi, P. Druschel,

and B. Bhattacharjee. Measurement and analysis of
online social networks. In Proc. of the 5th ACM Conf.
on Internet Measurement (IMC’07), San Diego, CA,
2007.

WWW 2011 – Session: ClusteringMarch 28–April 1, 2011, Hyderabad, India604[17] R. Motwani and S. Vassilvitskii. Distinct values

estimators for power law distributions. In Proc. of the
Third Workshop on Analytic Algorithmics and
Combinatorics (ANALCO’06), Miami , FL, 2006.

[18] L. Pitt. A note on extending knuth’s tree estimator to

directed acyclic graphs. Inf. Process. Lett.,
24(3):203–206, 1987.

[19] S. Ye and F. Wu. Estimating the size of online social

networks. In Proc. of the IEEE 2nd Intl. Conf. on
Social Computing (SocialCom), pages 169–176, Aug.
2010.

[20] A. Yong-Yeol, H. Seungyeop, K. Haewoon, M. Sue,

and J. Hawoong. Analysis of topological characteristics
of huge online social networking services. In Proc. of
the 16th Intl. Conf. on World Wide Web (WWW’07),
pages 835–844, Banﬀ, Alberta, Canada, 2007.

APPENDIX
A. CONCENTRATION OF C, Ψ1, AND Ψ−1

In the proof of Corollary 1 we required that each of the
variables C, Ψ1, and Ψ−1 give an ǫ/4 appropriation their
respective expected values with probability at least 1 − δ/3.
From Chebyshev’s inequality we get that this is true for any
variable Z for which

Var[Z] ≤ δǫ2E 2[Z]/48 .

(3)

To use this we must ﬁrst bound the variance of all three
variables.

We start with C, the number of collisions. We remind
the reader our notations. Yi,j = 1 if xi = xj and 0 else,
where {x1 . . . , xr} are the r sampled nodes. Moreover, C =
Pr
i<j Yi,j. We compute E [C 2] using the linearity of the
expectation.

E [C 2] = E [(

Yi,j)2] =

r

Xi<j

r

r

Xi<j

Xi′<j ′

E [Yi,jYi′,j ′ ] .

ℓ )2.

ℓ=1 p2

ℓ=1 p2

To calculate the last summation we divide it into three
cases. When i = i′ and j = j′ we have that E [Yi,jYi′,j ′ ] =

get that:

ℓ . Moreover, we have (cid:0)r

E [Yi,j ] =Pn
2(cid:1) such case. In the
case where i 6= i′ and j 6= j′, the number of the summands
is equal to the number of ways one chooses 4 elements out of
r elements and then split them to two pairs, i.e., 6(cid:0)r
4(cid:1). Also,
in this case E [Yi,jYi′,j ′ ] = (Pn
In third and last
possibility is where i = i′ and j 6= j′ or i 6= i′ and j = j′.
We have 3!(cid:0)r
3(cid:1) such summands because this is the number of
ways to choose 3 elements out of r and then decide for each
index if it is from the lest sum, right sum, or both. In this
case we have E [Yi,jYi,j ′ ] =Pn
ℓ . Summing those up we
Var[C] = E [C 2] − E 2[C]
ℓ + 6 r
Xℓ=1
ℓ + 6 r

3! n
Xℓ=1
2!2
ℓ )2 − r
3! n
Xℓ=1

2! n
Xℓ=1
+ 6 r
4!(
2! n
Xℓ=1

=  r

≤  r

Xℓ=1

ℓ=1 p3

p2
ℓ )2

p3
ℓ .

p3
ℓ

n

(

p2

p2

p2

n

Substituting this into Equation 3 and demanding that each
of the summoned is less than half the right hand side gives
us the condition for rc:

rc ≥ max(

8√3

ǫ√δpPn

i=1 p2
i

i=1 p3
i
i=1 p2

i )2) .

,

384Pn
ǫ2δ(Pn

Since the nodes are picked independently, computing the

variance of Ψ1 is easy:

Var[Ψ1] = r Var[dx1 ] < rE [d2

x1 ] = r

n

n

pid2

i = rD2

p3
i .

Xi=1

Xi=1

From Equation 3, and the expectation of Ψ1 calculated in
the body of the paper we get the requirement:

rc >

i=1 p3
i
i=1 p2

48Pn
ǫ2δ(cid:0)Pn

i(cid:1)2 .

We do the same for Ψ−1:

Var[Ψ−1] = r Var[1/dx1 ] < rE [1/d2

x1 ]

= r

n

Xi=1

pi/d2

i =

r
D2

n

Xi=1

1
pi

.

Thus Ψ−1 is also ǫ/4 close to its expectation with probability
at least 1 − δ/3 if: which is satisﬁed by
i=1 1/pi
.

rc ≥

48Pn

ǫ2δn2

Combining them gives us that C, Ψ1 and Ψ−1 are individ-
ually ǫ/4 close to their expectation, each with probability at
least 1 − δ/3 if:
rc ≥ max(

i=1 p3
i
i )2 ,
i=1 p2

i=1 1/pi

) .

8√3

ǫ2δn2

48Pn

i=1 p2
i

,

Note that the condition for the concentration of Ψ1 is sub-
sumed by the conditions for the concentration of C.

384Pn
ǫ2δ(Pn

ǫ√δpPn

B. PARTIAL LISTS OF FRIENDS

In some settings, only a random subset of the list of friends
is given to the crawler. Thus, assuming the subset of given
friends is truly random, the crawler can keep performing the
random walk undisturbed. However, it can no longer eval-
uate Ψ1 and Ψ−1. To this end, we provide estimators that
do not require Ψ1 and Ψ−1. They do, however, require a
priori knowledge of nodes’ degree distribution. A similar as-
sumption was also made in [17] where the authors presented
an algorithm for estimating the number of attributes in a
database.

Deﬁning as before the ℓ’th moment of the degree distri-

bution as Mℓ = E [dℓ] the collision estimator becomes

2! M2
CM2
For the non-unique estimator we get

ˆn = r

1

.

ˆn = r − C +

dm

Xi=1

ˆnP [d = i](cid:18)1 −

i

ˆnM1(cid:19)r

.

WWW 2011 – Session: ClusteringMarch 28–April 1, 2011, Hyderabad, India605
