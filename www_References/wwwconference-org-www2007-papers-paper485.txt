[1] Adobe ﬂash.

http://en.wikipedia.org/wiki/Macromedia Flash.

[2] Asynchronous javascript and xml.

http://en.wikipedia.org/wiki/Ajax (programming).

[3] K. Amiri et al. Dynamic function placement for

data-intensive cluster computing. In USENIX 2000
Annual Technical Conference, San Diego, CA, June
2000., pages 307–322, 2000.

[4] A. Bongio, S. Ceri, P. Fraternali, and A. Maurino.

Modeling data entry and operations in webml. In The
World Wide Web and Databases (WebDB, Selected
Papers), pages 201–214, 2000.

[5] G. Booch et al. The Uniﬁed Modeling Language User
Guide,The Addison-Wesley Object Technology Series.
Addison Wesley, 1998.

[6] C. Botev et al. Supporting workﬂow in a course

management system. In Proc. SIGCSE, 2005.

[7] M. Brambilla et al. Declarative speciﬁcation of web

applications exploiting web services and workﬂows. In
Proc. SIGMOD, pages 909–910, 2004.

[8] V. Cardellini, M. Colajanni, and P. S. Yu. Dynamic

load balancing on web-server systems. IEEE Internet
Computing, 3(3):28–39, 1999.

[10] T. W. Commerce. Tpc benchmark

http://www.tpc.org/tpcw/.

[11] E. Cooper, S. Lindley, P. Wadler, and J. Yallop.

Links: Web programming without tiers. In Submitted
to ESOP 2007.

[12] M. J. Franklin, M. J. Carey, and M. Livny.

Transactional client-server cache consistency:
alternatives and performance. ACM Trans. Database
Syst., 22(3), 1997.

[13] P. Fraternali. Tools and approaches for developing

data-intensive web applications: A survey. ACM
Computing Surveys, 31(3):227–263, 1999.

[14] N. Gerner et al. Automatic clientserver partitioning of
data driven web applications. In Proc. SIGMOD, 2006.

[15] A. Hayrapetyan, D. Kempe, M. P´al, and Z. Svitkina.

Unbalanced graph cuts. In European Symposium on
Algorithms (ESA), Mallorca, Spain, 2005.

[16] http://java.sun.com/j2se/1.4.2/docs

/guide/plugin/developer guide/applet caching.html.

[17] G. C. Hunt and M. L. Scott. The coign automatic

distributed partitioning system. In Operating Systems
Design and Implementation, pages 187–200, 1999.

[18] M. Ozsu, K. Voruganti, and R. Unrau. An

asynchronous avoidance-based cache consistency
algorithm for client caching dbmss, 1998.

[19] R. Ramakrishnan and J. Gehrke. Database

Management Systems. McGraw-Hill, 3 edition, 2003.

[20] E. Tilevich and Y. Smaragdakis. J-orchestra:

Automatic java application partitioning. European
Conference on Object-Oriented Programming
(ECOOP), Malaga, June 2002.

[21] V. V. Vazirani. Approximation Algorithms.

Springer-Verlag, Berlin, 2001.

[22] K. Voruganti, M. T. Ozsu, and R. C. Unrau. An

adaptive hybrid server architecture for client caching
ODBMSs. In The VLDB Journal, pages 150–161,
1999.

[23] K. Voruganti, M. T. ¨Ozsu, and R. C. Unrau. An

adaptive data-shipping architecture for client caching
data management systems. Distrib. Parallel
Databases, 15(2):137–177, 2004.

[24] C. Wang and Z. Li. Parametric analysis for adaptive
computation oﬄoading. In PLDI ’04: Proceedings of
the ACM SIGPLAN 2004 conference on Programming
language design and implementation, 2004.

[25] K. Wu, P. fei Chuang, and D. J. Lilja. An active

data-aware cache consistency protocol for
highly-scalable data-shipping dbms architectures. In
CF ’04: Proceedings of the 1st conference on
Computing frontiers, 2004.

[26] F. Yang et al. Hilda: A high-level language for

data-driven web applications. In Proc. ICDE, 2006.

[27] F. Yang et al. A uniﬁed platform for data driven web
applictions with automatic client-server partitioning.
Technical report, Cornell University, 2007.
http://techreports.library.cornell.edu.

WWW 2007 / Track: Performance and ScalabilitySession: Performance Engineering of Web Applications350
