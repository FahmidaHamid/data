[1] B. Abrahao, V. Almeida, J. Almeida, A. Zhang, D. Beyer,

and F. Safai. Self-adaptive SLA-driven capacity management
for internet services. In Proc. NOMS, Apr. 2006.

[2] K. Amiri, S. Park, R. Tewari, and S. Padmanabhan.

DBProxy: A dynamic data cache for Web applications. In
Proc. ICDE, Mar. 2003.

[3] C. Amza, E. Cecchet, A. Chanda, A. Cox, S. Elnikety,

R. Gil, J. Marguerite, K. Rajamani, and W. Zwaenepoel.
Speciﬁcation and implementation of dynamic web site
benchmarks. In Proc. Intl. Workshop on Workload
Characterization, Nov. 2002.

[4] C. Bornhövd, M. Altinel, C. Mohan, H. Pirahesh, and

B. Reinwald. Adaptive database caching with DBCache.
Data Engineering, 27(2):11–18, June 2004.

[5] E. Cecchet. C-JDBC: a middleware framework for database

clustering. Data Engineering, 27(2):19–26, June 2004.

[6] F. Chang, J. Dean, S. Ghemawat, W. C. Hsieh, D. A.
Wallach, M. Burrows, T. Chandra, A. Fikes, and R. E.
Gruber. Bigtable: A distributed storage system for structured
data. In Proc. OSDI, Nov. 2006.

[7] I. Cunha, J. Almeida, V. Almeida, and M. dos Santos.

Self-adaptive capacity management for multi-tier virtualized
environments. In Proc. Intl. Symposium on Integrated
Network Management, May 2007.

[8] DAS3: The Distributed ASCI Supercomputer 3.

http://www.cs.vu.nl/das3/.

[9] A. Davis, J. Parikh, and W. E. Weihl. Edge computing:

Extending enterprise applications to the edge of the internet.
In Proc. WWW, May 2004.

[10] G. DeCandia, D. Hastorum, M. Jampani, G. Kakulapati,

A. Lakshman, A. Pilchin, S. Sivasubramanian, P. Vosshall,
and W. Vogels. Dynamo: Amazon’s highly available
key-value store. In Proc. SOSP, Oct. 2007.

[11] L. Gao, M. Dahlin, A. Nayate, J. Zheng, and A. Iyengar.
Application speciﬁc data replication for edge services. In
Proc. WWW, May 2003.

[12] J. Gray. A conversation with Werner Vogels. ACM Queue,

4(4):14–22, May 2006.

[13] S. D. Gribble, E. A. Brewer, J. M. Hellerstein, and D. Culler.

Scalable, distributed data structures for internet service
construction. In Proc. OSDI, 2000.

[14] T. Groothuyse, S. Sivasubramanian, and G. Pierre. GlobeTP:

Template-based database replication for scalable web
applications. In Proc. WWW, May 2007.

[15] Y. Huang and J. Chen. Fragment allocation in distributed

database design. Information Science and Engineering,
17(3):491–506, May 2001.

[16] Java TPC-W implementation distribution. http:

//www.ece.wisc.edu/~pharm/tpcw.shtml.
[17] L. Kazerouni and K. Karlapalem. Stepwise redesign of

distributed relational databases. Technical Report

 0 10000 20000 30000 40000 50000 0 10 20 30 40 50 60 70Maximum Throughput (EBs)Number of server machinesSTWOTWDTW 0 10 20 30 40 50 60 70 80 90 0 10 20 30 40 50 60 70Machine usageNumber of server machinesFinancial service DB serversOther DB serversApplication serversLoad balancersClients275WWW 2008 / Refereed Track: Performance and ScalabilityApril 21-25, 2008. Beijing, ChinaHKUST-CS97-12, Hong Kong Univ. of Science and
Technology, Dept. of Computer Science, Sept. 1997.

[18] B. Kemme and G. Alonso. Don’t be lazy, be consistent:

Postgres-R, a new way to implement database replication. In
Proc. VLDB, Sept. 2000.

[19] S. Navathe, K. Karlapalem, and M.Ra. A mixed

fragmentation methodology for initial distributed database
design. Computer and Software Engineering, 3(4), 1995.
[20] S. Navathe and M. Ra. Vertical partitioning for database

design: a graphical algorithm. SIGMOD Records,
18(2):440–450, 1989.

[21] C. Olston, A. Manjhi, C. Garrod, A. Ailamaki, B. Maggs,

and T. Mowry. A scalability service for dynamic web
applications. In Proc. Conf. on Innovative Data Systems
Research, Jan. 2005.

[22] M. T. Özsu and P. Valduriez. Principles of distributed

database systems. Prentice-Hall, Inc., Upper Saddle River,
NJ, USA, 2nd edition, Feb. 1999.

[23] C. Plattner and G. Alonso. Ganymed: Scalable replication

for transactional web applications. In Proc. Middleware, Oct.
2004.

[24] M. Rabinovich, Z. Xiao, and A. Agarwal. Computing on the

edge: A platform for replicating internet applications. In
Proc. Intl. Workshop on Web Content Caching and
Distribution, Sept. 2003.

[25] M. Ronstrom and L. Thalmann. MySQL cluster architecture

overview. MySQL Technical White Paper, Apr. 2004.

[26] RUBBoS: Bulletin board system benchmark.

http://jmob.objectweb.org/rubbos.html.

[27] G. L. Sanders and S. K. Shin. Denormalization effects on

performance of RDBMS. In Proc. HICSS, Jan. 2001.

[28] S. K. Shin and G. L. Sanders. Denormalization strategies for

data retrieval from data warehouses. Decision Support
Systems, 42(1):267–282, Oct. 2006.

[29] S. Sivasubramanian, G. Pierre, and M. van Steen. GlobeDB:

Autonomic data replication for web applications. In Proc.
WWW, May 2005.

[30] S. Sivasubramanian, G. Pierre, M. van Steen, and G. Alonso.

GlobeCBC: Content-blind result caching for dynamic web
applications. Technical Report IR-CS-022, Vrije
Universiteit, Amsterdam, The Netherlands, June 2006.

[31] S. Sivasubramanian, G. Pierre, M. van Steen, and G. Alonso.

Analysis of caching and replication strategies for web
applications. IEEE Internet Computing, 11(1):60–66,
January-February 2007.

[32] W. D. Smith. TPC-W: Benchmarking an ecommerce

solution. White paper, Transaction Processing Performance
Council.

[33] N. Tolia and M. Satyanarayanan. Consistency-preserving

caching of dynamic database content. In Proc. WWW, Nov.
2006.

[34] TPC-W frequently asked questions, question 2.10: “Why

was the concept of atomic set of operations added and what
are its requirements?”, Aug. 1999.

[35] B. Urgaonkar, P. Shenoy, A. Chandra, and P. Goyal. Agile,

dynamic capacity provisioning for multi-tier internet
applications. In Proc. ICAC, June 2005.

276WWW 2008 / Refereed Track: Performance and ScalabilityApril 21-25, 2008. Beijing, China
