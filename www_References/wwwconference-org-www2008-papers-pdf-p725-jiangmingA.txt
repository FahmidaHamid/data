[1] DBLP Computer Science Bibliography.

http://www.informatik.uni-trier.de/ ley/db/, 2007.

[2] S. Al-Khalifa, H. V. Jagadish, J. M. Patel, Y. Wu, N. Koudas,

and D. Srivastava. Structural joins: A primitive for efﬁcient
XML query pattern matching. In ICDE, 2002.

[3] N. Bruno, N. Koudas, and D. Srivastava:. Holistic twig joins:

Optimal XML pattern matching. In SIGMOD, 2002.

[4] E. Cohen, H. Kaplan, and T. Milo. Labeling dynamic XML

trees. In PODS, 2002.

[5] A. H. Davis, C. Sun, and J. Lu. Generalizing operational

transformation to the standard general markup language. In
CSCW, 2002.

[6] C. A. Ellis and S. J. Gibbs. Concurrency control in

groupware systems. In SIGMOD, 1989.

[7] K. Eswaran, J. Gray, R. Lorie, and I. Traiger. The notions of

consistency and predicate locks in a database system.
Commun, 19(11):624–633, 1976.

[8] N. Gu, J. Yang, and Q. Zhang. Consistency maintenance

based on the mark & retrace technique in groupware
systems. In SIGGROUP, 2005.

[9] C.-L. Ignat and M. C. Norrie. Customizable collaborative

editor relying on treeOPT algorithm. In ECSCW, 2003.

[10] L. Lamport. Time, clocks, and the ordering of events in a

distributed system. Commun, 7:558´lC565, 1978.

[11] D. Li and R. Li. Transparent sharing and interoperation of

heterogeneous single-user applications. In CSCW, 2002.
[12] D. Li and R. Li. Preserving operation effects relation in

group editors. In CSCW, 2004.

[13] Y. Saito and M. Shapiro. Optimistic replication. ACM

Computing Surveys, 37(1):42–81, Mar 2005.

[14] C. Sun, X. Jia, Y. Zhang, Y. Yang, and D. Chen. Achieving

convergence, causality-preservation, and
intention-preservation in real-time cooperative editing
systems. ACM Transactions on Computer-Human
Interaction, 5(1):63–108, Mar 1998.

[15] I. Tatarinov, Z. G. Ives, A. Y. Halevy, and D. S. Weld.

Updating XML. In SIGMOD, 2001.

[16] I. Traiger, J. Gray, C. Galthier, and B. Lindsay. Transactions

and consistency in distributed database systems. ACM
Transactions on Database System, 7(3):323–342, 1982.

[17] W3C. XML path language (XPath) 2.0.
http://www.w3.org/TR/xpath20/, 2005.

[18] W3C. XQuery 1.0: an XML query language.

http://www.w3.org/TR/xquery/, 2005.

[19] H. Wang and X. Meng. The sequencing of tree structures for

XML indexing. In ICDE, 2005.

[20] K. Win, W. Ng, Q. Liu, and E. Lim. XStamps: A

multiversion timestamps concurrency control protocol for
XMLData. In ICICS/PCM, 2003.

APPENDIX

is consistent on all replica sites.

LEMMA 1. The execution order of all transactional operations
PROOF. Suppose the execution order of n− 1 transactions at all
sites are consistent. We want to extend the result to n transaction
operations.

a and we have N OOP Ti

Assume there are n transactions in the system: T1, T2,··· , T n.
Without loss of generality, assume the T1 ≺ Ti, for all 1 ≤ i ≤ n.
a →
There may exist one or more N OOP Ti
for all 2 ≤ i ≤ n. Since T1 ≺ Ti, we switch the
N OOP T1
timestamps of involving NOOPs to reverse the causality. Speciﬁ-
b will switch its timestamp with all N OOP Ti
cally, N OOP T1
b until
b where 2 ≤ i ≤ n.
N OOP T1
Thus, T1 must be executed ﬁrst among {T1, T2, T3,· ·· , T n} on
all replica sites. Then the remain operations are {T2, T3,· ·· , T n}.
According to the assumption, the execution order of n − 1 opera-
tions at every site is consistent. Thus, the execution order are con-
sistent after n operations in all replica site.

causally precedes all N OOP Ti

a

b

THEOREM 1. Transactions in our system are serialized (Deﬁ-

nition 5).

PROOF. According to Lemma 1, the execution order of trans-
actions is consistent on all replicas. To prove the current theorem,
we only need to prove the order between each transaction and non-
transaction is consistent on all replicas. Let T be a transaction and
O be a non-transaction operation.

We consider the situation after all timestamp switches have taken
place for transactional operations. Without loss of generality, as-
sume O is generated from replica site a. Since the switch rule
only applies to NOOP operations from the same replica site, after
the switch, T should still have one corresponding NOOP operation
from each replica site. Let N OOP T
a denote the NOOP operation
from site a. Since both O and N OOP T
a are local operations of
replica site a, their relationship can only be Causal Relationship
(Deﬁnition 2). Their execution order is determined by the Execu-
tion Condition for remote operation (Deﬁnition 4). Since transac-
tion T will be executed together with N OOP T
a at all sites. So the
execution order between T and O is ﬁxed.

In summary, no matter which type the operation is, the execution

order is certain. This satisﬁes the Deﬁnition 5.

LEMMA 2. Assume the system contains two concurrent opera-
tions and two replicas. The results are the same even though the
two operations are executed in different order on the two replicas.
PROOF. Assume U1 ≺ U2, and on one of the replicas, U2 ex-
ecutes ﬁrst. We what to show executing U1 after U2 leads to the
same result. Consider any node n in the document. If n’s times-
tamp is not changed by U2, then U2 has no effect on n, so execut-
ing U1 before or after U2 is the same. Suppose n’s timestamp is
changed to (U2,−), that is, n is created by U2. Since U1 ≺ U2,
or U1 (cid:4)∈ (U2, −), the retracing algorithm will make n invisible
to U1. Suppose n’s timestamp is (U(cid:2), U2), i.e., n is deleted by
U2. Assume n’s original timestamp is (U(cid:2), U(cid:2)(cid:2)), and we have
U(cid:2) ≺ U2 ≺ U(cid:2)(cid:2)
. There are only two cases: (i) U(cid:2) ≺ U1 ≺ U(cid:2)(cid:2)
and
(ii) U1 ≺ U(cid:2)
, where in case (i) n is visible to U1 and in case (ii)
n is invisible to U1, no matter there is U2 or not. This means, with
retracing, U1 is seeing the document as if U2 never occurred.

THEOREM 2. Assume the system contains n operations and any
number of replicas. After the n operations have executed on all
replicas, the results on all replicas are the same..

Lemma 2 proved consistency for two operations in a distributed
environment. Based on Lemma 2, we simply apply the results in
our previous work (Theorem 3 of [8]) to extend the proof to n op-
erations.

734WWW 2008 / Refereed Track: Social Networks & Web 2.0  - Applications & Infrastructures for Web 2.0
