[1] XML Path Language (XPath). World Wide Web Consortium

site, W3C. http://www.w3.org/TR/xpath20.

[2] XML Query Language (XQuery). World Wide Web

Consortium site, W3C. http://www.w3.org/XML/Query.

[3] S. Al-Khalifa, H. V. Jagadish, J. M. Patel, Y. Wu, N. Koudas,
and D. Srivastava. Structural joins: A primitive for efﬁcient
XML query pattern matching. In ICDE, 2002.

[4] S. Amer-Yahia, C. Botev, and J. Shanmugasundaram.

Texquery: a full-text search extension to xquery. In WWW,
2004.

[5] N. Bruno, N. Koudas, and D. Srivastava. Holistic twig joins:

optimal XML pattern matching. In SIGMOD, 2002.

[6] L. Chen, A. Gupta, and M. E. Kurul. Stack-based algorithms

for pattern matching on DAGs. In VLDB, 2005.

[7] S. Chen, H.-G. Li, J. Tatemura, W.-P. Hsiung, D. Agrawal,
and K. S. Candan. Twig2Stack: bottom-up processing of
generalized-tree-pattern queries over XML documents. In
VLDB, 2006.

[8] Y. Chen, S. B. Davidson, and Y. Zheng. An efﬁcient XPath

query processor for XML streams. In ICDE, 2006.
[9] S.-Y. Chien, Z. Vagena, D. Zhang, V. J. Tsotras, and

C. Zaniolo. Efﬁcient structural joins on indexed XML
documents. In VLDB, 2002.

[10] B. Choi, M. Mahoui, and D. Wood. On the optimality of

holistic algorithms for twig queries. In DEXA, 2003.

[11] S. Cohen, J. Mamou, Y. Kanza, and Y. Sagiv. XSearch: A

semantic search engine for XML. In VLDB, 2003.

[12] R. Goldman and J. Widom. DataGuides: Enabling query

formulation and optimization in semistructured databases. In
VLDB, 1997.

[13] G. Gottlob, C. Koch, and R. Pichler. Efﬁcient algorithms for
processing XPath queries. ACM Trans. Database Syst., 2005.
[14] G. Gou and R. Chirkova. Efﬁcient algorithms for evaluating

XPath over streams. In SIGMOD, 2007.

[15] V. Hristidis, Y. Papakonstantinou, and A. Balmin. Keyword

proximity search on XML graphs. In ICDE, 2003.

[16] H. Jiang, H. Lu, and W. Wang. Efﬁcient processing of XML

twig queries with or-predicates. In SIGMOD, 2004.

[17] H. Jiang, H. Lu, W. Wang, and B. C. Ooi. XR-Tree: Indexing

XML data for efﬁcient structural joins. In ICDE, 2003.

[18] H. Jiang, W. Wang, H. Lu, and J. X. Yu. Holistic twig joins

on indexed XML documents. In VLDB, 2003.

[19] Y. Li, C. Yu, and H. V. Jagadish. Schema-Free XQuery. In

VLDB, 2004.

[20] Z. Liu and Y. Chen. Identifying meaningful return

information for XML keyword search. In SIGMOD, 2007.

[21] J. Lu, T. Chen, and T. W. Ling. Efﬁcient processing of XML

twig patterns with parent child edges: a look-ahead
approach. In CIKM, 2004.

843WWW 2008 / Refereed Track: XML and Web Data - XML IApril 21-25, 2008 · Beijing, China 150

 100

 50

)
c
e
s
(

e
m
T

i

PathStack-R
IndexPaths-R
PartialMJ-R
PartialPathStack-R

 300

 200

 100

)
c
e
s
(

e
m
T

i

PathStack-R
IndexPaths-R
PartialMJ-R
PartialPathStack-R

PathStack-R
IndexPaths-R
PartialMJ-R
PartialPathStack-R

)
c
e
s
(

e
m
T

i

 300

 200

 100

 0

Q8

 0

Q1

Q3

Q2

Q8
(a) Execution time (Treebank)

Q7

Q6

Q5

Q4

Query Treebank
94859
94859
678011
1565355

Q1
Q2
Q3
Q4

 0

Q1

Q2

Q3

Q4

Q5

Q6

Q7
(b) Execution time (SD1)
SD1
99576
439725
855090
1742980

SD2 Query Treebank SD1
3527
3715
5510
6081

884899
2991754
1542299
3779766

1136
1136
1239
1258

Q5
Q6
Q7
Q8

SD2
39392
51058
45944
51583

Q1

Q2

Q3

Q7
(c) Execution time (SD2)

Q6

Q5

Q4

Q8

(d) Number of results

Figure 10: Evaluation of various types of queries for ﬁxed datasets.

IndexPaths-R
PartialMJ-R
PartialPathStack-R

 600

 400

 200

)
c
e
s
(

e
m
T

i

IndexPaths-R
PartialMJ-R
PartialPathStack-R

 600

 400

 200

)
c
e
s
(

e
m
T

i

IndexPaths-R
PartialMJ-R
PartialPathStack-R

 600

 400

 200

)
c
e
s
(

e
m
T

i

 0
0.5M

1.5M

1M
2M
Input size (number of nodes)
(a) Q2 execution time

2.5M

 0
0.5M

1.5M

1M
2M
Input size (number of nodes)
(b) Q4 execution time

2.5M

 0
0.5M

1.5M

1M
2M
Input size (number of nodes)
(c) Q8 execution time

2.5M

2.5M

2M

1.5M

1M

0.5M

)
s
e
d
o
n

f
o

r
e
b
m
u
n
(

e
z
s

t
u
p
t
u
O

i

0
0.5M

2.5M

2M

1.5M

1M

0.5M

)
s
e
d
o
n

f
o

r
e
b
m
u
n
(

e
z
s

t
u
p
t
u
O

i

2.5M

2M

1.5M

1M

0.5M

)
s
e
d
o
n

f
o

r
e
b
m
u
n
(

e
z
s

t
u
p
t
u
O

i

1.5M

1M
2M
Input size (number of nodes)
(d) Q2 results

2.5M

0
0.5M

1.5M

1M
2M
Input size (number of nodes)
(e) Q4 results

2.5M

0
0.5M

1.5M

1M
2M
Input size (number of nodes)
(f) Q8 results

2.5M

Figure 11: Evaluation of queries varying the input size.

[23] D. Olteanu. Forward node-selecting queries over trees. ACM

[29] D. Theodoratos and X. Wu. Assigning semantics to partial

[22] T. Milo and D. Suciu. Index structures for path expressions.

In ICDT, 1999.

Trans. Database Syst., 2007.

[24] D. Olteanu, H. Meuss, T. Furche, and F. Bry. XPath:

Looking forward. In EDBT Worshops, 2002.

[25] F. Peng and S. S. Chawathe. XPath queries on streaming

data. In SIGMOD, 2003.

[26] S. Souldatos, X. Wu, D. Theodoratos, T. Dalamagas, and
T. Sell. Evaluation of partial path queries on XML data. In
CIKM, 2007.

[27] D. Theodoratos, T. Dalamagas, A. Koufopoulos, and

N. Gehani. Semantic querying of tree-structured data sources
using partially speciﬁed tree patterns. In CIKM, 2005.

[28] D. Theodoratos, S. Souldatos, T. Dalamagas, P. Placek, and

T. Sellis. Heuristic containment check of partial tree-pattern
queries in the presence of index graphs. In CIKM, 2006.

tree-pattern queries. Data Knowl. Eng., 2007.

[30] Y. Wu, J. M. Patel, and H. V. Jagadish. Structural join order

selection for XML query optimization. In ICDE, 2003.
[31] B. Yang, M. Fontoura, E. Shekita, S. Rajagopalan, and

K. Beyer. Virtual cursors for XML joins. In CIKM, 2004.

[32] C. Zhang, J. Naughton, D. DeWitt, Q. Luo, and G. Lohman.

On supporting containment queries in relational database
management systems. In SIGMOD, 2001.

844WWW 2008 / Refereed Track: XML and Web Data - XML IApril 21-25, 2008 · Beijing, China
