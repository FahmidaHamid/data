[1]  Farrell, J., Lausen, H.: Semantic Annotations for WSDL and

XML Schema. W3C Recommendation, 2007.

[2]  Hartmann, J. and Sure Y., An Infrastructure for Scalable,

Reliable Semantic Portals, IEEE Intelligent Systems 19(3).
[3]  Lausen, H., Polleres, A., Roman, D.: Web Service Modeling

Ontology (WSMO). W3C Member Submission, 2005.

[4]  Maedche, A. et al., Semantic portal â€“ The SEAL approach,

In Spinning the Semantic Web, MIT Press, 2003.

[5]  Martin, D. et al.: OWL-S: Semantic markup for web services.

W3C Member Submission, 2004.

[6]  Nitzsche, J. et al., BPEL for Semantic Web Services

(BPEL4SWS), Workshop on Agents, Web Services and
Ontologies Merging, OTM 2007.

[7]  Semantic Annotations for WSDL and XML Schema, W3C

Recommendation, 28 August 2007.

[8]  Web Services Business Process Execution Language Version

2.0, OASIS Standard, April 2007.

[9]  WS-BPEL Extension for People (BPEL4People), Version

1.0, June 2007.



Figure 1. The overall architecture of the portal
2.1.2  Seamless integration of new Scenarios
Thanks to semantics, the generation of service orchestration (aka
Scenario  in  the  portal)  can  be  defined  at  a  business  level,  with
minimum knowledge of information systems. From this business
point of view, the semantic orchestration is not based on concrete
(web)  service  implementation  but  on  a  set  of  goals.  Some
examples of goals can be "find a city", "pass an order", "validate
an  account  number".  To  insure  the  meaning,  these  goals  are
expressed in term  of  semantic  concepts  chosen  in  ontologies,  as
well  as  their  inputs  and  outputs.  Today,  the  method  we  use  is
similar  to  BPEL4SWS[6],  using  SAWSDL [7]  descriptions  for
abstract  services,  but  lies  in  a  specific  development  we  use  as
proof of concept and we need to enrich. The scenarios are created
by  an  authoring  tool  taking  semantics  into  account  to  perform
transformation towards regular BPEL.

tested

2.2  Implementation and tests
The portal was implemented on a single desktop computer (3Ghz,
3  GB  memory)  in  J2EE  using  JBoss  Portal.  It  uses  any  BPEL
compliant  orchestration  engine  (we
the  portal  with
Orchestra and Active BPEL). Jena Framework is used to provide
programmatic environment for RDF and OWL.
Different underlying  repositories  can  be  used  since  modules  use
an  abstraction  layer  (using  Jena  framework  and  SPARQL).  The
portal  was  tested  with  two  different  repositories  in  backend:
Oracle  RDF  and  Derby.  With  the  first  one,  some  reasoning
features  are  directly  included  at  the  repository  level  but  for  the
second one, reasoning is done with Jena.

WWW 2009 MADRID!Poster Sessions: Thursday, April 23, 20091138
