
[1] Nvidia CUDA programming guide, June 2007.

http://www.nvidia.com/object/cuda develop.html.

[2] R. Baeza-Yates, A. Gionis, F. Junqueira, V. Murdock,

V. Plachouras, and F. Silvestri. The impact of caching on search
engines. In Proc. of the 30th Annual SIGIR Conf. on Research
and Development in Information Retrieval, July 2007.

[3] G. Blelloch. Preﬁx sums and their applications. In J. H. Reif,

editor, Synthesis of Parallel Algorithms, pages 35–60, 1993.

[4] S. Brin and L. Page. The anatomy of a large-scale hypertextual
web search engine. In 7th World Wide Web Conference, 1998.

[5] A. Broder, D. Carmel, M. Herscovici, A. Soﬀer, and J. Zien.

Eﬃcient query evaluation using a two-level retrieval process. In
Proc. of the 12th Conf. on Information and Knowledge
Management, pages 426–434, Nov 2003.

[6] J. Cho and A. Ntoulas. Pruning policies for two-tiered inverted
index with correctness guarantee. In Proc. of the 30th Annual
SIGIR Conf. on Research and Development in Information
Retrieval, July 2007.

[7] R. Cole. Parallel merge sort. SIAM J. on Computing, 17, 1988.
[8] N. Govindaraju, J. Gray, R. Kumar, and D. Manocha.

Gputerasort: high performance graphics co-processor sorting for
large database management. In Proc. of the Int. Conf. on
Management of Data, 2006.

[9] N. Govindaraju, B. Lloyd, W. Wang, M. Lin, and D. Manocha.

Fast computation of database operations using graphics
processors. In Proc. of the Int. Conf. on Computer Graphics
and Interactive Techniques, 2005.

[10] M. Harris. Parallel preﬁx sum (scan) with CUDA, April 2007.

http://developer.download.nvidia.com/compute/cuda/sdk/website
/projects/scan/doc/scan.pdf.

[11] B. He, W. Fang, Q. Luo, N. Govindaraju, and T. Wang. Mars:

A mapreduce framework on graphics processors. In Proc. of
Parallel Architectures and Compilation Techniques, 2008.

[12] B. He, K. Yang, R. Fang, M. Lu, N. Govindaraju, Q. Luo, and
P. Sander. Relational joins on graphics processors. In Proc. of
the ACM SIGMOD International Conference, 2008.

[13] S. Heman. Super-scalar database compression between RAM

and CPU-cache. MS Thesis, Centrum voor Wiskunde en
Informatica, Amsterdam, Netherlands, July 2005.

[14] S. Heman, M. Zukowski, A. de Vries, and P. Boncz.

MonetDBX100 at the 2006 TREC Terabyte Track. In Proc. of
the 15th Text REtrieval Conference (TREC), 2006.

[15] M. Kaszkiel, J. Zobel, and R. Sacks-Davis. Eﬃcient passage

ranking for document databases. ACM Transactions on
Information Systems, 17(4):406–439, Oct. 1999.

[16] E. Lawler, J. Lenstra, A. Kan, and D. Shmoys. Sequencing and

scheduling: algorithms and complexity. Elsevier, 1993.

[17] D. Lichterman. Course project for ECE498, Univ. of Illinois at

Urbana-Champaign. http://courses.ece.uiuc.edu/ece498/al1
/Archive/Spring2007/HallOfFame.html.

[18] A. Moﬀat and J. Zobel. Self-indexing inverted ﬁles for fast text

retrieval. ACM Trans. on Inf. Systems, 14(4):349–379, 1996.
[19] J. Owens, D. Luebke, N. Govindaraju, M. Harris, J. Kruger,

A. Lefohn, and T. Purcell. A survey of general-purpose
computation on graphics hardware. In Eurographics, State of
the Art Reports, Aug 2005.

[20] R.Blumofe and C.Leiserson. Scheduling multithreaded

computations by work stealing. Proc. of the IEEE Symp. on
Foundations of Computer Science, 1994.

[21] K. Risvik, Y. Aasheim, and M. Lidal. Multi-tier architecture for

web search engines. In 1st Latin Amer. Web Congress, 2003.
[22] S. Robertson, S. Walker, S. Jones, M. Hancock-Beaulieu, and

M. Gatford. Okapi at trec-3. In Proc. of the 3rd Text Retrieval
Conference (TREC), Nov 1994.

[23] J. Zhang, X. Long, and T. Suel. Performance of compressed

inverted list caching in search engines. In Proc. of the 17th Int.
World Wide Web Conference, April 2008.

[24] J. Zobel and A. Moﬀat. Inverted ﬁles for text search engines.

ACM Computing Surveys, 38(2), 2006.

[25] M. Zukowski, S. Heman, N. Nes, and P. Boncz. Super-scalar
RAM-CPU cache compression. In Proc. of the Int. Conf. on
Data Engineering, 2006.

WWW 2009 MADRID!Track: Search / Session: Query Processing430
