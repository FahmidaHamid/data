[1]  Consumer Electronics Association (CEA), CEA-2014 Web-

based Protocol and Framework for Remote User Interfaces on
UPnP™ Networks and the Internet (Web4CE), June 2006,
http://www.ce.org/standards/StandardDetails.aspx?Id=2865&n
umber=CEA-2014

[2]  Dees, W., Shrubsole, P.; Web4CE: Accessing web-based

applications on consumer devices; 2007;
http://www2007.org/program/poster.php?id=1017

[3]  Esenther, A.; Instant Co-Browsing: Lightweight Real-Time

Collaborative Web Browsing; In Proc. of the 11th Int. WWW
Conference; 2002.

[4]  Farnham, S.,  Zaner, M.,  Cheng, L.,; Supporting Sociability in
a Shared Browser; Virtual Worlds Group, Microsoft Research;

[5]  Gerosa, L., Giordani, A., Ronchetti.; Symmetric Synchronous

Collaborative Navigation;  Proceedings of the 2004 IADIS
International WWW/Internet Conference, Madrid, Spain;
2004.

[6]  Greenberg, S.,  Roseman, M.;  GroupWeb: a www browser as

real-time groupware; ACM; 1996.

[7]  Hoyos-Rivera, G. , Lima-Gomes, R., Courtiat, J.;  CoLab: A
Flexible Collaborative Web Browsing Tool;  Proceedings of
the 19th International Conference on Advanced Information
Networking and Applications; 2005.

[8]  Lowet D., Shrubsole P.; Content sharing and experience

sharing with Web4CE; TICSP Adjunct Proceedings of
EuroITV 2007.

[9]  OpenIPTV  forum;  Functional  Architecture  –  V  1.1,;  2008;

http://www.openiptvforum.org/docs/OpenIPTV-
Functional_Architecture-V1_1-2008-01-15_APPROVED.pdf

[10] Paterson, I., Smith, D., Saint-Andre, P.;  XEP-0124:

Bidirectional-streams Over Synchronous HTTP (BOSH);
Version 1.7; 2008; http://www.jabber.org/jeps/jep-0124.html

[11] Pixley, T.; Document Object Model (DOM) Level 2 Events

specification; Version 1.0; 2000;
http://www.w3.org/TR/DOM-Level-2-Events/

[12] Stenback, J., Le Hegaret, P., Le Hors, A.; Document Object

Model (DOM) Level 2 HTML Specification; W3C
Recommendation; 2003.

[13] Wang, F., Rabsch, C., Liu, P.. Native Web Browser Enabled

SVG-based Collaborative Multimedia Annotation for Medical
Image. ICDE 2008: 1219-1228

[14] Waterson, C.. Gecko overview; June 2002;

www.mozilla.org/newlayout/doc/gecko-overview.ppt

mouse is moved (generating a lot of “mousemove” events), when a
key  is  pressed  continuously  or  during  scrolling.    To  compare  this
with  screen  sharing  solutions,  we  have  tested  two  screen-sharing
products:  Microsoft  NetMeeting24 and  Citrix  GoToMeeting25 on  a
100 Mbit LAN. Given enough bandwidth and for static web pages,
both  NetMeeting  and  GoToMeeting  performed  relatively  well.
However,  when  web  pages  contain  frequent  screen  updates,  both
systems  needed  high  bandwidth  and  still  had  a  low  frame  rate.
GoToMeeting  used  a  maximum  of  around  4  Mbit/s  in  case  of
frequent  changes  on  the  screen  and  Microsoft  NetMeeting  around
20Mbit/s.  Even  when  using  this  high  bandwidth,  NetMeeting
achieved a very low frame rate (at most 1 frame per second).

7.  CONCLUSIONS
This  paper  introduces  a  co-browsing  solution  that  allows  the  co-
browsing of dynamic, JavaScripted web pages. The  solution  works
at the DOM level, can be implemented in JavaScript and requires no
extensions to the browser. Compared with screen sharing solutions,
the  needed  bandwidth  for  synchronization  is  relatively  low  and  it
offers a better user experience.

While  the  presented  solution  is  aimed  at  Web4CE,  it  is  also
applicable  to  dynamic  (X)HTML  web  pages  on  PCs  and  mobile
devices. Also for professional collaboration in the PC world, where
there  is  currently  a  trend  to  also  provide  collaborative  applications
via a native browser, we believe that our co-browsing solution  can
play a valuable role.

The co-browsing solution that we propose is generic in that it does
not  pose  requirements  to  web  pages.  However,  if  web  developers
adhere  to  a  few  basic  guidelines  to  support  co-browsing,  the
solution  can  be  made  much  simpler  and  also  a  co-browsing  proxy
can  be  left  out.  Similarly,  the  support  of  a  few  features  by  the
browser  can  simplify  the  implementation  and  can  make  it  more
robust against synchronization losses. Moreover, the solution could
also be directly integrated into standard browsers which also would
improve the performance on embedded platforms (e.g. mobiles and
TVs).

The  presented  co-browsing  solution  enables  users  to  start  a  co-
browsing session from a given URL. This does not allow a user to
start a co-browsing session at any point in time, since the JavaScript
application may have changed state after loading the URL e.g. due
to  user  interaction.  We  refer  to  this  type  of  immediate  sharing  as
catch-up  co-browsing  and  we  are  currently  investigating  possible
mechanisms  to  provide  such  functionality.  Other  aspects  of  further
work include the co-watching of web-based multimedia content and
an  extended  session  management  which  includes  session  with
multiple users, content items and services.

With our proof-of-concept demonstrator we’ve shown the technical
feasibility  of  our  solution.  The  demonstrator  provides  an
“Experience  sharing”  framework  which  combines  the  co-browsing
of  arbitrary  (multimedia)  web  application  with  communication
(audio  and  video  chat)  and  targets  the  usage  on  a  TV  from  the
comfort of the living room.




24 http://www.microsoft.com/windows/NetMeeting/default.ASP
25 https://www.gotomeeting.com/

WWW 2009 MADRID!Track: Web Engineering / Session: Client Side Web Engineering950
